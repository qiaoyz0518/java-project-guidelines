{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Java \u9879\u76ee\u5de5\u7a0b\u5316\u5f00\u53d1\u6307\u5357 \u00b6 \u8fd9\u662f\u4e00\u4e2ajava web \u9879\u76ee\u7684\u5feb\u901f\u5f00\u53d1\u6307\u5357\u3002\u5305\u542b\u6700\u57fa\u672c\u7684\u73af\u5883\u914d\u7f6e\uff0c\u9879\u76ee\u642d\u5efa\uff0c\u5e76\u914d\u6709\u7b80\u5355\u7684\u4f8b\u5b50\u53c2\u8003\u3002 \u5f00\u53d1\u73af\u5883\u51c6\u5907 \u00b6 \u514b\u9686\u9879\u76ee \u00b6 \u672c\u5730\u8fd0\u884c \u00b6 \u6253\u5305\u53d1\u5e03 \u00b6","title":"Java \u9879\u76ee\u5de5\u7a0b\u5316\u5f00\u53d1\u6307\u5357"},{"location":"#java","text":"\u8fd9\u662f\u4e00\u4e2ajava web \u9879\u76ee\u7684\u5feb\u901f\u5f00\u53d1\u6307\u5357\u3002\u5305\u542b\u6700\u57fa\u672c\u7684\u73af\u5883\u914d\u7f6e\uff0c\u9879\u76ee\u642d\u5efa\uff0c\u5e76\u914d\u6709\u7b80\u5355\u7684\u4f8b\u5b50\u53c2\u8003\u3002","title":"Java \u9879\u76ee\u5de5\u7a0b\u5316\u5f00\u53d1\u6307\u5357"},{"location":"#_1","text":"","title":"\u5f00\u53d1\u73af\u5883\u51c6\u5907"},{"location":"#_2","text":"","title":"\u514b\u9686\u9879\u76ee"},{"location":"#_3","text":"","title":"\u672c\u5730\u8fd0\u884c"},{"location":"#_4","text":"","title":"\u6253\u5305\u53d1\u5e03"},{"location":"quick_start/","text":"\u5feb\u901f\u4e0a\u624b \u00b6 \u672c\u7ae0\u5c06\u6559\u4f60\u5982\u4f55\u4f7f\u7528 Gradle \u521b\u5efa\u4e00\u4e2a Spring Boot \u5e94\u7528\u7a0b\u5e8f\u3002 \u5f00\u53d1\u73af\u5883\u51c6\u5907 \u00b6 gradle\uff1a jdk maven spring boot \u8fd0\u884c\u73af\u5883\u51c6\u5907 \u00b6 JDK\u3001Maven\u3001Gradle \u5f00\u53d1\u5de5\u5177 \u00b6 Idea \u521d\u59cb\u5316\u9879\u76ee \u00b6 \u529f\u80fd\u5f00\u53d1 \u00b6 todo...","title":"\u5feb\u901f\u4e0a\u624b"},{"location":"quick_start/#_1","text":"\u672c\u7ae0\u5c06\u6559\u4f60\u5982\u4f55\u4f7f\u7528 Gradle \u521b\u5efa\u4e00\u4e2a Spring Boot \u5e94\u7528\u7a0b\u5e8f\u3002","title":"\u5feb\u901f\u4e0a\u624b"},{"location":"quick_start/#_2","text":"gradle\uff1a jdk maven spring boot","title":"\u5f00\u53d1\u73af\u5883\u51c6\u5907"},{"location":"quick_start/#_3","text":"JDK\u3001Maven\u3001Gradle","title":"\u8fd0\u884c\u73af\u5883\u51c6\u5907"},{"location":"quick_start/#_4","text":"Idea","title":"\u5f00\u53d1\u5de5\u5177"},{"location":"quick_start/#_5","text":"","title":"\u521d\u59cb\u5316\u9879\u76ee"},{"location":"quick_start/#_6","text":"todo...","title":"\u529f\u80fd\u5f00\u53d1"},{"location":"practice/","text":"\u5f00\u53d1\u5b9e\u8df5 \u00b6 to do..","title":"\u5f00\u53d1\u5b9e\u8df5"},{"location":"practice/#_1","text":"to do..","title":"\u5f00\u53d1\u5b9e\u8df5"},{"location":"preparation/","text":"\u5f00\u53d1\u524d\u51c6\u5907 \u00b6 \u73af\u5883 \u00b6 \u91cd\u8981 \u4ee5\u4e0blinux \u73af\u5883 shell \u7ec8\u7aef\u4f7f\u7528zsh\uff0c\u5982\u679c\u4f7f\u7528\u9ed8\u8ba4\u7684 bash\uff0c\u8bf7\u7f16\u8f91 ~/.bashrc \u6765\u64cd\u4f5c\u3002 git \u5b89\u88c5 \u00b6 ubuntu-linux windows \u5b89\u88c5 git\" $ apt install git \uff08\u53ef\u9009\uff09\u5982\u679c\u9700\u8981\u4e0b\u8f7d\u6700\u65b0\u7248\u672c\u7684git\uff0c\u8bf7\u52a0\u5165\u5982\u4e0bppa \u4ed3\u5e93 $ add-apt-repository ppa:git-core/ppa && apt update && apt install git \u4e0b\u8f7d git for windows \uff0c \u6dd8\u5b9d\u955c\u50cf \uff1b \u5b89\u88c5 Git for Windows (\u9ed8\u8ba4\u5df2\u5305\u542b bit bash )\u3002 SDKMAN \uff08\u63a8\u8350\uff09 \u00b6 SDKMAN \u662f\u4e00\u4e2aJVM \u5e73\u53f0\u73af\u5883\u96c6\u6210\u7ba1\u7406\u5de5\u5177\uff0c\u53ef\u4ee5\u4f7f\u7528\u5b83\u5f88\u65b9\u4fbf\u5bf9\u5404\u7248\u672c sdk\u7684\u8fdb\u884c\u7ba1\u7406\u3002\u4f8b\u5982 jdk \uff0c gradle \uff0c maven \u7b49\u4f17\u591ajvm\u5de5\u5177\u7248\u672c\u7684\u5207\u6362 \u5b89\u88c5\uff0c\u5378\u8f7d\u7b49\u3002 SDKMAN! \u662f\u4e00\u4e2a\u5728 unix \u7cfb\u7edf\u73af\u5883\u4e0b\uff0c\u4e3a\u4e00\u4e9b \u8f6f\u4ef6\u5de5\u5177\u5305 \u7ba1\u7406\u591a\u7248\u672c\u95ee\u9898\u7684\u5de5\u5177\u3002\u63d0\u4f9b\u4e86\u4e00\u4e2a\u65b9\u4fbf\u7684\u547d\u4ee4\u884c\u63a5\u53e3(CLI)\uff0c \u65b9\u4fbf\u6267\u884c \u201c\u5b89\u88c5\u201d, \u201c\u5207\u6362\u201d\uff0c \u201c\u79fb\u9664\u201d\uff0c\u201c\u5217\u51fa\u201d \u76f8\u5173\u7248\u672c\u5de5\u5177\u5305\u7684\u547d\u4ee4\u3002\u5b83\u4ee5\u524d\u88ab\u79f0\u4e3a GVM\uff0c\u5373 Groovy \u73af\u5883\u7ba1\u7406\u5668\uff0c\u5176\u7075\u611f\u6765\u81ea\u4e8e Ruby \u793e\u533a\u666e\u904d\u4f7f\u7528\u7684\u975e\u5e38\u6709\u7528\u7684 RVM \u548c rbenv \u5de5\u5177. Making life easier. \u8282\u7701\u4e86\u53bb\u5b98\u7f51\u4e0b\u8f7d\u5b89\u88c5\u7684\u6b65\u9aa4\uff0c \u7701\u7565\u4e86\u73af\u5883\u53d8\u91cf\u7684\u914d\u7f6e\u3002 \u652f\u6301 N \u591a\u7684 JVM \u5de5\u5177\u5305\u3002\u4f8b\u5982 Java\u3001 Groovy\u3001 Scala\u3001 Kotlin \u548c Ceylon\u3002Ant\u3001 Gradle\u3001 Grails\u3001 Maven\u3001 SBT\u3001 Spark\u3001 Spring Boot\u3001 Vert.x \u7b49\u3002 \u8f7b\u91cf\u7ea7.\u7528 bash \u7f16\u5199\uff0c\u53ea\u9700\u8981 curl \u548c zip/unzip \u5c31\u53ef\u4ee5\u51fa\u73b0\u5728\u7cfb\u7edf\u4e2d\uff0c\u751a\u81f3\u53ef\u4ee5\u4e0e ZSH \u4e00\u8d77\u5de5\u4f5c\u3002 \u63d0\u793a windows \u73af\u5883\u5f00\u53d1\u9700\u8981\u5b89\u88c5 \u7c7b\u4f3c\u4e8e WSL \u4e00\u6837\u7684linux \u96c6\u6210\u73af\u5883\uff0c\u5982\u679c\u7f3a\u4e4flinux\u5f00\u53d1\u7ecf\u9a8c, \u5f00\u53d1\u73af\u5883\u96c6\u6210\u8bf7\u53c2\u9605 SDK \u5355\u72ec\u624b\u52a8\u5b89\u88c5 SDKMAN\u5b89\u88c5 \u00b6 ubuntu-linux windows \u4e0b\u8f7d\u5e76\u6267\u884c\u5b89\u88c5\u811a\u672c\uff1b curl -s \"https://get.sdkman.io\" | bash (\u53ef\u9009) \u5c06 sdkman \u5b89\u88c5\u5230\u6307\u5b9a\u4f4d\u7f6e export SDKMAN_DIR = \"/usr/local/sdkman\" && curl -s \"https://get.sdkman.io\" | bash \u6267\u884c\u811a\u672c\uff1b source \" $HOME /.sdkman/bin/sdkman-init.sh\" \u9a8c\u8bc1\u662f\u5426\u5b89\u88c5\u5b8c\u6210\uff1b sdk version \u663e\u793a\u5982\u4e0b\uff1a sdkman 5 .0.0+51 \u5b89\u88c5 linux \u5b50\u7cfb\u7edf\u3002\u73b0\u5728\u6709\u5f88\u591a\u65b9\u5f0f\u53ef\u4ee5\u5728 Windows \u4e0a\u5b89\u88c5 SDKMAN\uff1a \u7b2c\u4e00\u4e2a\u89e3\u51b3\u65b9\u6848\u662f\uff1a\u5728\u5c1d\u8bd5 SDKMAN \u5b89\u88c5\u4e4b\u524d\u4e3a windows \u5b89\u88c5 linux \u5b50\u7cfb\u7edf - WSL\u3002\u60a8\u9700\u8981\u4e00\u4e2a\u57fa\u672c\u7684\u5de5\u5177\u94fe\uff0c \u5305\u62ec bash \u3001 zip \u3001 unzip \u548c curl (\u7279\u6b8a\u60c5\u51b5\u9700\u8981 tar \u548c gzip )\u3002 \u53e6\u4e00\u4e2a\u89e3\u51b3\u65b9\u6848\u662f\uff1a \u5728\u5c1d\u8bd5 SDKMAN \u5b89\u88c5\u4e4b\u524d\u5148\u5b89\u88c5 Cygwin\u3002\u4e3a\u4e86\u4f7f\u6211\u4eec\u7684\u8f6f\u4ef6\u6b63\u5e38\u8fd0\u884c\uff0c\u6211\u4eec\u8981\u6c42 Cygwin \u5b89\u88c5\u7684\u5de5\u5177\u94fe\u4e0e WSL \u76f8\u540c\u3002 \u7b2c\u4e09\u4e2a\u89e3\u51b3\u65b9\u6848\u662f\u4e3a\u4f7f\u7528 Git Bash for Windows \u73af\u5883\u7684 Git \u7528\u6237\u63d0\u4f9b\u7684\u3002\u4e3a\u4e86\u5b9e\u73b0\u8fd9\u4e00\u70b9\uff0c\u9700\u8981\u7528 MinGW \u5de5\u5177\u5bf9\u73af\u5883\u8fdb\u884c\u8865\u5145\uff0c\u4ee5\u6dfb\u52a0\u5fc5\u8981\u7684\u5de5\u5177\u94fe\u6765\u5b9e\u73b0\u529f\u80fd\u3002 \u5b89\u88c5 sdkman\uff0c\u53c2\u89c1linux \u5b89\u88c5\u8fc7\u7a0b\u3002 TIP sdkman \u5b89\u88c5\u7684 sdk\u5de5\u5177\u5305\u65e0\u9700\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\u3002 SDK \u5b89\u88c5 \u00b6 sdkman \u5982\u679c\u5b98\u65b9\u4ed3\u5e93\u6e90\u592a\u6162\uff0c\u5efa\u8bae\u4f7f\u7528 \u201c\u672c\u5730\u7248\u672c\u201d \u5b89\u88c5\u7684\u65b9\u5f0f\u5b89\u88c5sdk\uff0c\u7136\u540e\u4ea4\u8fc7sdkman \u505a\u7248\u672c\u7ba1\u7406\u3002\u53c2\u9605 SDK \u672c\u5730\u7248\u672c\u5b89\u88c5 \u7ae0\u8282 . \u6ce8\u610f \u5b89\u88c5\u6307\u5b9a\u7248\u672c\u53f7\uff0c\u8bf7\u9009\u62e9 Identifier \u7684\u503c\u3002 JDK gradle maven 1.\u67e5\u770b\u53ef\u9009\u7684 java \u7248\u672c\uff1b sdk ls java 2.\u9009\u62e9\u5408\u9002\u7684\u7248\u672c\u8fdb\u884c\u5b89\u88c5; ```bash sdk install java 8.0.292.j9-adpt ``` \uff08\u63a8\u8350\uff09\u201c\u672c\u5730\u7248\u672c\u5b89\u88c5\u201d \u5b89\u88c5jdk\u3002\u76f8\u5173\u6559\u7a0b\u79fb\u6b65 SDK \u672c\u5730\u7248\u672c\u5b89\u88c5 \u7ae0\u8282 \u3002 \u67e5\u770b\u53ef\u9009\u7684 gradle \u7248\u672c\uff1b sdk ls gradle \u9009\u62e9\u5408\u9002\u7684\u7248\u672c\u8fdb\u884c\u5b89\u88c5; sdk install gradle 4 .10.3 \u67e5\u770b\u53ef\u9009\u7684 maven \u7248\u672c\uff1b sdk ls maven \u9009\u62e9\u5408\u9002\u7684\u7248\u672c\u8fdb\u884c\u5b89\u88c5\uff08\u53ef\u4ee5\u9009\u62e9\u6700\u65b0\u7248\u672c\uff09; sdk install maven SDK \u672c\u5730\u7248\u672c\u5b89\u88c5 \u00b6 \u56e0\u4e3asdkman\u4ed3\u5e93\u7f51\u7edc\u9f9f\u901f\u4ee5\u53ca\u4f17\u6240\u5468\u77e5\u7684\u539f\u56e0\uff0c\u5f53\u51fa\u73b0\u7f51\u7edc\u95ee\u9898\u65f6\uff0c\u5efa\u8bae\u4f7f\u7528 \u201c\u672c\u5730\u7248\u672c\u201d \u5b89\u88c5\u5bf9\u5e94\u7684 sdk \u7248\u672c\uff0c\u7136\u540e\u5c06\u7248\u672c\u7ba1\u7406\u4ea4\u7ed9sdkman \u6765\u7ba1\u7406. \u4ee5\u4e0b\u4ee5 \u672c\u5730\u5b89\u88c5 open jdk8 \u4f5c\u4e3a\u4f8b\u5b50\u6765\u9610\u8ff0\u5b89\u88c5\u6b65\u9aa4\uff1a \u5c06 jdk \u5b89\u88c5\u5305\u89e3\u538b\u5230\u6307\u5b9a\u76ee\u5f55\uff0c\u4f8b\u5982 ~/.jdks/ ,\u89e3\u538b\u7684\u5b8c\u6574\u8def\u5f84\u4e3a ~/.jdks/adopt-openjdk-1.8.0_275 , \u5c06\u672c\u5730\u5b89\u88c5\u5305\u7eb3\u5165 sdkman \u7248\u672c\u7ba1\u7406 \u547d\u4ee4\u683c\u5f0f\uff1a sdk install java {\u81ea\u5b9a\u4e49\u7248\u672c\u53f7} {jdk\u76ee\u5f55}; sdk install java 8 .0.275 ~/.jdks/adopt-openjdk-1.8.0_275 \u6fc0\u6d3b\u7248\u672c\uff1b sdk use java 8 .0.275 \u9a8c\u8bc1\u5f53\u524d\u7684 sdkman \u7ba1\u7406\u7684\u5f53\u524d java \u7248\u672c,\u63d2\u5361\u8f93\u51fa\u7ed3\u679c\u3002 sdk current java java -version \u5e38\u7528\u547d\u4ee4 \u00b6 commands: install or i <candidate> [version] [local-path] \u5b89\u88c5sdk uninstall or rm <candidate> <version> \u5378\u8f7dsdk list or ls [candidate] \u5217\u51fa\u652f\u6301\u5b89\u88c5\u7684sdk\u4fe1\u606f use or u <candidate> <version> \u5f53\u524d\u4f7f\u7528 sdk \u7684\u7248\u672c config \u7f16\u8f91 sdk \u914d\u7f6e default or d <candidate> [version] \u9ed8\u8ba4\u4f7f\u7528 sdk \u7248\u672c home or h <candidate> <version> \u663e\u793a sdk \u7684home\u76ee\u5f55 env or e [init|install|clear] \u4e3a\u5f53\u524d\u9879\u76ee\u521d\u59cb\u5316\uff0c\u5b89\u88c5\uff0c\u6e05\u7406sdk\u7684\u73af\u5883 current or c [candidate] \u663e\u793a\u5f53\u524d sdk \u4f7f\u7528\u7684\u7248\u672c flush [archives|tmp|broadcast|metadata|version] \u6e05\u7406 archives|tmp|broadcast|metadata|version \u7b49\u7f13\u5b58\u7a7a\u95f4 \u5355\u72ec\u624b\u52a8\u5b89\u88c5 \u00b6 \u5355\u72ec\u5b89\u88c5 sdk \u8bf7\u53c2\u9605 \u5b98\u65b9\u6587\u6863\u3002\u672c\u8282\u4e0d\u505a\u63cf\u8ff0\u3002 \u4ee5\u4e0b\u4e3a\u5b98\u65b9 sdk\u4e0b\u8f7d\u7f51\u5740\uff1a JDK8 GRADLE MAVEN \u73af\u5883\u53d8\u91cf\u914d\u7f6e \u00b6 windows \u73af\u5883\u53d8\u91cf\u914d\u7f6e\u7a97\u53e3\uff1a \u53f3\u952e This PC(\u6b64\u7535\u8111) -> Properties\uff08\u5c5e\u6027\uff09 -> Advanced system settings\uff08\u9ad8\u7ea7\u7cfb\u7edf\u8bbe\u7f6e\uff09 -> Environment Variables\uff08\u73af\u5883\u53d8\u91cf\uff09... JDK \u00b6 JAVA_HOME: \u4e00\u4e2a JDK \u6bd4\u8f83\u91cd\u8981\u7684\u73af\u5883\uff0c\u5f88\u591a\u57fa\u4e8e java\u73af\u5883\u7684\u5de5\u5177\u9ed8\u8ba4\u4f7f\u7528\u8be5\u73af\u5883\u53d8\u91cf\u3002 linux windows echo \" JAVA_HOME=/home/luwei/.sdkman/candidates/java/current export JAVA_HOME export CLASSPATH=.: ${ JAVA_HOME } /lib/tools.jar: ${ JAVA_HOME } /lib/dt.jar export PATH= $JAVA_HOME /bin:\\$PATH\" >> ~/.zshrc \u6253\u5f00 \u73af\u5883\u53d8\u91cf\u7a97\u53e3 \u65b0\u5efaJAVA_HOME \u53d8\u91cf \u70b9\u51fb New\uff08\u65b0\u5efa\uff09... \u6309\u94ae \u8f93\u5165: \u53d8\u91cf\u540d\uff1aJAVA_HOME \u53d8\u91cf\u503c\uff1a\u7535\u8111\u4e0aJDK\u5b89\u88c5\u7684\u7edd\u5bf9\u8def\u5f84 \u8f93\u5165\u5b8c\u6bd5\u540e\u70b9\u51fb OK\u3002 \u65b0\u5efa/\u4fee\u6539 CLASSPATH \u53d8\u91cf \u5982\u679c\u5b58\u5728 CLASSPATH \u53d8\u91cf\uff0c\u9009\u4e2d\u70b9\u51fb Edit(\u7f16\u8f91)\u3002 \u5982\u679c\u6ca1\u6709\uff0c\u70b9\u51fb New\uff08\u65b0\u5efa\uff09... \u65b0\u5efa\u3002 \u8f93\u5165/\u5728\u5df2\u6709\u7684\u53d8\u91cf\u503c\u540e\u9762\u6dfb\u52a0\uff1a \u53d8\u91cf\u540d\uff1a CLASSPATH \u53d8\u91cf\u503c\uff1a .;%JAVA_HOME%\\lib\\dt.jar;%JAVA_HOME%\\lib\\tools.jar; \u70b9\u51fb OK \u4fdd\u5b58\u3002 \u4fee\u6539 Path \u53d8\u91cf \u7531\u4e8e win10 \u7684\u4e0d\u540c\uff0c\u5f53\u9009\u4e2d Path \u53d8\u91cf\u7684\u65f6\u5019\uff0c\u7cfb\u7edf\u4f1a\u5f88\u65b9\u4fbf\u7684\u628a\u6240\u6709\u4e0d\u540c\u8def\u5f84\u90fd\u5206\u5f00\u4e86\uff0c\u4e0d\u4f1a\u50cf win7 \u6216\u8005 win8 \u90a3\u6837\u8fde\u5728\u4e00\u8d77\u3002 \u65b0\u5efa\u4e24\u6761\u8def\u5f84\uff1a %JAVA_HOME%\\bin %JAVA_HOME%\\jre\\bin \u68c0\u67e5 \u6253\u5f00 cmd\uff0c\u8f93\u5165 java\uff0c\u51fa\u73b0\u4e00\u8fde\u4e32\u7684\u6307\u4ee4\u63d0\u793a\uff0c\u8bf4\u660e\u914d\u7f6e\u6210\u529f\u4e86: GRADLE \u00b6 GRADLE_HOME: GRADLE \u7684\u5b89\u88c5\u8def\u5f84\u3002 GRADLE_USER_HOME: \u5b58\u653e gradle \u7f13\u5b58\u5305\u7684\u8def\u5f84\u3002\u4ee5\u66ff\u6362 ~/.gradle \u8def\u5f84\u3002 linux windows echo \" GRADLE_HOME=/data/home/luwei/.sdkman/candidates/gradle/4.10.3 export GRADLE_HOME export GRADLE_USER_HOME=/data/home/luwei/localGradle export PATH= $GRADLE_HOME /bin:\\$PATH\" >> ~/.zshrc \u6253\u5f00 \u73af\u5883\u53d8\u91cf\u7a97\u53e3 \u65b0\u5efa GRADLE_HOME \u53d8\u91cf \u70b9\u51fb New\uff08\u65b0\u5efa\uff09... \u6309\u94ae \u8f93\u5165: \u53d8\u91cf\u540d\uff1a GRADLE_HOME \u53d8\u91cf\u503c\uff1a\u7535\u8111\u4e0a gradle \u5b89\u88c5\u7684\u7edd\u5bf9\u8def\u5f84 \u8f93\u5165\u5b8c\u6bd5\u540e\u70b9\u51fb OK\u3002 \u65b0\u5efa/\u4fee\u6539 GRADLE_USER_HOME \u53d8\u91cf \u5982\u679c\u5b58\u5728 GRADLE_USER_HOME \u53d8\u91cf\uff0c\u9009\u4e2d\u70b9\u51fb Edit(\u7f16\u8f91)\u3002 \u5982\u679c\u6ca1\u6709\uff0c\u70b9\u51fb New\uff08\u65b0\u5efa\uff09... \u65b0\u5efa\u3002 \u8f93\u5165/\u5728\u5df2\u6709\u7684\u53d8\u91cf\u503c\u540e\u9762\u6dfb\u52a0\uff1a \u53d8\u91cf\u540d\uff1a GRADLE_USER_HOME \u53d8\u91cf\u503c\uff1a d://gradl_cache \u70b9\u51fb OK \u4fdd\u5b58\u3002 \u4fee\u6539 Path \u53d8\u91cf \u65b0\u5efa\u8def\u5f84\uff1a %GRADLE_HOME%\\bin \u68c0\u67e5 \u6253\u5f00 cmd\uff0c\u8f93\u5165 gradle --v \uff0c\u51fa\u73b0\u4e00\u8fde\u4e32\u7684\u6307\u4ee4\u63d0\u793a\uff0c\u8bf4\u660e\u914d\u7f6e\u6210\u529f\u4e86 MAVEN \u00b6 MAVEN_HOME : maven \u7684\u5b89\u88c5\u8def\u5f84\u3002 linux windows echo \" MAVEN_HOME=/data/home/luwei/.sdkman/candidates/maven/3.8.3 export MAVEN_HOME export PATH= $MAVEN_HOME /bin:\\$PATH\" >> ~/.zshrc \u6253\u5f00 \u73af\u5883\u53d8\u91cf\u7a97\u53e3 \u65b0\u5efa MAVEN_HOME \u53d8\u91cf \u70b9\u51fb New\uff08\u65b0\u5efa\uff09... \u6309\u94ae \u8f93\u5165: \u53d8\u91cf\u540d\uff1a MAVEN_HOME \u53d8\u91cf\u503c\uff1a\u7535\u8111\u4e0a maven \u5b89\u88c5\u7684\u7edd\u5bf9\u8def\u5f84 \u8f93\u5165\u5b8c\u6bd5\u540e\u70b9\u51fb OK\u3002 \u4fee\u6539 Path \u53d8\u91cf \u65b0\u5efa\u8def\u5f84\uff1a %MAVEN_HOME%\\bin \u68c0\u67e5 \u6253\u5f00 cmd\uff0c\u8f93\u5165 mvn --v \uff0c\u51fa\u73b0\u4e00\u8fde\u4e32\u7684\u6307\u4ee4\u63d0\u793a\uff0c\u8bf4\u660e\u914d\u7f6e\u6210\u529f\u4e86 \u9879\u76ee\u5b9e\u8df5 \u00b6 \u521d\u59cb\u5316\u9879\u76ee \u00b6 \u7531\u4e8e\u6211\u4eec\u4f7f\u7528 gradle \u4f5c\u4e3a\u5e94\u7528\u7ba1\u7406\u5de5\u5177\uff0c\u56e0\u6b64\u4f7f\u7528 gradle init \u521d\u59cb\u5316\u4e00\u4e2a\u9879\u76ee\u9aa8\u67b6\u8c8c\u4f3c\u662f\u4e00\u4e2a\u4e0d\u9519\u7684\u9009\u62e9\u3002 \u5f53\u7136\u4e5f\u53ef\u4ee5\u9009\u62e9 mvn init , idea\u5de5\u5177, spring initializr \u7b49\u7b49\u65b9\u5f0f\u6765\u521d\u59cb\u5316\u9879\u76ee \u542f\u52a8\u7ec8\u7aef,\u521d\u59cb\u5316\uff1b gradle init \u6587\u4ef6\u786e\u8ba4\uff1b \u53ef\u4ee5\u770b\u5230\u4e00\u5171\u521b\u5efa\u4e862\u4e2a\u76ee\u5f55\u548c6\u4e2a\u6587\u4ef6\uff0c\u5176\u4e2d2\u4e2a\u76ee\u5f55\u548c4\u4e2a\u6587\u4ef6\u90fd\u8ddfwrapper\u6709\u5173\uff1a . \u251c\u2500\u2500 build.gradle \u251c\u2500\u2500 gradle \u2502 \u2514\u2500\u2500 wrapper \u2502 \u251c\u2500\u2500 gradle-wrapper.jar \u2502 \u2514\u2500\u2500 gradle-wrapper.properties \u251c\u2500\u2500 gradlew \u251c\u2500\u2500 gradlew.bat \u2514\u2500\u2500 settings.gradle gradlew\uff1alinux\u6216\u8005Unix\u4e0b\u7528\u4e8e\u6267\u884cwrapper\u547d\u4ee4\u7684Shell\u811a\u672c gradlew.bat\uff1aWindows\u4e0b\u7528\u4e8e\u6267\u884cwrapper\u547d\u4ee4\u7684\u6279\u5904\u7406\u811a\u672c gradle-wrapper.jar\uff1a\u7528\u4e8e\u4e0b\u8f7dGradle\u7684\u76f8\u5173\u4ee3\u7801\u5b9e\u73b0 gradle-wrapper.properties\uff1awrapper\u6240\u4f7f\u7528\u7684\u914d\u7f6e\u4fe1\u606f\uff0c\u6bd4\u5982gradle\u7684\u7248\u672c\u7b49\u4fe1\u606f build.gradle: \u7528\u4e8e\u5b58\u653e\u6784\u5efa\u76f8\u5173\u7684Task \u589e\u52a0\u6e90\u7801\u5305 \u5728\u9879\u76ee\u6839\u76ee\u5f55\u521b\u5efa\u4ee5\u4e0b\u76ee\u5f55 src/main/java : java \u6e90\u7801\u76ee\u5f55\uff1b src/main/resources : \u9879\u76ee\u9759\u6001\u8d44\u6e90\u6587\u4ef6\u76ee\u5f55\uff1b src/test : \u5355\u5143\u6d4b\u8bd5\u76ee\u5f55\uff1b \u9879\u76ee\u7ba1\u7406 \u00b6 \u6839\u76ee\u5f55 build.gradle \u5305\u542b\u6709\u6574\u4e2a\u9879\u76ee\u7684\u6784\u5efa\u811a\u672c\u3002\u5b83\u7684\u5de5\u4f5c\u5305\u542b\u6574\u4e2a\u9879\u76ee\u7684\u6e90\u7801\u6784\u6210\uff0c\u63d2\u4ef6\u7ba1\u7406\uff0c\u4f9d\u8d56\u7ba1\u7406\u7b49 \u6700\u7b80\u5355\u7684\u9879\u76ee \u811a\u672c\u5982\u4e0b\uff1a plugins { // (1) id 'org.springframework.boot' version '2.4.12' id 'io.spring.dependency-management' version '1.0.11.RELEASE' id 'java' } group = 'com.example' version = '0.0.1-SNAPSHOT' sourceCompatibility = '1.8' repositories { // (2) mavenCentral () } dependencies { // (3) implementation 'org.springframework.boot:spring-boot-starter-web' testImplementation 'org.springframework.boot:spring-boot-starter-test' } test { useJUnitPlatform () } \u9879\u76ee\u63d2\u4ef6\u7ba1\u7406. \u4f9d\u8d56\u5305\u4ed3\u5e93\u6e90\uff1b \u4f9d\u8d56\u3002 \u6784\u5efa\u9879\u76ee \u00b6 gradle clean build \u8fd0\u884c\u9879\u76ee \u00b6 java -jar demo.jar","title":"\u5f00\u53d1\u51c6\u5907"},{"location":"preparation/#_1","text":"","title":"\u5f00\u53d1\u524d\u51c6\u5907"},{"location":"preparation/#_2","text":"\u91cd\u8981 \u4ee5\u4e0blinux \u73af\u5883 shell \u7ec8\u7aef\u4f7f\u7528zsh\uff0c\u5982\u679c\u4f7f\u7528\u9ed8\u8ba4\u7684 bash\uff0c\u8bf7\u7f16\u8f91 ~/.bashrc \u6765\u64cd\u4f5c\u3002","title":"\u73af\u5883"},{"location":"preparation/#git","text":"ubuntu-linux windows \u5b89\u88c5 git\" $ apt install git \uff08\u53ef\u9009\uff09\u5982\u679c\u9700\u8981\u4e0b\u8f7d\u6700\u65b0\u7248\u672c\u7684git\uff0c\u8bf7\u52a0\u5165\u5982\u4e0bppa \u4ed3\u5e93 $ add-apt-repository ppa:git-core/ppa && apt update && apt install git \u4e0b\u8f7d git for windows \uff0c \u6dd8\u5b9d\u955c\u50cf \uff1b \u5b89\u88c5 Git for Windows (\u9ed8\u8ba4\u5df2\u5305\u542b bit bash )\u3002","title":"git \u5b89\u88c5"},{"location":"preparation/#sdkman","text":"SDKMAN \u662f\u4e00\u4e2aJVM \u5e73\u53f0\u73af\u5883\u96c6\u6210\u7ba1\u7406\u5de5\u5177\uff0c\u53ef\u4ee5\u4f7f\u7528\u5b83\u5f88\u65b9\u4fbf\u5bf9\u5404\u7248\u672c sdk\u7684\u8fdb\u884c\u7ba1\u7406\u3002\u4f8b\u5982 jdk \uff0c gradle \uff0c maven \u7b49\u4f17\u591ajvm\u5de5\u5177\u7248\u672c\u7684\u5207\u6362 \u5b89\u88c5\uff0c\u5378\u8f7d\u7b49\u3002 SDKMAN! \u662f\u4e00\u4e2a\u5728 unix \u7cfb\u7edf\u73af\u5883\u4e0b\uff0c\u4e3a\u4e00\u4e9b \u8f6f\u4ef6\u5de5\u5177\u5305 \u7ba1\u7406\u591a\u7248\u672c\u95ee\u9898\u7684\u5de5\u5177\u3002\u63d0\u4f9b\u4e86\u4e00\u4e2a\u65b9\u4fbf\u7684\u547d\u4ee4\u884c\u63a5\u53e3(CLI)\uff0c \u65b9\u4fbf\u6267\u884c \u201c\u5b89\u88c5\u201d, \u201c\u5207\u6362\u201d\uff0c \u201c\u79fb\u9664\u201d\uff0c\u201c\u5217\u51fa\u201d \u76f8\u5173\u7248\u672c\u5de5\u5177\u5305\u7684\u547d\u4ee4\u3002\u5b83\u4ee5\u524d\u88ab\u79f0\u4e3a GVM\uff0c\u5373 Groovy \u73af\u5883\u7ba1\u7406\u5668\uff0c\u5176\u7075\u611f\u6765\u81ea\u4e8e Ruby \u793e\u533a\u666e\u904d\u4f7f\u7528\u7684\u975e\u5e38\u6709\u7528\u7684 RVM \u548c rbenv \u5de5\u5177. Making life easier. \u8282\u7701\u4e86\u53bb\u5b98\u7f51\u4e0b\u8f7d\u5b89\u88c5\u7684\u6b65\u9aa4\uff0c \u7701\u7565\u4e86\u73af\u5883\u53d8\u91cf\u7684\u914d\u7f6e\u3002 \u652f\u6301 N \u591a\u7684 JVM \u5de5\u5177\u5305\u3002\u4f8b\u5982 Java\u3001 Groovy\u3001 Scala\u3001 Kotlin \u548c Ceylon\u3002Ant\u3001 Gradle\u3001 Grails\u3001 Maven\u3001 SBT\u3001 Spark\u3001 Spring Boot\u3001 Vert.x \u7b49\u3002 \u8f7b\u91cf\u7ea7.\u7528 bash \u7f16\u5199\uff0c\u53ea\u9700\u8981 curl \u548c zip/unzip \u5c31\u53ef\u4ee5\u51fa\u73b0\u5728\u7cfb\u7edf\u4e2d\uff0c\u751a\u81f3\u53ef\u4ee5\u4e0e ZSH \u4e00\u8d77\u5de5\u4f5c\u3002 \u63d0\u793a windows \u73af\u5883\u5f00\u53d1\u9700\u8981\u5b89\u88c5 \u7c7b\u4f3c\u4e8e WSL \u4e00\u6837\u7684linux \u96c6\u6210\u73af\u5883\uff0c\u5982\u679c\u7f3a\u4e4flinux\u5f00\u53d1\u7ecf\u9a8c, \u5f00\u53d1\u73af\u5883\u96c6\u6210\u8bf7\u53c2\u9605 SDK \u5355\u72ec\u624b\u52a8\u5b89\u88c5","title":"SDKMAN\uff08\u63a8\u8350\uff09"},{"location":"preparation/#sdkman_1","text":"ubuntu-linux windows \u4e0b\u8f7d\u5e76\u6267\u884c\u5b89\u88c5\u811a\u672c\uff1b curl -s \"https://get.sdkman.io\" | bash (\u53ef\u9009) \u5c06 sdkman \u5b89\u88c5\u5230\u6307\u5b9a\u4f4d\u7f6e export SDKMAN_DIR = \"/usr/local/sdkman\" && curl -s \"https://get.sdkman.io\" | bash \u6267\u884c\u811a\u672c\uff1b source \" $HOME /.sdkman/bin/sdkman-init.sh\" \u9a8c\u8bc1\u662f\u5426\u5b89\u88c5\u5b8c\u6210\uff1b sdk version \u663e\u793a\u5982\u4e0b\uff1a sdkman 5 .0.0+51 \u5b89\u88c5 linux \u5b50\u7cfb\u7edf\u3002\u73b0\u5728\u6709\u5f88\u591a\u65b9\u5f0f\u53ef\u4ee5\u5728 Windows \u4e0a\u5b89\u88c5 SDKMAN\uff1a \u7b2c\u4e00\u4e2a\u89e3\u51b3\u65b9\u6848\u662f\uff1a\u5728\u5c1d\u8bd5 SDKMAN \u5b89\u88c5\u4e4b\u524d\u4e3a windows \u5b89\u88c5 linux \u5b50\u7cfb\u7edf - WSL\u3002\u60a8\u9700\u8981\u4e00\u4e2a\u57fa\u672c\u7684\u5de5\u5177\u94fe\uff0c \u5305\u62ec bash \u3001 zip \u3001 unzip \u548c curl (\u7279\u6b8a\u60c5\u51b5\u9700\u8981 tar \u548c gzip )\u3002 \u53e6\u4e00\u4e2a\u89e3\u51b3\u65b9\u6848\u662f\uff1a \u5728\u5c1d\u8bd5 SDKMAN \u5b89\u88c5\u4e4b\u524d\u5148\u5b89\u88c5 Cygwin\u3002\u4e3a\u4e86\u4f7f\u6211\u4eec\u7684\u8f6f\u4ef6\u6b63\u5e38\u8fd0\u884c\uff0c\u6211\u4eec\u8981\u6c42 Cygwin \u5b89\u88c5\u7684\u5de5\u5177\u94fe\u4e0e WSL \u76f8\u540c\u3002 \u7b2c\u4e09\u4e2a\u89e3\u51b3\u65b9\u6848\u662f\u4e3a\u4f7f\u7528 Git Bash for Windows \u73af\u5883\u7684 Git \u7528\u6237\u63d0\u4f9b\u7684\u3002\u4e3a\u4e86\u5b9e\u73b0\u8fd9\u4e00\u70b9\uff0c\u9700\u8981\u7528 MinGW \u5de5\u5177\u5bf9\u73af\u5883\u8fdb\u884c\u8865\u5145\uff0c\u4ee5\u6dfb\u52a0\u5fc5\u8981\u7684\u5de5\u5177\u94fe\u6765\u5b9e\u73b0\u529f\u80fd\u3002 \u5b89\u88c5 sdkman\uff0c\u53c2\u89c1linux \u5b89\u88c5\u8fc7\u7a0b\u3002 TIP sdkman \u5b89\u88c5\u7684 sdk\u5de5\u5177\u5305\u65e0\u9700\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\u3002","title":"SDKMAN\u5b89\u88c5"},{"location":"preparation/#sdk","text":"sdkman \u5982\u679c\u5b98\u65b9\u4ed3\u5e93\u6e90\u592a\u6162\uff0c\u5efa\u8bae\u4f7f\u7528 \u201c\u672c\u5730\u7248\u672c\u201d \u5b89\u88c5\u7684\u65b9\u5f0f\u5b89\u88c5sdk\uff0c\u7136\u540e\u4ea4\u8fc7sdkman \u505a\u7248\u672c\u7ba1\u7406\u3002\u53c2\u9605 SDK \u672c\u5730\u7248\u672c\u5b89\u88c5 \u7ae0\u8282 . \u6ce8\u610f \u5b89\u88c5\u6307\u5b9a\u7248\u672c\u53f7\uff0c\u8bf7\u9009\u62e9 Identifier \u7684\u503c\u3002 JDK gradle maven 1.\u67e5\u770b\u53ef\u9009\u7684 java \u7248\u672c\uff1b sdk ls java 2.\u9009\u62e9\u5408\u9002\u7684\u7248\u672c\u8fdb\u884c\u5b89\u88c5; ```bash sdk install java 8.0.292.j9-adpt ``` \uff08\u63a8\u8350\uff09\u201c\u672c\u5730\u7248\u672c\u5b89\u88c5\u201d \u5b89\u88c5jdk\u3002\u76f8\u5173\u6559\u7a0b\u79fb\u6b65 SDK \u672c\u5730\u7248\u672c\u5b89\u88c5 \u7ae0\u8282 \u3002 \u67e5\u770b\u53ef\u9009\u7684 gradle \u7248\u672c\uff1b sdk ls gradle \u9009\u62e9\u5408\u9002\u7684\u7248\u672c\u8fdb\u884c\u5b89\u88c5; sdk install gradle 4 .10.3 \u67e5\u770b\u53ef\u9009\u7684 maven \u7248\u672c\uff1b sdk ls maven \u9009\u62e9\u5408\u9002\u7684\u7248\u672c\u8fdb\u884c\u5b89\u88c5\uff08\u53ef\u4ee5\u9009\u62e9\u6700\u65b0\u7248\u672c\uff09; sdk install maven","title":"SDK \u5b89\u88c5"},{"location":"preparation/#sdk-local-install","text":"\u56e0\u4e3asdkman\u4ed3\u5e93\u7f51\u7edc\u9f9f\u901f\u4ee5\u53ca\u4f17\u6240\u5468\u77e5\u7684\u539f\u56e0\uff0c\u5f53\u51fa\u73b0\u7f51\u7edc\u95ee\u9898\u65f6\uff0c\u5efa\u8bae\u4f7f\u7528 \u201c\u672c\u5730\u7248\u672c\u201d \u5b89\u88c5\u5bf9\u5e94\u7684 sdk \u7248\u672c\uff0c\u7136\u540e\u5c06\u7248\u672c\u7ba1\u7406\u4ea4\u7ed9sdkman \u6765\u7ba1\u7406. \u4ee5\u4e0b\u4ee5 \u672c\u5730\u5b89\u88c5 open jdk8 \u4f5c\u4e3a\u4f8b\u5b50\u6765\u9610\u8ff0\u5b89\u88c5\u6b65\u9aa4\uff1a \u5c06 jdk \u5b89\u88c5\u5305\u89e3\u538b\u5230\u6307\u5b9a\u76ee\u5f55\uff0c\u4f8b\u5982 ~/.jdks/ ,\u89e3\u538b\u7684\u5b8c\u6574\u8def\u5f84\u4e3a ~/.jdks/adopt-openjdk-1.8.0_275 , \u5c06\u672c\u5730\u5b89\u88c5\u5305\u7eb3\u5165 sdkman \u7248\u672c\u7ba1\u7406 \u547d\u4ee4\u683c\u5f0f\uff1a sdk install java {\u81ea\u5b9a\u4e49\u7248\u672c\u53f7} {jdk\u76ee\u5f55}; sdk install java 8 .0.275 ~/.jdks/adopt-openjdk-1.8.0_275 \u6fc0\u6d3b\u7248\u672c\uff1b sdk use java 8 .0.275 \u9a8c\u8bc1\u5f53\u524d\u7684 sdkman \u7ba1\u7406\u7684\u5f53\u524d java \u7248\u672c,\u63d2\u5361\u8f93\u51fa\u7ed3\u679c\u3002 sdk current java java -version","title":"SDK \u672c\u5730\u7248\u672c\u5b89\u88c5"},{"location":"preparation/#_3","text":"commands: install or i <candidate> [version] [local-path] \u5b89\u88c5sdk uninstall or rm <candidate> <version> \u5378\u8f7dsdk list or ls [candidate] \u5217\u51fa\u652f\u6301\u5b89\u88c5\u7684sdk\u4fe1\u606f use or u <candidate> <version> \u5f53\u524d\u4f7f\u7528 sdk \u7684\u7248\u672c config \u7f16\u8f91 sdk \u914d\u7f6e default or d <candidate> [version] \u9ed8\u8ba4\u4f7f\u7528 sdk \u7248\u672c home or h <candidate> <version> \u663e\u793a sdk \u7684home\u76ee\u5f55 env or e [init|install|clear] \u4e3a\u5f53\u524d\u9879\u76ee\u521d\u59cb\u5316\uff0c\u5b89\u88c5\uff0c\u6e05\u7406sdk\u7684\u73af\u5883 current or c [candidate] \u663e\u793a\u5f53\u524d sdk \u4f7f\u7528\u7684\u7248\u672c flush [archives|tmp|broadcast|metadata|version] \u6e05\u7406 archives|tmp|broadcast|metadata|version \u7b49\u7f13\u5b58\u7a7a\u95f4","title":"\u5e38\u7528\u547d\u4ee4"},{"location":"preparation/#sdk-manual-install","text":"\u5355\u72ec\u5b89\u88c5 sdk \u8bf7\u53c2\u9605 \u5b98\u65b9\u6587\u6863\u3002\u672c\u8282\u4e0d\u505a\u63cf\u8ff0\u3002 \u4ee5\u4e0b\u4e3a\u5b98\u65b9 sdk\u4e0b\u8f7d\u7f51\u5740\uff1a JDK8 GRADLE MAVEN","title":"\u5355\u72ec\u624b\u52a8\u5b89\u88c5"},{"location":"preparation/#_4","text":"windows \u73af\u5883\u53d8\u91cf\u914d\u7f6e\u7a97\u53e3\uff1a \u53f3\u952e This PC(\u6b64\u7535\u8111) -> Properties\uff08\u5c5e\u6027\uff09 -> Advanced system settings\uff08\u9ad8\u7ea7\u7cfb\u7edf\u8bbe\u7f6e\uff09 -> Environment Variables\uff08\u73af\u5883\u53d8\u91cf\uff09...","title":"\u73af\u5883\u53d8\u91cf\u914d\u7f6e"},{"location":"preparation/#jdk","text":"JAVA_HOME: \u4e00\u4e2a JDK \u6bd4\u8f83\u91cd\u8981\u7684\u73af\u5883\uff0c\u5f88\u591a\u57fa\u4e8e java\u73af\u5883\u7684\u5de5\u5177\u9ed8\u8ba4\u4f7f\u7528\u8be5\u73af\u5883\u53d8\u91cf\u3002 linux windows echo \" JAVA_HOME=/home/luwei/.sdkman/candidates/java/current export JAVA_HOME export CLASSPATH=.: ${ JAVA_HOME } /lib/tools.jar: ${ JAVA_HOME } /lib/dt.jar export PATH= $JAVA_HOME /bin:\\$PATH\" >> ~/.zshrc \u6253\u5f00 \u73af\u5883\u53d8\u91cf\u7a97\u53e3 \u65b0\u5efaJAVA_HOME \u53d8\u91cf \u70b9\u51fb New\uff08\u65b0\u5efa\uff09... \u6309\u94ae \u8f93\u5165: \u53d8\u91cf\u540d\uff1aJAVA_HOME \u53d8\u91cf\u503c\uff1a\u7535\u8111\u4e0aJDK\u5b89\u88c5\u7684\u7edd\u5bf9\u8def\u5f84 \u8f93\u5165\u5b8c\u6bd5\u540e\u70b9\u51fb OK\u3002 \u65b0\u5efa/\u4fee\u6539 CLASSPATH \u53d8\u91cf \u5982\u679c\u5b58\u5728 CLASSPATH \u53d8\u91cf\uff0c\u9009\u4e2d\u70b9\u51fb Edit(\u7f16\u8f91)\u3002 \u5982\u679c\u6ca1\u6709\uff0c\u70b9\u51fb New\uff08\u65b0\u5efa\uff09... \u65b0\u5efa\u3002 \u8f93\u5165/\u5728\u5df2\u6709\u7684\u53d8\u91cf\u503c\u540e\u9762\u6dfb\u52a0\uff1a \u53d8\u91cf\u540d\uff1a CLASSPATH \u53d8\u91cf\u503c\uff1a .;%JAVA_HOME%\\lib\\dt.jar;%JAVA_HOME%\\lib\\tools.jar; \u70b9\u51fb OK \u4fdd\u5b58\u3002 \u4fee\u6539 Path \u53d8\u91cf \u7531\u4e8e win10 \u7684\u4e0d\u540c\uff0c\u5f53\u9009\u4e2d Path \u53d8\u91cf\u7684\u65f6\u5019\uff0c\u7cfb\u7edf\u4f1a\u5f88\u65b9\u4fbf\u7684\u628a\u6240\u6709\u4e0d\u540c\u8def\u5f84\u90fd\u5206\u5f00\u4e86\uff0c\u4e0d\u4f1a\u50cf win7 \u6216\u8005 win8 \u90a3\u6837\u8fde\u5728\u4e00\u8d77\u3002 \u65b0\u5efa\u4e24\u6761\u8def\u5f84\uff1a %JAVA_HOME%\\bin %JAVA_HOME%\\jre\\bin \u68c0\u67e5 \u6253\u5f00 cmd\uff0c\u8f93\u5165 java\uff0c\u51fa\u73b0\u4e00\u8fde\u4e32\u7684\u6307\u4ee4\u63d0\u793a\uff0c\u8bf4\u660e\u914d\u7f6e\u6210\u529f\u4e86:","title":"JDK"},{"location":"preparation/#gradle","text":"GRADLE_HOME: GRADLE \u7684\u5b89\u88c5\u8def\u5f84\u3002 GRADLE_USER_HOME: \u5b58\u653e gradle \u7f13\u5b58\u5305\u7684\u8def\u5f84\u3002\u4ee5\u66ff\u6362 ~/.gradle \u8def\u5f84\u3002 linux windows echo \" GRADLE_HOME=/data/home/luwei/.sdkman/candidates/gradle/4.10.3 export GRADLE_HOME export GRADLE_USER_HOME=/data/home/luwei/localGradle export PATH= $GRADLE_HOME /bin:\\$PATH\" >> ~/.zshrc \u6253\u5f00 \u73af\u5883\u53d8\u91cf\u7a97\u53e3 \u65b0\u5efa GRADLE_HOME \u53d8\u91cf \u70b9\u51fb New\uff08\u65b0\u5efa\uff09... \u6309\u94ae \u8f93\u5165: \u53d8\u91cf\u540d\uff1a GRADLE_HOME \u53d8\u91cf\u503c\uff1a\u7535\u8111\u4e0a gradle \u5b89\u88c5\u7684\u7edd\u5bf9\u8def\u5f84 \u8f93\u5165\u5b8c\u6bd5\u540e\u70b9\u51fb OK\u3002 \u65b0\u5efa/\u4fee\u6539 GRADLE_USER_HOME \u53d8\u91cf \u5982\u679c\u5b58\u5728 GRADLE_USER_HOME \u53d8\u91cf\uff0c\u9009\u4e2d\u70b9\u51fb Edit(\u7f16\u8f91)\u3002 \u5982\u679c\u6ca1\u6709\uff0c\u70b9\u51fb New\uff08\u65b0\u5efa\uff09... \u65b0\u5efa\u3002 \u8f93\u5165/\u5728\u5df2\u6709\u7684\u53d8\u91cf\u503c\u540e\u9762\u6dfb\u52a0\uff1a \u53d8\u91cf\u540d\uff1a GRADLE_USER_HOME \u53d8\u91cf\u503c\uff1a d://gradl_cache \u70b9\u51fb OK \u4fdd\u5b58\u3002 \u4fee\u6539 Path \u53d8\u91cf \u65b0\u5efa\u8def\u5f84\uff1a %GRADLE_HOME%\\bin \u68c0\u67e5 \u6253\u5f00 cmd\uff0c\u8f93\u5165 gradle --v \uff0c\u51fa\u73b0\u4e00\u8fde\u4e32\u7684\u6307\u4ee4\u63d0\u793a\uff0c\u8bf4\u660e\u914d\u7f6e\u6210\u529f\u4e86","title":"GRADLE"},{"location":"preparation/#maven","text":"MAVEN_HOME : maven \u7684\u5b89\u88c5\u8def\u5f84\u3002 linux windows echo \" MAVEN_HOME=/data/home/luwei/.sdkman/candidates/maven/3.8.3 export MAVEN_HOME export PATH= $MAVEN_HOME /bin:\\$PATH\" >> ~/.zshrc \u6253\u5f00 \u73af\u5883\u53d8\u91cf\u7a97\u53e3 \u65b0\u5efa MAVEN_HOME \u53d8\u91cf \u70b9\u51fb New\uff08\u65b0\u5efa\uff09... \u6309\u94ae \u8f93\u5165: \u53d8\u91cf\u540d\uff1a MAVEN_HOME \u53d8\u91cf\u503c\uff1a\u7535\u8111\u4e0a maven \u5b89\u88c5\u7684\u7edd\u5bf9\u8def\u5f84 \u8f93\u5165\u5b8c\u6bd5\u540e\u70b9\u51fb OK\u3002 \u4fee\u6539 Path \u53d8\u91cf \u65b0\u5efa\u8def\u5f84\uff1a %MAVEN_HOME%\\bin \u68c0\u67e5 \u6253\u5f00 cmd\uff0c\u8f93\u5165 mvn --v \uff0c\u51fa\u73b0\u4e00\u8fde\u4e32\u7684\u6307\u4ee4\u63d0\u793a\uff0c\u8bf4\u660e\u914d\u7f6e\u6210\u529f\u4e86","title":"MAVEN"},{"location":"preparation/#_5","text":"","title":"\u9879\u76ee\u5b9e\u8df5"},{"location":"preparation/#_6","text":"\u7531\u4e8e\u6211\u4eec\u4f7f\u7528 gradle \u4f5c\u4e3a\u5e94\u7528\u7ba1\u7406\u5de5\u5177\uff0c\u56e0\u6b64\u4f7f\u7528 gradle init \u521d\u59cb\u5316\u4e00\u4e2a\u9879\u76ee\u9aa8\u67b6\u8c8c\u4f3c\u662f\u4e00\u4e2a\u4e0d\u9519\u7684\u9009\u62e9\u3002 \u5f53\u7136\u4e5f\u53ef\u4ee5\u9009\u62e9 mvn init , idea\u5de5\u5177, spring initializr \u7b49\u7b49\u65b9\u5f0f\u6765\u521d\u59cb\u5316\u9879\u76ee \u542f\u52a8\u7ec8\u7aef,\u521d\u59cb\u5316\uff1b gradle init \u6587\u4ef6\u786e\u8ba4\uff1b \u53ef\u4ee5\u770b\u5230\u4e00\u5171\u521b\u5efa\u4e862\u4e2a\u76ee\u5f55\u548c6\u4e2a\u6587\u4ef6\uff0c\u5176\u4e2d2\u4e2a\u76ee\u5f55\u548c4\u4e2a\u6587\u4ef6\u90fd\u8ddfwrapper\u6709\u5173\uff1a . \u251c\u2500\u2500 build.gradle \u251c\u2500\u2500 gradle \u2502 \u2514\u2500\u2500 wrapper \u2502 \u251c\u2500\u2500 gradle-wrapper.jar \u2502 \u2514\u2500\u2500 gradle-wrapper.properties \u251c\u2500\u2500 gradlew \u251c\u2500\u2500 gradlew.bat \u2514\u2500\u2500 settings.gradle gradlew\uff1alinux\u6216\u8005Unix\u4e0b\u7528\u4e8e\u6267\u884cwrapper\u547d\u4ee4\u7684Shell\u811a\u672c gradlew.bat\uff1aWindows\u4e0b\u7528\u4e8e\u6267\u884cwrapper\u547d\u4ee4\u7684\u6279\u5904\u7406\u811a\u672c gradle-wrapper.jar\uff1a\u7528\u4e8e\u4e0b\u8f7dGradle\u7684\u76f8\u5173\u4ee3\u7801\u5b9e\u73b0 gradle-wrapper.properties\uff1awrapper\u6240\u4f7f\u7528\u7684\u914d\u7f6e\u4fe1\u606f\uff0c\u6bd4\u5982gradle\u7684\u7248\u672c\u7b49\u4fe1\u606f build.gradle: \u7528\u4e8e\u5b58\u653e\u6784\u5efa\u76f8\u5173\u7684Task \u589e\u52a0\u6e90\u7801\u5305 \u5728\u9879\u76ee\u6839\u76ee\u5f55\u521b\u5efa\u4ee5\u4e0b\u76ee\u5f55 src/main/java : java \u6e90\u7801\u76ee\u5f55\uff1b src/main/resources : \u9879\u76ee\u9759\u6001\u8d44\u6e90\u6587\u4ef6\u76ee\u5f55\uff1b src/test : \u5355\u5143\u6d4b\u8bd5\u76ee\u5f55\uff1b","title":"\u521d\u59cb\u5316\u9879\u76ee"},{"location":"preparation/#_7","text":"\u6839\u76ee\u5f55 build.gradle \u5305\u542b\u6709\u6574\u4e2a\u9879\u76ee\u7684\u6784\u5efa\u811a\u672c\u3002\u5b83\u7684\u5de5\u4f5c\u5305\u542b\u6574\u4e2a\u9879\u76ee\u7684\u6e90\u7801\u6784\u6210\uff0c\u63d2\u4ef6\u7ba1\u7406\uff0c\u4f9d\u8d56\u7ba1\u7406\u7b49 \u6700\u7b80\u5355\u7684\u9879\u76ee \u811a\u672c\u5982\u4e0b\uff1a plugins { // (1) id 'org.springframework.boot' version '2.4.12' id 'io.spring.dependency-management' version '1.0.11.RELEASE' id 'java' } group = 'com.example' version = '0.0.1-SNAPSHOT' sourceCompatibility = '1.8' repositories { // (2) mavenCentral () } dependencies { // (3) implementation 'org.springframework.boot:spring-boot-starter-web' testImplementation 'org.springframework.boot:spring-boot-starter-test' } test { useJUnitPlatform () } \u9879\u76ee\u63d2\u4ef6\u7ba1\u7406. \u4f9d\u8d56\u5305\u4ed3\u5e93\u6e90\uff1b \u4f9d\u8d56\u3002","title":"\u9879\u76ee\u7ba1\u7406"},{"location":"preparation/#_8","text":"gradle clean build","title":"\u6784\u5efa\u9879\u76ee"},{"location":"preparation/#_9","text":"java -jar demo.jar","title":"\u8fd0\u884c\u9879\u76ee"},{"location":"project/advance/exception/","text":"\u5168\u5c40\u5f02\u5e38 \u00b6 \u5728 Java \u4e2d\uff0c\u5f02\u5e38\u5904\u7406\u662f\u901a\u8fc7 try \u3001 catch \u5757\u5b8c\u6210\u7684\uff0c\u4f46\u662f Spring Boot \u8fd8\u5141\u8bb8\u6211\u4eec\u63d0\u4f9b\u81ea\u5b9a\u4e49\u7684\u5168\u5c40\u5f02\u5e38\u5904\u7406\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u5728\u4efb\u4f55\u5730\u65b9\u6dfb\u52a0 try catch \u5757\uff0c\u6211\u4eec\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u5355\u72ec\u7684\u7c7b\u6765\u5904\u7406\u5f02\u5e38\uff0c\u5b83\u8fd8\u53ef\u4ee5\u5206\u79bb\u6765\u81ea\u4e1a\u52a1\u903b\u8f91\u4ee3\u7801\u5f02\u5e38\u5904\u7406\u7684\u4ee3\u7801\u3002 @ControllerAdvice \u00b6 \u4ece spirng 3.2 \u540e\uff0c\u652f\u6301 \u5e26\u6709 @ControllerAdvice \u6ce8\u91ca\u7684 @@ExceptionHandler \u5f02\u5e38\u5904\u7406\u65b9\u5f0f\u3002 \u8fd9\u4f7f\u5f97\u5b83\u8131\u79bb\u65e7\u7684 MVC \u6a21\u578b\uff08\u53ea\u80fd\u9488\u5bf9\u5355\u4e00 controller\uff09\uff0c\u5e76\u5229\u7528 ResponseEntity \u548c @ExceptionHandler \u4fdd\u8bc1\u4e86\u6570\u636e\u7c7b\u578b\u5b89\u5168\u6027\u548c\u7075\u6d3b\u6027: @ControllerAdvice public class RestResponseEntityExceptionHandler extends ResponseEntityExceptionHandler { @ExceptionHandler ( value = { IllegalArgumentException . class , IllegalStateException . class }) protected ResponseEntity < Object > handleConflict ( RuntimeException ex , WebRequest request ) { String bodyOfResponse = \"This should be application specific\" ; return handleExceptionInternal ( ex , bodyOfResponse , new HttpHeaders (), HttpStatus . CONFLICT , request ); } } @controlleradvice \u6ce8\u91ca\u5141\u8bb8\u6211\u4eec\u5c06\u4ee5\u524d\u5206\u6563\u7684\u591a\u4e2a @ExceptionHandler \u5408\u5e76\u5230\u4e00\u4e2a\u5355\u4e00\u7684\u5168\u5c40\u9519\u8bef\u5904\u7406\u7ec4\u4ef6\u4e2d\u3002 \u5b9e\u9645\u7684\u673a\u5236\u975e\u5e38\u7b80\u5355\uff0c\u4f46\u4e5f\u975e\u5e38\u7075\u6d3b: \u5b83\u4f7f\u6211\u4eec\u80fd\u591f\u5b8c\u5168\u63a7\u5236\u54cd\u5e94body\u4ee5\u53ca\u72b6\u6001\u4ee3\u7801 \u5b83\u63d0\u4f9b\u4e86\u51e0\u4e2a\u5f02\u5e38\u5230\u540c\u4e00\u4e2a\u65b9\u6cd5\u7684\u6620\u5c04\uff0c\u8fd9\u4e9b\u5f02\u5e38\u4e00\u8d77\u5904\u7406 Note @ExceptionHandler \u58f0\u660e\u7684\u5f02\u5e38\u4e0e\u4f5c\u4e3a\u65b9\u6cd5\u53c2\u6570\u4f7f\u7528\u7684\u5f02\u5e38,\u5982\u679c\u4ed6\u4eec\u4e0d\u5339\u914d\uff0c\u7f16\u8bd1\u5668\u662f\u4e0d\u4f1a\u62a5\u9519\u7684\uff0cspring \u4e5f\u4e0d\u4f1a\u62a5\u9519\u3002\u4f46\u662f\u5f53\u5f02\u5e38\u5728\u8fd0\u884c\u65f6\u88ab\u629b\u51fa\u65f6\uff0c\u5f02\u5e38\u89e3\u6790\u673a\u5236\u5c06\u4f1a\u5931\u8d25 `java.lang.IllegalStateException: No suitable resolver for argument [0] [type=...] HandlerMethod details: ..` ResponseStatusException \u00b6 \u81ea spring 5 \u540e\u53c8\u5f15\u5165\u4e86 ResponseStatusException \u7c7b @GetMapping ( value = \"/{id}\" ) public Foo findById ( @PathVariable ( \"id\" ) Long id , HttpServletResponse response ) { try { Foo resourceById = RestPreconditions . checkFound ( service . findOne ( id )); eventPublisher . publishEvent ( new SingleResourceRetrievedEvent ( this , response )); return resourceById ; } catch ( MyResourceNotFoundException exc ) { throw new ResponseStatusException ( HttpStatus . NOT_FOUND , \"Foo Not Found\" , exc ); } } \u4f7f\u7528\u5b83\u7684\u597d\u5904\u6709\u4ee5\u4e0b\u51e0\u65b9\u9762: \u975e\u5e38\u9002\u5408\u539f\u578b\u5f00\u53d1: \u6211\u4eec\u53ef\u4ee5\u5f88\u5feb\u5730\u5b9e\u73b0\u4e00\u4e2a\u57fa\u672c\u7684\u89e3\u51b3\u65b9\u6848; \u4e00\u4e2a\u7c7b\uff0c\u591a\u4e2a\u72b6\u6001\u7801\uff1a \u4e00\u79cd\u5f02\u5e38\u7c7b\uff0c\u53ef\u4ee5\u9002\u914d\u591a\u79cd\u4e0d\u540c\u7684\u8fd4\u56de\u65b9\u6848\u3002 \u4e0e @ExceptionHandler \u76f8\u6bd4\uff0c\u8fd9\u51cf\u5c11\u4e86\u7d27\u5bc6\u8026\u5408 \u4e0d\u5fc5\u521b\u5efa\u5982\u6b64\u591a\u7684\u81ea\u5b9a\u4e49\u5f02\u5e38\u7c7b\uff1b \u5bf9\u5f02\u5e38\u5904\u7406\u6709\u66f4\u591a\u7684\u63a7\u5236\uff0c\u56e0\u4e3a\u53ef\u4ee5\u901a\u8fc7\u7f16\u7a0b\u65b9\u5f0f\u521b\u5efa\u5f02\u5e38 Question \u90a3\u4e48\u548c \u5168\u5c40\u5f02\u5e38\u6bd4\u8d77\u6765\uff0c\u5982\u4f55\u6743\u8861\uff1f \u5982\u679c\u6ca1\u6709\u5168\u5c40\u5f02\u5e38\u5904\u7406\u3002 \u4ee3\u7801\u590d\u5236\u3002\u5982\u679c\u4f60\u4ece\u5176\u4ed6\u5730\u65b9controller\u590d\u5236\u7684\u4ee3\u7801\uff0c\u90a3\u4e48\u5728\u6ca1\u5f04\u660e\u767d\u4e4b\u524d\u4e0d\u8981\u4fee\u6539\u5b83\u3002 Note \u5728\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\u4e2d\u7ed3\u5408\u4e0d\u540c\u7684\u65b9\u6cd5\u5b9e\u73b0\u9700\u6c42\u662f\u53ef\u80fd\u7684\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u5168\u5c40\u4f7f\u7528 @ControllerAdvice \uff0c\u4f46\u4e5f\u53ef\u4ee5\u5728\u672c\u5730\u5b9e\u73b0 responsestatusexception \u3002 Caution \u5982\u679c\u540c\u4e00\u4e2a\u5f02\u5e38\uff0c\u6709\u591a\u4e2a\u5904\u7406\u65b9\u5f0f\u6216\u8005\u8fd4\u56de\uff0c\u5f80\u5f80\u4f1a\u5f15\u53d1\u4e00\u4e9b\u4ee4\u4eba\u8d39\u89e3\u7684\u95ee\u9898\uff0c\u8fd9\u9700\u8981\u7279\u522b\u6ce8\u610f\u3002 \u76ee\u524d\u89e3\u51b3\u65b9\u6848 \u00b6 package cn.tendata.bizr.rest.controller ; import cn.tendata.bizr.core.BasicErrorCodeException ; import cn.tendata.bizr.core.DefaultMessageSource ; import cn.tendata.bizr.rest.jackson.WebDataView ; import com.fasterxml.jackson.annotation.JsonInclude ; import com.fasterxml.jackson.annotation.JsonInclude.Include ; import com.fasterxml.jackson.annotation.JsonView ; import org.slf4j.Logger ; import org.slf4j.LoggerFactory ; import org.slf4j.Marker ; import org.slf4j.MarkerFactory ; import org.springframework.context.MessageSource ; import org.springframework.context.MessageSourceAware ; import org.springframework.context.support.MessageSourceAccessor ; import org.springframework.dao.EmptyResultDataAccessException ; import org.springframework.http.HttpHeaders ; import org.springframework.http.HttpStatus ; import org.springframework.http.ResponseEntity ; import org.springframework.security.access.AccessDeniedException ; import org.springframework.validation.BindException ; import org.springframework.validation.BindingResult ; import org.springframework.validation.FieldError ; import org.springframework.validation.ObjectError ; import org.springframework.web.bind.MethodArgumentNotValidException ; import org.springframework.web.bind.annotation.ControllerAdvice ; import org.springframework.web.bind.annotation.ExceptionHandler ; import org.springframework.web.bind.annotation.ResponseStatus ; import org.springframework.web.context.request.WebRequest ; import org.springframework.web.servlet.mvc.method.annotation.ResponseEntityExceptionHandler ; import javax.persistence.EntityNotFoundException ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; import java.util.ArrayList ; import java.util.LinkedHashMap ; import java.util.List ; import java.util.Map ; @ControllerAdvice public class GlobalControllerExceptionHandler extends ResponseEntityExceptionHandler implements MessageSourceAware { private static final Logger LOGGER = LoggerFactory . getLogger ( GlobalControllerExceptionHandler . class ); private MessageSourceAccessor messages = DefaultMessageSource . getAccessor (); @Override protected ResponseEntity < Object > handleBindException ( BindException ex , HttpHeaders headers , HttpStatus status , WebRequest request ) { return handleValidationException ( ex . getBindingResult (), status ); } @Override protected ResponseEntity < Object > handleMethodArgumentNotValid ( MethodArgumentNotValidException ex , HttpHeaders headers , HttpStatus status , WebRequest request ) { return handleValidationException ( ex . getBindingResult (), status ); } private ResponseEntity < Object > handleValidationException ( BindingResult result , HttpStatus status ) { Map < String , Object > errorAttributes = new LinkedHashMap <> (); errorAttributes . put ( \"status\" , status . value ()); errorAttributes . put ( \"error\" , status . getReasonPhrase ()); if ( result != null ) { if ( result . hasGlobalErrors ()) { List < Error > globalErrors = new ArrayList <> ( 6 ); for ( ObjectError err : result . getGlobalErrors ()) { Error error = new Error (); error . message = messages . getMessage ( err . getCode (), err . getDefaultMessage ()); globalErrors . add ( error ); } errorAttributes . put ( \"errors\" , globalErrors ); } if ( result . hasFieldErrors ()) { List < Error > fieldErrors = new ArrayList <> ( 6 ); for ( FieldError err : result . getFieldErrors ()) { Error error = new Error (); error . field = err . getField (); error . rejected = err . getRejectedValue (); error . message = messages . getMessage ( err . getCode (), err . getDefaultMessage ()); fieldErrors . add ( error ); errorAttributes . put ( \"fieldErrors\" , fieldErrors ); } } errorAttributes . put ( \"message\" , messages . getMessage ( \"error.VALIDATION_ERROR\" , \"Validation failed for object='\" + result . getObjectName () + \"'. Error count: \" + result . getErrorCount ())); } return new ResponseEntity <> ( errorAttributes , status ); } @JsonInclude ( Include . NON_EMPTY ) static class Error { public String field ; public Object rejected ; public String message ; } @JsonView ( WebDataView . Basic . class ) @ExceptionHandler ( BasicErrorCodeException . class ) public ResponseEntity <?> handleErrorCodeException ( BasicErrorCodeException ex , HttpServletRequest request , HttpServletResponse response ) { Map < String , Object > errorAttributes = new LinkedHashMap <> (); HttpStatus status = HttpStatus . BAD_REQUEST ; errorAttributes . put ( \"status\" , status . value ()); errorAttributes . put ( \"error\" , status . getReasonPhrase ()); errorAttributes . put ( \"message\" , messages . getMessage ( \"error.\" + ex . getErrorCode (), ex . getMessage ())); errorAttributes . put ( \"body\" , ex . getBody ()); return new ResponseEntity <> ( errorAttributes , status ); } @ExceptionHandler ({ EmptyResultDataAccessException . class , EntityNotFoundException . class }) @ResponseStatus ( value = HttpStatus . NOT_FOUND ) public void handleNotFoundException () { } @ExceptionHandler ( Exception . class ) public void handleUncaughtException ( Exception ex , HttpServletRequest request , HttpServletResponse response ) throws Exception { if ( ex instanceof AccessDeniedException ) { throw ex ; } HttpStatus status = HttpStatus . INTERNAL_SERVER_ERROR ; logException ( ex , request , status ); String message = messages . getMessage ( \"error.INTERNAL_SERVER_ERROR\" , ex . getLocalizedMessage ()); response . sendError ( status . value (), message ); } private void logException ( Exception ex , HttpServletRequest request , HttpStatus status ) { if ( LOGGER . isErrorEnabled () && status . value () >= 500 || LOGGER . isInfoEnabled ()) { Marker marker = MarkerFactory . getMarker ( ex . getClass (). getName ()); String uri = request . getRequestURI (); if ( request . getQueryString () != null ) { uri += '?' + request . getQueryString (); } String msg = String . format ( \"%s %s ~> %s\" , request . getMethod (), uri , status ); if ( status . value () >= 500 ) { LOGGER . error ( marker , msg , ex ); } else if ( LOGGER . isDebugEnabled ()) { LOGGER . debug ( marker , msg , ex ); } else { LOGGER . info ( marker , msg ); } } } @Override public void setMessageSource ( MessageSource messageSource ) { this . messages = new MessageSourceAccessor ( messageSource ); } } \u4ee5\u4e0a\u89e3\u51b3\u65b9\u6848\u4e2d\uff0c\u901a\u8fc7\u7ee7\u627f ResponseEntityExceptionHandler \u7c7b\u5b9e\u73b0\u5bf9\u901a\u7528 spring mvc \u6807\u51c6\u5f02\u5e38\u96c6\u4e2d\u5316\u5904\u7406\uff0c\u8fd4\u56de\u6807\u51c6\u7684 ResponseEntity \u5bf9\u8c61\u3002 \u91cd\u5199\u4e86 ResponseEntityExceptionHandler \u7c7b\u5bf9 BindException , MethodArgumentNotValidException \u5b57\u6bb5\u9a8c\u8bc1\u7ed1\u5b9a\u5f02\u5e38\u5904\u7406\uff0c\u4f7f\u8fd4\u56de\u5f02\u5e38\u66f4\u52a0\u6e05\u6670\u548c\u673a\u6784\u5316\u3002 static class Error { public String field ; public Object rejected ; public String message ; } \u901a\u8fc7 @ExceptionHandler \u6ce8\u89e3\u6269\u5c55\u5bf9 BasicErrorCodeException \u81ea\u5b9a\u4e49\u5f02\u5e38\u7684\u5904\u7406\uff0c\u5e76\u652f\u6301\u5f02\u5e38\u56fd\u9645\u5316\u3002 \u901a\u8fc7 @ExceptionHandler \u548c @ResponseStatus(value = HttpStatus.NOT_FOUND) \u4e24\u4e2a\u6ce8\u91ca\u5bf9 EmptyResultDataAccessException , EntityNotFoundException \u8fdb\u884c\u5f02\u5e38\u5904\u7406\uff0c\u5f53\u51fa\u73b0\u4ee5\u4e0a\u5f02\u5e38\u65f6\uff0c\u8fd4\u56de 404 . Effective \u00b6 \u5f53\u5145\u5206\u5229\u7528\u597d\u5f02\u5e38\u65f6\uff0c\u53ef\u4ee5\u63d0\u9ad8\u7a0b\u5e8f\u7684\u53ef\u8bfb\u6027\u3001\u53ef\u9760\u6027\u548c\u53ef\u7ef4\u62a4\u6027\u3002\u5982\u679c\u4f7f\u7528\u4e0d\u5f53\uff0c\u5219\u4f1a\u4ea7\u751f\u8d1f\u9762\u6548\u679c\u3002 \u4e0d\u8981\u5ffd\u7565\u5f02\u5e38 \u00b6 \u867d\u7136\u8fd9\u4e00\u5efa\u8bae\u4f3c\u4e4e\u663e\u800c\u6613\u89c1\uff0c\u4f46\u5b83\u7ecf\u5e38\u88ab\u8fdd\u53cd\uff0c\u56e0\u6b64\u503c\u5f97\u5f3a\u8c03\u3002\u5f53 API \u7684\u8bbe\u8ba1\u4eba\u5458\u58f0\u660e\u4e00\u4e2a\u629b\u51fa\u5f02\u5e38\u7684\u65b9\u6cd5\u65f6\uff0c\u4ed6\u4eec\u8bd5\u56fe\u544a\u8bc9\u4f60\u4e00\u4e9b\u4e8b\u60c5\u3002\u4e0d\u8981\u5ffd\u7565\u5b83\uff01\u5982\u679c\u5728\u65b9\u6cd5\u8c03\u7528\u7684\u5468\u56f4\u52a0\u4e0a\u4e00\u6761 try \u8bed\u53e5\uff0c\u5176 catch \u5757\u4e3a\u7a7a\uff0c\u53ef\u4ee5\u5f88\u5bb9\u6613\u5ffd\u7565\u5f02\u5e38 \u7a7a catch \u5757\u8fdd\u80cc\u4e86\u5f02\u5e38\u7684\u76ee\u7684\uff0c \u5b83\u7684\u5b58\u5728\u662f\u4e3a\u4e86\u5f3a\u5236\u4f60\u5904\u7406\u5f02\u5e38\u60c5\u51b5\u3002\u5ffd\u7565\u5f02\u5e38\u7c7b\u4f3c\u4e8e\u5ffd\u7565\u706b\u707e\u8b66\u62a5\u4e00\u6837\uff0c\u5173\u6389\u5b83\u4e4b\u540e\uff0c\u5176\u4ed6\u4eba\u5c31\u6ca1\u6709\u673a\u4f1a\u770b\u5230\u662f\u5426\u771f\u7684\u53d1\u751f\u4e86\u706b\u707e\u3002**\u4f60\u53ef\u80fd\u4fa5\u5e78\u9003\u8131\uff0c\u4f46\u7ed3\u679c\u53ef\u80fd\u662f\u707e\u96be\u6027**\u7684\u3002\u6bcf\u5f53\u4f60\u770b\u5230\u4e00\u4e2a\u7a7a\u7684 catch \u5757\uff0c\u4f60\u7684\u8111\u6d77\u4e2d\u5e94\u8be5\u54cd\u8d77\u8b66\u62a5\u3002 \u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u5ffd\u7565\u5f02\u5e38\u662f\u5408\u9002\u7684\u3002\u4f8b\u5982\uff0c\u5728\u5173\u95ed FileInputStream \u65f6\uff0c\u5ffd\u7565\u5f02\u5e38\u53ef\u80fd\u662f\u5408\u9002\u7684\u3002\u4f60\u6ca1\u6709\u66f4\u6539\u6587\u4ef6\u7684\u72b6\u6001\uff0c\u56e0\u6b64\u4e0d\u9700\u8981\u6267\u884c\u4efb\u4f55\u6062\u590d\u64cd\u4f5c\uff0c\u5e76\u4e14\u5df2\u7ecf\u4ece\u6587\u4ef6\u4e2d\u8bfb\u53d6\u4e86\u6240\u9700\u7684\u4fe1\u606f\uff0c\u56e0\u6b64\u6ca1\u6709\u7406\u7531\u4e2d\u6b62\u6b63\u5728\u8fdb\u884c\u7684\u64cd\u4f5c\u3002 \u8bb0\u5f55\u5f02\u5e38\u53ef\u80fd\u662f\u660e\u667a\u7684\uff0c\u8fd9\u6837\u5982\u679c\u8fd9\u4e9b\u5f02\u5e38\u7ecf\u5e38\u53d1\u751f\uff0c\u4f60\u5e94\u8be5\u7814\u7a76\u8d77\u56e0 \u3002\u5982\u679c\u4f60\u9009\u62e9\u5ffd\u7565\u5f02\u5e38\uff0c catch \u5757\u5e94\u8be5\u5305\u542b\u4e00\u6761\u6ce8\u91ca\uff0c\u89e3\u91ca\u4e3a\u4ec0\u4e48\u8fd9\u6837\u505a\uff0c\u5e76\u4e14\u5e94\u8be5\u5c06\u53d8\u91cf\u547d\u540d\u4e3a ignore \uff1a Future < Integer > f = exec . submit ( planarMap :: chromaticNumber ); int numColors = 4 ; // Default; numColors = f . get ( 1L , TimeUnit . SECONDS ); } catch ( TimeoutException | ExecutionException ignored ) { // \u4f7f\u7528 default: minimal coloring is desirable, not required } Tip \u672c\u5efa\u8bae\u540c\u6837\u9002\u7528\u4e8e checked \u5f02\u5e38\u548c unchecked \u5f02\u5e38\u3002\u4e0d\u7ba1\u5f02\u5e38\u662f\u8868\u793a\u53ef\u9884\u6d4b\u7684\u5f02\u5e38\u6761\u4ef6\u8fd8\u662f\u7f16\u7a0b\u9519\u8bef\uff0c\u7528\u7a7a catch \u5757\u5ffd\u7565\u5b83\u5c06\u5bfc\u81f4\u7a0b\u5e8f\u5728\u9519\u8bef\u9762\u524d\u4fdd\u6301\u9759\u9ed8\u3002\u7136\u540e\uff0c\u7a0b\u5e8f\u53ef\u80fd\u4f1a\u5728\u672a\u6765\u7684\u4efb\u610f\u65f6\u95f4\u70b9\uff0c\u5728\u4e0e\u95ee\u9898\u6e90\u6ca1\u6709\u660e\u663e\u5173\u7cfb\u7684\u4ee3\u7801\u4e2d\u5931\u8d25\u3002\u6b63\u786e\u5904\u7406\u5f02\u5e38\u53ef\u4ee5\u5b8c\u5168\u907f\u514d\u5931\u8d25\u3002\u4ec5\u4ec5\u8ba9\u5f02\u5e38\u5411\u5916\u4f20\u64ad\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u7a0b\u5e8f\u8d70\u5411\u5931\u8d25\uff0c\u4fdd\u7559\u4fe1\u606f\u6709\u5229\u4e8e\u8c03\u8bd5\u3002 \u4ec5\u5728\u786e\u6709\u5f02\u5e38\u4f7f\u7528 \u00b6 try { int i = 0 ; while ( true ) range [ i ++] . climb (); } catch ( ArrayIndexOutOfBoundsException e ) { } \u8fd9\u662f\u4e00\u4e2a\u7528\u4e8e\u904d\u5386\u6570\u7ec4\u7684\u5143\u7d20\u7684\u975e\u5e38\u7cdf\u7cd5\u7684\u4e60\u60ef\u7528\u6cd5\u3002\u5f53\u8bd5\u56fe\u8bbf\u95ee\u6570\u7ec4\u8fb9\u754c\u4e4b\u5916\u7684\u6570\u7ec4\u5143\u7d20\u65f6\uff0c\u901a\u8fc7\u629b\u51fa\u3001\u6355\u83b7\u548c\u5ffd\u7565 ArrayIndexOutOfBoundsException \u6765\u7ec8\u6b62\u65e0\u9650\u5faa\u73af \u6807\u51c6\u505a\u6cd5\u662f: for ( Mountain m : range ) m . climb (); \u5229\u7528\u9519\u8bef\u5224\u65ad\u673a\u5236\u6765\u63d0\u9ad8\u6027\u80fd\u662f\u9519\u8bef\u7684\u3002\u8fd9\u79cd\u601d\u8def\u6709\u4e09\u70b9\u8bef\u533a\uff1a \u56e0\u4e3a\u5f02\u5e38\u662f\u4e3a\u5f02\u5e38\u60c5\u51b5\u8bbe\u8ba1\u7684\uff0c\u6240\u4ee5 JVM \u5b9e\u73b0\u51e0\u4e4e\u4e0d\u4f1a\u8ba9\u5b83\u4eec\u50cf\u663e\u5f0f\u6d4b\u8bd5\u4e00\u6837\u5feb\u3002 \u5c06\u4ee3\u7801\u653e\u5728 try-catch \u5757\u4e2d\u4f1a\u6291\u5236 JVM \u53ef\u80fd\u6267\u884c\u7684\u67d0\u4e9b\u4f18\u5316\uff1b \u904d\u5386\u6570\u7ec4\u7684\u6807\u51c6\u4e60\u60ef\u7528\u6cd5\u4e0d\u4e00\u5b9a\u4f1a\u5bfc\u81f4\u5197\u4f59\u68c0\u67e5\u3002\u8bb8\u591a JVM \u5b9e\u73b0\u5bf9\u5b83\u4eec\u8fdb\u884c\u4e86\u4f18\u5316\u3002 \u4e8b\u5b9e\u4e0a\uff0c\u57fa\u4e8e\u5f02\u5e38\u7684\u7528\u6cd5\u6bd4\u6807\u51c6\u7528\u6cd5\u6162\u5f97\u591a\u3002\u7528 100 \u4e2a\u5143\u7d20\u7684\u6570\u7ec4\u6d4b\u8bd5\uff0c\u57fa\u4e8e\u5f02\u5e38\u7684\u7528\u6cd5\u4e0e\u6807\u51c6\u7528\u6cd5\u76f8\u6bd4\u901f\u5ea6\u5927\u7ea6\u6162\u4e86\u4e24\u500d\u3002 \u5f02\u5e38\u53ea\u9002\u7528\u4e8e\u786e\u6709\u5f02\u5e38\u7684\u60c5\u51b5\uff1b\u5b83\u4eec\u4e0d\u5e94\u8be5\u7528\u4e8e\u4e00\u822c\u7684\u63a7\u5236\u6d41\u7a0b \u3002 \u66f4\u8fdb\u4e00\u6b65\u8bf4\uff0c\u4f7f\u7528\u6807\u51c6\u7684\u3001\u6613\u4e8e\u8bc6\u522b\u7684\u4e60\u60ef\u7528\u6cd5\uff0c\u800c\u4e0d\u662f\u58f0\u79f0\u80fd\u591f\u63d0\u4f9b\u66f4\u597d\u6027\u80fd\u7684\u8fc7\u4e8e\u6296\u673a\u7075\u7684\u6280\u672f\u3002\u5373\u4f7f\u6027\u80fd\u4f18\u52bf\u662f\u771f\u5b9e\u5b58\u5728\u7684\uff0c\u4f46\u5728\u7a33\u6b65\u6539\u8fdb\u5e73\u53f0\u5b9e\u73b0\u7684\u524d\u63d0\u4e0b\uff0c\u8fd9\u79cd\u4f18\u52bf\u4e5f\u5e76\u4e0d\u53ef\u9760\u3002\u800c\u4e14\uff0c\u6765\u81ea\u6296\u673a\u7075\u7684\u6280\u672f\u5b58\u5728\u7684\u7ec6\u5fae\u7f3a\u9677\u548c\u7ef4\u62a4\u95ee\u9898\u80af\u5b9a\u4f1a\u7ee7\u7eed\u5b58\u5728\u3002 \u8fd9\u4e2a\u539f\u5219\u5bf9 API \u8bbe\u8ba1\u4e5f\u6709\u5f71\u54cd\u3002\u4e00\u4e2a\u8bbe\u8ba1\u826f\u597d\u7684 API \u4e0d\u80fd\u8feb\u4f7f\u5176\u5ba2\u6237\u7aef\u4e3a\u4e00\u822c\u7684\u63a7\u5236\u6d41\u7a0b\u4f7f\u7528\u5f02\u5e38\u3002\u53ea\u6709\u5728\u67d0\u4e9b\u4e0d\u53ef\u9884\u77e5\u7684\u6761\u4ef6\u4e0b\u624d\u80fd\u8c03\u7528\u5177\u6709\u300c\u72b6\u6001\u4f9d\u8d56\u300d\u65b9\u6cd5\u7684\u7c7b\uff0c\u901a\u5e38\u5e94\u8be5\u6709\u4e00\u4e2a\u5355\u72ec\u7684\u300c\u72b6\u6001\u6d4b\u8bd5\u300d\u65b9\u6cd5\uff0c\u8868\u660e\u662f\u5426\u9002\u5408\u8c03\u7528\u300c\u72b6\u6001\u4f9d\u8d56\u300d\u65b9\u6cd5\u3002\u4f8b\u5982\uff0c Iterator \u63a5\u53e3\u5177\u6709\u300c\u72b6\u6001\u4f9d\u8d56\u300d\u7684 next \u65b9\u6cd5\u548c\u5bf9\u5e94\u7684\u300c\u72b6\u6001\u6d4b\u8bd5\u300d\u65b9\u6cd5 hasNext \u3002\u8fd9\u4f7f\u5f97\u4f20\u7edf for \u5faa\u73af\uff08\u5728 for-each \u5faa\u73af\u5185\u90e8\u4e5f\u4f7f\u7528\u4e86 hasNext \u65b9\u6cd5\uff09\u5728\u96c6\u5408\u4e0a\u8fdb\u884c\u8fed\u4ee3\u6210\u4e3a\u6807\u51c6\u4e60\u60ef\u7528\u6cd5\uff1a for ( Iterator < Foo > i = collection . iterator (); i . hasNext (); ) { Foo foo = i . next (); ... } \u5982\u679c Iterator \u7f3a\u5c11 hasNext \u65b9\u6cd5\uff0c\u5ba2\u6237\u7aef\u5c06\u88ab\u8feb\u8fd9\u6837\u505a\uff1a try { Iterator < Foo > i = collection . iterator (); while ( true ) { Foo foo = i . next (); ... } } catch ( NoSuchElementException e ) { } \u8fd9\u4e0e\u4e00\u5f00\u59cb\u4e3e\u4f8b\u7684\u5bf9\u6570\u7ec4\u8fdb\u884c\u8fed\u4ee3\u7684\u4f8b\u5b50\u975e\u5e38\u76f8\u4f3c\uff0c\u9664\u4e86\u5197\u957f\u548c\u8bef\u5bfc\u4e4b\u5916\uff0c\u57fa\u4e8e\u5f02\u5e38\u7684\u5faa\u73af\u6267\u884c\u6548\u679c\u53ef\u80fd\u5f88\u5dee\uff0c\u5e76\u4e14\u4f1a\u63a9\u76d6\u7cfb\u7edf\u4e2d\u4e0d\u76f8\u5173\u90e8\u5206\u7684 bug\u3002 \u63d0\u4f9b\u5355\u72ec\u7684\u300c\u72b6\u6001\u6d4b\u8bd5\u300d\u65b9\u6cd5\u7684\u53e6\u4e00\u79cd\u65b9\u5f0f\uff0c\u5c31\u662f\u8ba9\u300c\u72b6\u6001\u4f9d\u8d56\u300d\u65b9\u6cd5\u8fd4\u56de\u4e00\u4e2a\u7a7a\u7684 Optional \u5bf9\u8c61\uff0c\u6216\u8005\u5728\u5b83\u4e0d\u80fd\u6267\u884c\u6240\u9700\u7684\u8ba1\u7b97\u65f6\u8fd4\u56de\u4e00\u4e2a\u53ef\u8bc6\u522b\u7684\u503c\uff0c\u6bd4\u5982 null\u3002 \u6709\u4e00\u4e9b\u6307\u5bfc\u539f\u5219\uff0c\u5e2e\u52a9\u4f60\u5728 \u300c\u72b6\u6001\u6d4b\u8bd5\u300d\u65b9\u6cd5 \u3001 Optional \u3001 \u53ef\u8bc6\u522b\u7684\u8fd4\u56de\u503c \u4e4b\u95f4\u8fdb\u884c\u9009\u62e9\u3002 \u5982\u679c\u8981\u5728\u6ca1\u6709\u5916\u90e8\u540c\u6b65\u7684\u60c5\u51b5\u4e0b\u5e76\u53d1\u5730\u8bbf\u95ee\u5bf9\u8c61\uff0c\u6216\u8005\u53d7\u5236\u4e8e\u5916\u90e8\u6761\u4ef6\u7684\u72b6\u6001\u8f6c\u6362\uff0c\u5219\u5fc5\u987b\u4f7f\u7528 Optional \u6216\u53ef\u8bc6\u522b\u7684\u8fd4\u56de\u503c\uff0c\u56e0\u4e3a\u5bf9\u8c61\u7684\u72b6\u6001\u53ef\u80fd\u5728\u8c03\u7528\u300c\u72b6\u6001\u6d4b\u8bd5\u300d\u65b9\u6cd5\u4e0e\u300c\u72b6\u6001\u4f9d\u8d56\u300d\u65b9\u6cd5\u7684\u95f4\u9694\u4e2d\u53d1\u751f\u53d8\u5316\u3002 \u5982\u679c\u4e00\u4e2a\u5355\u72ec\u7684\u300c\u72b6\u6001\u6d4b\u8bd5\u300d\u65b9\u6cd5\u91cd\u590d\u300c\u72b6\u6001\u4f9d\u8d56\u300d\u65b9\u6cd5\u7684\u5de5\u4f5c\uff0c\u4ece\u6027\u80fd\u95ee\u9898\u8003\u8651\uff0c\u53ef\u80fd\u8981\u6c42\u4f7f\u7528 Optional \u6216\u53ef\u8bc6\u522b\u7684\u8fd4\u56de\u503c\u3002 \u5728\u6240\u6709\u5176\u4ed6\u6761\u4ef6\u76f8\u540c\u7684\u60c5\u51b5\u4e0b\uff0c\u300c\u72b6\u6001\u6d4b\u8bd5\u300d\u65b9\u6cd5\u7565\u4f18\u4e8e\u53ef\u8bc6\u522b\u7684\u8fd4\u56de\u503c\u3002\u5b83\u63d0\u4f9b\u4e86\u8f83\u597d\u7684\u53ef\u8bfb\u6027\uff0c\u800c\u4e14\u4e0d\u6b63\u786e\u7684\u4f7f\u7528\u53ef\u80fd\u66f4\u5bb9\u6613\u88ab\u68c0\u6d4b\uff1a\u5982\u679c\u4f60\u5fd8\u8bb0\u8c03\u7528\u300c\u72b6\u6001\u6d4b\u8bd5\u300d\u65b9\u6cd5\uff0c\u300c\u72b6\u6001\u4f9d\u8d56\u300d\u65b9\u6cd5\u5c06\u629b\u51fa\u5f02\u5e38\uff0c\u4f7f\u9519\u8bef\u663e\u800c\u6613\u89c1\uff1b \u5982\u679c\u4f60\u5fd8\u8bb0\u68c0\u67e5\u4e00\u4e2a\u53ef\u8bc6\u522b\u7684\u8fd4\u56de\u503c\uff0c\u90a3\u4e48\u8fd9\u4e2a bug \u53ef\u80fd\u5f88\u96be\u53d1\u73b0\u3002\u4f46\u662f\u8fd9\u5bf9\u4e8e\u8fd4\u56de Optional \u5bf9\u8c61\u7684\u65b9\u5f0f\u6765\u8bf4\u4e0d\u662f\u95ee\u9898\u3002 checked \u548c unchecked \u00b6 Java \u63d0\u4f9b\u4e86\u4e09\u79cd Throwable \uff1a checked exception , runtime exception , \u548c errors\u3002\u7a0b\u5e8f\u5458\u4eec\u5bf9\u4ec0\u4e48\u65f6\u5019\u4f7f\u7528\u8fd9\u4e9b\u53ef\u629b\u51fa\u9879\u6bd4\u8f83\u56f0\u60d1\u3002\u867d\u7136\u51b3\u7b56\u5e76\u4e0d\u603b\u662f\u660e\u786e\u7684\uff0c\u4f46\u662f\u6709\u4e00\u4e9b\u901a\u7528\u89c4\u5219\u53ef\u4ee5\u63d0\u4f9b\u6709\u529b\u7684\u6307\u5bfc\u3002 checked \u00b6 \u4f7f\u7528 checked \u5f02\u5e38\u7684\u60c5\u51b5\u662f\u4e3a\u4e86\u5408\u7406\u5730\u671f\u671b\u8c03\u7528\u8005\u80fd\u591f\u4ece\u4e2d\u6062\u590d\u3002 \u901a\u8fc7\u629b\u51fa\u4e00\u4e2a checked \u7684\u5f02\u5e38\uff0c\u4f60\u53ef\u4ee5\u5f3a\u5236\u8c03\u7528\u8005\u5728 catch \u5b50\u53e5\u4e2d\u5904\u7406\u5f02\u5e38\uff0c\u6216\u8005\u5c06\u5176\u4f20\u64ad\u51fa\u53bb. \u56e0\u6b64\uff0c\u65b9\u6cd5\u4e2d\u58f0\u660e\u7684\u8981\u629b\u51fa\u7684\u6bcf\u4e2a checked \u5f02\u5e38\uff0c\u90fd\u6e05\u695a\u7684\u5411 API \u7528\u6237\u8868\u660e: \u8fd9\u662f\u53ef\u80fd\u51fa\u73b0\u7684\u8c03\u7528\u7ed3\u679c\u3002 Note \u901a\u8fc7\u5411\u7528\u6237\u63d0\u4f9b checked \u5f02\u5e38\uff0cAPI \u8bbe\u8ba1\u8005\u63d0\u4f9b\u4e86\u4ece\u5f02\u5e38\u6761\u4ef6\u4e2d\u6062\u590d\u7684\u63a5\u53e3\u3002\u7528\u6237\u65e0\u89c6\u5f02\u5e38\u5904\u7406\u8981\u6c42\uff0c\u53ef\u4ee5\u6355\u83b7\u5f02\u5e38\u5e76\u5ffd\u7565\uff0c\u4f46\u8fd9\u901a\u5e38\u4e0d\u662f\u4e00\u4e2a\u597d\u7684\u505a\u6cd5\uff0c\u53c2\u89c1 \u4e0d\u8981\u5ffd\u7565\u5f02\u5e38 \u7ae0\u8282\u3002 API \u8bbe\u8ba1\u4eba\u5458\u5e38\u5e38\u5fd8\u8bb0\u5f02\u5e38\u4e5f\u662f\u4e00\u4e2a\u6210\u719f\u5bf9\u8c61\uff0c\u53ef\u4ee5\u4e3a\u5176\u5b9a\u4e49\u4efb\u610f\u65b9\u6cd5\u3002 \u6b64\u7c7b\u65b9\u6cd5\u7684\u4e3b\u8981\u7528\u9014\u662f\u63d0\u4f9b\u6355\u83b7\u5f02\u5e38\u7684\u4ee3\u7801\uff0c\u5e76\u63d0\u4f9b\u6709\u5173\u5f15\u53d1\u5f02\u5e38\u7684\u9644\u52a0\u4fe1\u606f\u3002\u5982\u679c\u7f3a\u4e4f\u6b64\u7c7b\u65b9\u6cd5\uff0c\u7a0b\u5e8f\u5458\u9700\u8981\u81ea\u884c\u89e3\u6790\u5f02\u5e38\u7684\u5b57\u7b26\u4e32\u8868\u793a\u4ee5\u83b7\u53d6\u66f4\u591a\u4fe1\u606f\u3002\u8fd9\u662f\u6781\u574f\u7684\u505a\u6cd5\u3002\u8fd9\u79cd\u7c7b\u5f88\u5c11\u6307\u5b9a\u5176\u5b57\u7b26\u4e32\u8868\u793a\u7684\u7ec6\u8282\uff0c\u56e0\u6b64\u5b57\u7b26\u4e32\u8868\u793a\u53ef\u80fd\u56e0\u5b9e\u73b0\u800c\u5f02\uff0c\u4e5f\u53ef\u80fd\u56e0\u7248\u672c\u800c\u5f02\u3002\u56e0\u6b64\uff0c\u89e3\u6790\u5f02\u5e38\u7684\u5b57\u7b26\u4e32\u8868\u793a\u5f62\u5f0f\u7684\u4ee3\u7801\u53ef\u80fd\u662f\u4e0d\u53ef\u79fb\u690d\u4e14\u8106\u5f31\u7684 \u56e0\u4e3a checked \u5f02\u5e38\u901a\u5e38\u8868\u793a\u53ef\u6062\u590d\u7684\u6761\u4ef6\uff0c\u6240\u4ee5\u8fd9\u7c7b\u5f02\u5e38\u6765\u8bf4\uff0c\u8bbe\u8ba1\u80fd\u591f\u63d0\u4f9b\u4fe1\u606f\u7684\u65b9\u6cd5\u6765\u5e2e\u52a9\u8c03\u7528\u8005\u4ece\u5f02\u5e38\u6761\u4ef6\u4e2d\u6062\u590d\u5c24\u4e3a\u91cd\u8981\u3002\u4f8b\u5982\uff0c\u5047\u8bbe\u5f53\u4f7f\u7528\u793c\u54c1\u5361\u8d2d\u7269\u7531\u4e8e\u8d44\u91d1\u4e0d\u8db3\u800c\u5931\u8d25\u65f6\uff0c\u629b\u51fa\u4e00\u4e2a checked \u5f02\u5e38\u3002\u8be5\u5f02\u5e38\u5e94\u63d0\u4f9b\u4e00\u4e2a\u8bbf\u95ee\u5668\u65b9\u6cd5\u6765\u67e5\u8be2\u5dee\u989d\u3002\u8fd9\u5c06\u4f7f\u8c03\u7528\u8005\u80fd\u591f\u5c06\u91d1\u989d\u4f20\u9012\u7ed9\u8d2d\u7269\u8005. unchecked \u00b6 \u6709\u4e24\u79cd unchecked \u7684\u53ef\u629b\u51fa\u9879\uff1a\u8fd0\u884c\u65f6\u5f02\u5e38\u548c\u9519\u8bef\u3002\u5b83\u4eec\u5728\u884c\u4e3a\u4e0a\u662f\u4e00\u6837\u7684\uff1a \u90fd\u662f\u53ef\u629b\u51fa\u7684\uff0c\u901a\u5e38\u4e0d\u9700\u8981\u4e5f\u4e0d\u5e94\u8be5\u88ab\u6355\u83b7 \u3002 \u5982\u679c\u7a0b\u5e8f\u629b\u51fa unchecked \u5f02\u5e38\u6216\u9519\u8bef\uff0c\u901a\u5e38\u60c5\u51b5\u4e0b\u662f\u4e0d\u53ef\u80fd\u6062\u590d\u7684\uff0c\u5982\u679c\u7ee7\u7eed\u6267\u884c\uff0c\u5f0a\u5927\u4e8e\u5229\u3002\u5982\u679c\u7a0b\u5e8f\u6ca1\u6709\u6355\u83b7\u5230\u8fd9\u6837\u7684\u53ef\u629b\u51fa\u9879\uff0c\u5b83\u5c06\u5bfc\u81f4\u5f53\u524d\u7ebf\u7a0b\u505c\u6b62\uff0c\u5e76\u53d1\u51fa\u9002\u5f53\u7684\u9519\u8bef\u6d88\u606f\u3002 \u4f7f\u7528\u8fd0\u884c\u65f6\u5f02\u5e38\u6765\u6307\u793a\u7f16\u7a0b\u9519\u8bef \u3002 \u7edd\u5927\u591a\u6570\u8fd0\u884c\u65f6\u5f02\u5e38\u90fd\u8868\u793a\u64cd\u4f5c\u8fdd\u53cd\u4e86\u5148\u51b3\u6761\u4ef6\u3002\u8fdd\u53cd\u5148\u51b3\u6761\u4ef6\u662f\u6307\u4f7f\u7528 API \u7684\u5ba2\u6237\u7aef\u672a\u80fd\u9075\u5b88 API \u89c4\u8303\u6240\u5efa\u7acb\u7684\u7ea6\u5b9a\u3002\u4f8b\u5982\uff0c\u6570\u7ec4\u8bbf\u95ee\u7ea6\u5b9a\u6307\u5b9a\u6570\u7ec4\u7d22\u5f15\u5fc5\u987b\u5927\u4e8e\u7b49\u4e8e 0 \u5e76\u4e14\u5c0f\u4e8e\u7b49\u4e8e length-1 \uff08length\uff1a\u6570\u7ec4\u957f\u5ea6\uff09\u3002 ArrayIndexOutOfBoundsException \u8868\u793a\u8fdd\u53cd\u4e86\u6b64\u5148\u51b3\u6761\u4ef6\u3002 \u6709\u4e2a\u95ee\u9898\uff0c\u5e76\u4e0d\u603b\u80fd\u6e05\u695a\u662f\u5728\u5904\u7406\u53ef\u6062\u590d\u7684\u6761\u4ef6\u8fd8\u662f\u7f16\u7a0b\u9519\u8bef\uff0c\u4f8b\u5982\uff0c\u8003\u8651\u8d44\u6e90\u8017\u5c3d\u7684\u60c5\u51b5\uff0c\u8fd9\u53ef\u80fd\u662f\u7531\u7f16\u7a0b\u9519\u8bef\uff08\u5982\u5206\u914d\u4e00\u4e2a\u4e0d\u5408\u7406\u7684\u5927\u6570\u7ec4\uff09\u6216\u771f\u6b63\u7684\u8d44\u6e90\u77ed\u7f3a\u9020\u6210\u7684 \u5982\u679c\u8d44\u6e90\u67af\u7aed\u662f\u7531\u4e8e\u6682\u65f6\u77ed\u7f3a\u6216\u6682\u65f6\u9700\u6c42\u589e\u52a0\u9020\u6210\u7684\uff0c\u8fd9\u79cd\u60c5\u51b5\u5f88\u53ef\u80fd\u662f\u53ef\u4ee5\u6062\u590d\u7684\u3002\u5bf9\u4e8e API \u8bbe\u8ba1\u4eba\u5458\u6765\u8bf4\uff0c\u5224\u65ad\u7ed9\u5b9a\u7684\u8d44\u6e90\u8017\u5c3d\u5b9e\u4f8b\u662f\u5426\u5141\u8bb8\u6062\u590d\u662f\u4e00\u4e2a\u95ee\u9898\u3002 \u603b\u7ed3 \u5982\u679c\u4f60\u8ba4\u4e3a\u67d0\u4e2a\u6761\u4ef6\u53ef\u80fd\u5141\u8bb8\u6062\u590d\uff0c\u8bf7\u4f7f\u7528 checked \u5f02\u5e38\uff1b\u5982\u679c\u6ca1\u6709\uff0c\u5219\u4f7f\u7528\u8fd0\u884c\u65f6 error \u00b6 \u867d\u7136 Java \u8bed\u8a00\u89c4\u8303\u6ca1\u6709\u8981\u6c42\uff0c\u4f46\u6709\u4e00\u4e2a\u7ea6\u5b9a\u4fd7\u6210\u7684\u7ea6\u5b9a\uff0c\u5373\u9519\u8bef\u4fdd\u7559\u7ed9 JVM \u4f7f\u7528\uff0c\u4ee5\u6307\u793a\uff1a\u8d44\u6e90\u4e0d\u8db3\u3001\u4e0d\u53ef\u6062\u590d\u6545\u969c\u6216\u5176\u4ed6\u5bfc\u81f4\u65e0\u6cd5\u7ee7\u7eed\u6267\u884c\u7684\u6761\u4ef6\u3002 Tip \u8003\u8651\u5230\u8fd9\u79cd\u7ea6\u5b9a\u88ab\u5927\u4f17\u8ba4\u53ef\uff0c\u6240\u4ee5\u6700\u597d\u4e0d\u8981\u5b9e\u73b0\u4efb\u4f55\u65b0\u7684 Error \u5b50\u7c7b\u3002\u56e0\u6b64\uff0c\u4f60\u5b9e\u73b0\u7684\u6240\u6709 unchecked \u53ef\u629b\u51fa\u9879\u90fd\u5e94\u8be5\u7ee7\u627f RuntimeException\uff08\u76f4\u63a5\u6216\u95f4\u63a5\uff09\u3002\u4e0d\u4ec5\u4e0d\u5e94\u8be5\u5b9a\u4e49 Error \u5b50\u7c7b\uff0c\u800c\u4e14\u9664\u4e86 AssertionError \u4e4b\u5916\uff0c\u4e0d\u5e94\u8be5\u629b\u51fa\u5b83\u4eec\u3002 Tip \u666e\u901a checked \u5f02\u5e38\u662f Exception \u7684\u5b50\u7c7b\uff0c\u4f46\u4e0d\u662f RuntimeException \u7684\u5b50\u7c7b \u603b\u7ed3 \u603b\u800c\u8a00\u4e4b\uff0c\u4e3a\u53ef\u6062\u590d\u6761\u4ef6\u629b\u51fa checked \u5f02\u5e38\uff0c\u4e3a\u7f16\u7a0b\u9519\u8bef\u629b\u51fa unchecked \u5f02\u5e38\u3002\u5f53\u6709\u7591\u95ee\u65f6\uff0c\u629b\u51fa unchecked \u5f02\u5e38\u3002\u4e0d\u8981\u5b9a\u4e49\u4efb\u4f55\u65e2\u4e0d\u662f checked \u5f02\u5e38\u4e5f\u4e0d\u662f\u8fd0\u884c\u65f6\u5f02\u5e38\u7684\u81ea\u5b9a\u4e49\u5f02\u5e38\u3002\u5e94\u8be5\u4e3a checked \u5f02\u5e38\u8bbe\u8ba1\u76f8\u5173\u7684\u65b9\u6cd5\uff0c\u5982\u63d0\u4f9b\u5f02\u5e38\u4fe1\u606f\uff0c\u4ee5\u5e2e\u52a9\u6062\u590d\u3002 \u590d\u7528\u6807\u51c6\u5f02\u5e38 \u00b6 \u4ee3\u7801\u590d\u7528\u662f\u4e00\u4ef6\u597d\u4e8b\uff0c\u5f02\u5e38\u4e5f\u4e0d\u4f8b\u5916\u3002Java \u5e93\u63d0\u4f9b\u4e86\u4e00\u7ec4\u5f02\u5e38\uff0c\u6db5\u76d6\u4e86\u5927\u591a\u6570 API \u7684\u5927\u591a\u6570\u5f02\u5e38\u629b\u51fa\u9700\u6c42\u3002 \u590d\u7528\u6807\u51c6\u5f02\u5e38\u6709\u51e0\u4e2a\u597d\u5904\uff1a \u5176\u4e2d\u6700\u4e3b\u8981\u7684\u662f\uff0c\u5b83\u4f7f\u4f60\u7684 API \u66f4\u5bb9\u6613\u5b66\u4e60\u548c\u4f7f\u7528\uff0c\u56e0\u4e3a\u5b83\u7b26\u5408\u7a0b\u5e8f\u5458\u5df2\u7ecf\u719f\u6089\u7684\u65e2\u5b9a\u7ea6\u5b9a\u3002 \u5176\u6b21\uff0c\u4f7f\u7528\u4f60\u7684 API \u7684\u7a0b\u5e8f\u66f4\u5bb9\u6613\u9605\u8bfb\uff0c\u56e0\u4e3a\u5b83\u4eec\u4e0d\u4f1a\u56e0\u4e3a\u4e0d\u719f\u6089\u7684\u5f02\u5e38\u800c\u6df7\u4e71\u3002\u6700\u540e\uff08\u4e5f\u662f\u6700\u4e0d\u91cd\u8981\u7684\uff09\uff0c\u66f4\u5c11\u7684\u5f02\u5e38\u7c7b\u610f\u5473\u7740\u66f4\u5c0f\u7684\u5185\u5b58\u5360\u7528\u548c\u66f4\u5c11\u7684\u52a0\u8f7d\u7c7b\u7684\u65f6\u95f4 \u5e38\u89c1\u53ef\u590d\u7528\u5f02\u5e38: \u6700\u5e38\u89c1\u7684\u590d\u7528\u5f02\u5e38\u7c7b\u578b\u662f IllegalArgumentException \u3002\u8fd9\u901a\u5e38\u662f\u8c03\u7528\u8005\u4f20\u5165\u4e0d\u5408\u9002\u7684\u53c2\u6570\u65f6\u629b\u51fa\u7684\u5f02\u5e38\u3002\u4f8b\u5982\uff0c\u5982\u679c\u8c03\u7528\u8005\u5728\u8868\u793a\u67d0\u4e2a\u64cd\u4f5c\u8981\u91cd\u590d\u591a\u5c11\u6b21\u7684\u53c2\u6570\u4e2d\u4f20\u9012\u4e86\u4e00\u4e2a\u8d1f\u6570\uff0c\u5219\u629b\u51fa\u8fd9\u4e2a\u5f02\u5e38\u3002 \u53e6\u4e00\u4e2a\u5e38\u88ab\u590d\u7528\u5f02\u5e38\u662f IllegalStateException \u3002\u5982\u679c\u63a5\u6536\u5bf9\u8c61\u7684\u72b6\u6001\u5bfc\u81f4\u8c03\u7528\u975e\u6cd5\uff0c\u5219\u901a\u5e38\u4f1a\u629b\u51fa\u6b64\u5f02\u5e38\u3002\u4f8b\u5982\uff0c\u5982\u679c\u8c03\u7528\u8005\u8bd5\u56fe\u5728\u5bf9\u8c61\u88ab\u6b63\u786e\u521d\u59cb\u5316\u4e4b\u524d\u4f7f\u7528\u5b83\uff0c\u90a3\u4e48\u8fd9\u5c06\u662f\u629b\u51fa\u7684\u5f02\u5e38\u3002 \u6700\u540e\u4e00\u4e2a\u9700\u8981\u6ce8\u610f\u7684\u6807\u51c6\u5f02\u5e38\u662f UnsupportedOperationException \u3002\u5982\u679c\u5bf9\u8c61\u4e0d\u652f\u6301\u5c1d\u8bd5\u7684\u64cd\u4f5c\uff0c\u5219\u629b\u51fa\u6b64\u5f02\u5e38\u3002\u5b83\u5f88\u5c11\u4f7f\u7528\uff0c\u56e0\u4e3a\u5927\u591a\u6570\u5bf9\u8c61\u90fd\u652f\u6301\u5b83\u4eec\u7684\u6240\u6709\u65b9\u6cd5\u3002\u6b64\u5f02\u5e38\u7528\u4e8e\u4e00\u4e2a\u7c7b\u6ca1\u6709\u5b9e\u73b0\u7531\u5176\u5b9e\u73b0\u7684\u63a5\u53e3\u5b9a\u4e49\u7684\u4e00\u4e2a\u6216\u591a\u4e2a\u53ef\u9009\u64cd\u4f5c\u3002\u4f8b\u5982\uff0c\u5bf9\u4e8e\u53ea\u652f\u6301\u8ffd\u52a0\u64cd\u4f5c\u7684 List \u5b9e\u73b0\uff0c\u8bd5\u56fe\u4ece\u4e2d\u5220\u9664\u5143\u7d20\u65f6\u5c31\u4f1a\u629b\u51fa\u8fd9\u4e2a\u5f02\u5e38\u3002 Caution \u4e0d\u8981\u76f4\u63a5\u590d\u7528 Exception\u3001RuntimeException\u3001Throwable \u6216 Error\u3002 \u5e94\u5f53\u5c06\u8fd9\u4e9b\u7c7b\u89c6\u4e3a\u62bd\u8c61\u7c7b\u3002\u4f60\u4e0d\u80fd\u5bf9\u8fd9\u4e9b\u5f02\u5e38\u8fdb\u884c\u53ef\u9760\u7684\u6d4b\u8bd5\uff0c\u56e0\u4e3a\u5b83\u4eec\u662f\u65b9\u6cd5\u53ef\u80fd\u629b\u51fa\u7684\u5f02\u5e38\u7684\u8d85\u7c7b\u3002 \u5982\u679c\u4e00\u4e2a\u5f02\u5e38\u7b26\u5408\u4f60\u7684\u9700\u8981\uff0c\u90a3\u4e48\u7ee7\u7eed\u4f7f\u7528\u5b83\uff0c\u4f46\u524d\u63d0\u662f\u4f60\u629b\u51fa\u5b83\u7684\u6761\u4ef6\u4e0e\u5f02\u5e38\u7684\u6587\u6863\u63cf\u8ff0\u4e00\u81f4\uff1a\u590d\u7528\u5fc5\u987b\u57fa\u4e8e\u6587\u6863\u5316\u7684\u8bed\u4e49\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u57fa\u4e8e\u540d\u79f0\u3002\u53e6\u5916\uff0c\u5982\u679c\u4f60\u60f3\u6dfb\u52a0\u66f4\u591a\u7684\u7ec6\u8282\uff0c\u53ef\u4ee5\u968f\u610f\u5b50\u7c7b\u5316\u6807\u51c6\u5f02\u5e38\uff0c\u4f46\u662f\u8bb0\u4f4f\uff0c\u5f02\u5e38\u662f\u53ef\u5e8f\u5217\u5316\u7684\u3002\u5982\u679c\u6ca1\u6709\u5145\u5206\u7684\u7406\u7531\uff0c\u4e0d\u8981\u7f16\u5199\u81ea\u5df1\u7684\u5f02\u5e38\u7c7b\u3002 Question \u8003\u8651\u4e00\u4e2a\u5bf9\u8c61\uff0c\u8868\u793a\u4e00\u526f\u724c\uff0c\u5047\u8bbe\u6709\u4e00\u4e2a\u65b9\u6cd5\u4ee3\u8868\u53d1\u724c\u64cd\u4f5c\uff0c\u8be5\u65b9\u6cd5\u5c06\u624b\u724c\u591a\u5c11\u4f5c\u4e3a\u53c2\u6570\u3002\u5982\u679c\u8c03\u7528\u8005\u4f20\u9012\u7684\u503c\u5927\u4e8e\u724c\u5806\u4e2d\u5269\u4f59\u7684\u724c\u7684\u6570\u91cf\uff0c\u5219\u53ef\u4ee5\u5c06\u5176\u89e3\u91ca\u4e3a IllegalArgumentException \uff08handSize \u53c2\u6570\u503c\u592a\u5927\uff09\u6216 IllegalStateException \uff08\u724c\u5806\u4e2d\u5305\u542b\u7684\u724c\u592a\u5c11\uff09\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u89c4\u5219\u662f\uff1a\u5982\u679c\u6ca1\u6709\u53c2\u6570\u503c\uff0c\u629b\u51fa IllegalStateException \uff0c\u5426\u5219\u629b\u51fa IllegalArgumentException \u3002","title":"\u5f02\u5e38"},{"location":"project/advance/exception/#_1","text":"\u5728 Java \u4e2d\uff0c\u5f02\u5e38\u5904\u7406\u662f\u901a\u8fc7 try \u3001 catch \u5757\u5b8c\u6210\u7684\uff0c\u4f46\u662f Spring Boot \u8fd8\u5141\u8bb8\u6211\u4eec\u63d0\u4f9b\u81ea\u5b9a\u4e49\u7684\u5168\u5c40\u5f02\u5e38\u5904\u7406\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u5728\u4efb\u4f55\u5730\u65b9\u6dfb\u52a0 try catch \u5757\uff0c\u6211\u4eec\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u5355\u72ec\u7684\u7c7b\u6765\u5904\u7406\u5f02\u5e38\uff0c\u5b83\u8fd8\u53ef\u4ee5\u5206\u79bb\u6765\u81ea\u4e1a\u52a1\u903b\u8f91\u4ee3\u7801\u5f02\u5e38\u5904\u7406\u7684\u4ee3\u7801\u3002","title":"\u5168\u5c40\u5f02\u5e38"},{"location":"project/advance/exception/#controlleradvice","text":"\u4ece spirng 3.2 \u540e\uff0c\u652f\u6301 \u5e26\u6709 @ControllerAdvice \u6ce8\u91ca\u7684 @@ExceptionHandler \u5f02\u5e38\u5904\u7406\u65b9\u5f0f\u3002 \u8fd9\u4f7f\u5f97\u5b83\u8131\u79bb\u65e7\u7684 MVC \u6a21\u578b\uff08\u53ea\u80fd\u9488\u5bf9\u5355\u4e00 controller\uff09\uff0c\u5e76\u5229\u7528 ResponseEntity \u548c @ExceptionHandler \u4fdd\u8bc1\u4e86\u6570\u636e\u7c7b\u578b\u5b89\u5168\u6027\u548c\u7075\u6d3b\u6027: @ControllerAdvice public class RestResponseEntityExceptionHandler extends ResponseEntityExceptionHandler { @ExceptionHandler ( value = { IllegalArgumentException . class , IllegalStateException . class }) protected ResponseEntity < Object > handleConflict ( RuntimeException ex , WebRequest request ) { String bodyOfResponse = \"This should be application specific\" ; return handleExceptionInternal ( ex , bodyOfResponse , new HttpHeaders (), HttpStatus . CONFLICT , request ); } } @controlleradvice \u6ce8\u91ca\u5141\u8bb8\u6211\u4eec\u5c06\u4ee5\u524d\u5206\u6563\u7684\u591a\u4e2a @ExceptionHandler \u5408\u5e76\u5230\u4e00\u4e2a\u5355\u4e00\u7684\u5168\u5c40\u9519\u8bef\u5904\u7406\u7ec4\u4ef6\u4e2d\u3002 \u5b9e\u9645\u7684\u673a\u5236\u975e\u5e38\u7b80\u5355\uff0c\u4f46\u4e5f\u975e\u5e38\u7075\u6d3b: \u5b83\u4f7f\u6211\u4eec\u80fd\u591f\u5b8c\u5168\u63a7\u5236\u54cd\u5e94body\u4ee5\u53ca\u72b6\u6001\u4ee3\u7801 \u5b83\u63d0\u4f9b\u4e86\u51e0\u4e2a\u5f02\u5e38\u5230\u540c\u4e00\u4e2a\u65b9\u6cd5\u7684\u6620\u5c04\uff0c\u8fd9\u4e9b\u5f02\u5e38\u4e00\u8d77\u5904\u7406 Note @ExceptionHandler \u58f0\u660e\u7684\u5f02\u5e38\u4e0e\u4f5c\u4e3a\u65b9\u6cd5\u53c2\u6570\u4f7f\u7528\u7684\u5f02\u5e38,\u5982\u679c\u4ed6\u4eec\u4e0d\u5339\u914d\uff0c\u7f16\u8bd1\u5668\u662f\u4e0d\u4f1a\u62a5\u9519\u7684\uff0cspring \u4e5f\u4e0d\u4f1a\u62a5\u9519\u3002\u4f46\u662f\u5f53\u5f02\u5e38\u5728\u8fd0\u884c\u65f6\u88ab\u629b\u51fa\u65f6\uff0c\u5f02\u5e38\u89e3\u6790\u673a\u5236\u5c06\u4f1a\u5931\u8d25 `java.lang.IllegalStateException: No suitable resolver for argument [0] [type=...] HandlerMethod details: ..`","title":"@ControllerAdvice"},{"location":"project/advance/exception/#responsestatusexception","text":"\u81ea spring 5 \u540e\u53c8\u5f15\u5165\u4e86 ResponseStatusException \u7c7b @GetMapping ( value = \"/{id}\" ) public Foo findById ( @PathVariable ( \"id\" ) Long id , HttpServletResponse response ) { try { Foo resourceById = RestPreconditions . checkFound ( service . findOne ( id )); eventPublisher . publishEvent ( new SingleResourceRetrievedEvent ( this , response )); return resourceById ; } catch ( MyResourceNotFoundException exc ) { throw new ResponseStatusException ( HttpStatus . NOT_FOUND , \"Foo Not Found\" , exc ); } } \u4f7f\u7528\u5b83\u7684\u597d\u5904\u6709\u4ee5\u4e0b\u51e0\u65b9\u9762: \u975e\u5e38\u9002\u5408\u539f\u578b\u5f00\u53d1: \u6211\u4eec\u53ef\u4ee5\u5f88\u5feb\u5730\u5b9e\u73b0\u4e00\u4e2a\u57fa\u672c\u7684\u89e3\u51b3\u65b9\u6848; \u4e00\u4e2a\u7c7b\uff0c\u591a\u4e2a\u72b6\u6001\u7801\uff1a \u4e00\u79cd\u5f02\u5e38\u7c7b\uff0c\u53ef\u4ee5\u9002\u914d\u591a\u79cd\u4e0d\u540c\u7684\u8fd4\u56de\u65b9\u6848\u3002 \u4e0e @ExceptionHandler \u76f8\u6bd4\uff0c\u8fd9\u51cf\u5c11\u4e86\u7d27\u5bc6\u8026\u5408 \u4e0d\u5fc5\u521b\u5efa\u5982\u6b64\u591a\u7684\u81ea\u5b9a\u4e49\u5f02\u5e38\u7c7b\uff1b \u5bf9\u5f02\u5e38\u5904\u7406\u6709\u66f4\u591a\u7684\u63a7\u5236\uff0c\u56e0\u4e3a\u53ef\u4ee5\u901a\u8fc7\u7f16\u7a0b\u65b9\u5f0f\u521b\u5efa\u5f02\u5e38 Question \u90a3\u4e48\u548c \u5168\u5c40\u5f02\u5e38\u6bd4\u8d77\u6765\uff0c\u5982\u4f55\u6743\u8861\uff1f \u5982\u679c\u6ca1\u6709\u5168\u5c40\u5f02\u5e38\u5904\u7406\u3002 \u4ee3\u7801\u590d\u5236\u3002\u5982\u679c\u4f60\u4ece\u5176\u4ed6\u5730\u65b9controller\u590d\u5236\u7684\u4ee3\u7801\uff0c\u90a3\u4e48\u5728\u6ca1\u5f04\u660e\u767d\u4e4b\u524d\u4e0d\u8981\u4fee\u6539\u5b83\u3002 Note \u5728\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\u4e2d\u7ed3\u5408\u4e0d\u540c\u7684\u65b9\u6cd5\u5b9e\u73b0\u9700\u6c42\u662f\u53ef\u80fd\u7684\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u5168\u5c40\u4f7f\u7528 @ControllerAdvice \uff0c\u4f46\u4e5f\u53ef\u4ee5\u5728\u672c\u5730\u5b9e\u73b0 responsestatusexception \u3002 Caution \u5982\u679c\u540c\u4e00\u4e2a\u5f02\u5e38\uff0c\u6709\u591a\u4e2a\u5904\u7406\u65b9\u5f0f\u6216\u8005\u8fd4\u56de\uff0c\u5f80\u5f80\u4f1a\u5f15\u53d1\u4e00\u4e9b\u4ee4\u4eba\u8d39\u89e3\u7684\u95ee\u9898\uff0c\u8fd9\u9700\u8981\u7279\u522b\u6ce8\u610f\u3002","title":"ResponseStatusException"},{"location":"project/advance/exception/#_2","text":"package cn.tendata.bizr.rest.controller ; import cn.tendata.bizr.core.BasicErrorCodeException ; import cn.tendata.bizr.core.DefaultMessageSource ; import cn.tendata.bizr.rest.jackson.WebDataView ; import com.fasterxml.jackson.annotation.JsonInclude ; import com.fasterxml.jackson.annotation.JsonInclude.Include ; import com.fasterxml.jackson.annotation.JsonView ; import org.slf4j.Logger ; import org.slf4j.LoggerFactory ; import org.slf4j.Marker ; import org.slf4j.MarkerFactory ; import org.springframework.context.MessageSource ; import org.springframework.context.MessageSourceAware ; import org.springframework.context.support.MessageSourceAccessor ; import org.springframework.dao.EmptyResultDataAccessException ; import org.springframework.http.HttpHeaders ; import org.springframework.http.HttpStatus ; import org.springframework.http.ResponseEntity ; import org.springframework.security.access.AccessDeniedException ; import org.springframework.validation.BindException ; import org.springframework.validation.BindingResult ; import org.springframework.validation.FieldError ; import org.springframework.validation.ObjectError ; import org.springframework.web.bind.MethodArgumentNotValidException ; import org.springframework.web.bind.annotation.ControllerAdvice ; import org.springframework.web.bind.annotation.ExceptionHandler ; import org.springframework.web.bind.annotation.ResponseStatus ; import org.springframework.web.context.request.WebRequest ; import org.springframework.web.servlet.mvc.method.annotation.ResponseEntityExceptionHandler ; import javax.persistence.EntityNotFoundException ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; import java.util.ArrayList ; import java.util.LinkedHashMap ; import java.util.List ; import java.util.Map ; @ControllerAdvice public class GlobalControllerExceptionHandler extends ResponseEntityExceptionHandler implements MessageSourceAware { private static final Logger LOGGER = LoggerFactory . getLogger ( GlobalControllerExceptionHandler . class ); private MessageSourceAccessor messages = DefaultMessageSource . getAccessor (); @Override protected ResponseEntity < Object > handleBindException ( BindException ex , HttpHeaders headers , HttpStatus status , WebRequest request ) { return handleValidationException ( ex . getBindingResult (), status ); } @Override protected ResponseEntity < Object > handleMethodArgumentNotValid ( MethodArgumentNotValidException ex , HttpHeaders headers , HttpStatus status , WebRequest request ) { return handleValidationException ( ex . getBindingResult (), status ); } private ResponseEntity < Object > handleValidationException ( BindingResult result , HttpStatus status ) { Map < String , Object > errorAttributes = new LinkedHashMap <> (); errorAttributes . put ( \"status\" , status . value ()); errorAttributes . put ( \"error\" , status . getReasonPhrase ()); if ( result != null ) { if ( result . hasGlobalErrors ()) { List < Error > globalErrors = new ArrayList <> ( 6 ); for ( ObjectError err : result . getGlobalErrors ()) { Error error = new Error (); error . message = messages . getMessage ( err . getCode (), err . getDefaultMessage ()); globalErrors . add ( error ); } errorAttributes . put ( \"errors\" , globalErrors ); } if ( result . hasFieldErrors ()) { List < Error > fieldErrors = new ArrayList <> ( 6 ); for ( FieldError err : result . getFieldErrors ()) { Error error = new Error (); error . field = err . getField (); error . rejected = err . getRejectedValue (); error . message = messages . getMessage ( err . getCode (), err . getDefaultMessage ()); fieldErrors . add ( error ); errorAttributes . put ( \"fieldErrors\" , fieldErrors ); } } errorAttributes . put ( \"message\" , messages . getMessage ( \"error.VALIDATION_ERROR\" , \"Validation failed for object='\" + result . getObjectName () + \"'. Error count: \" + result . getErrorCount ())); } return new ResponseEntity <> ( errorAttributes , status ); } @JsonInclude ( Include . NON_EMPTY ) static class Error { public String field ; public Object rejected ; public String message ; } @JsonView ( WebDataView . Basic . class ) @ExceptionHandler ( BasicErrorCodeException . class ) public ResponseEntity <?> handleErrorCodeException ( BasicErrorCodeException ex , HttpServletRequest request , HttpServletResponse response ) { Map < String , Object > errorAttributes = new LinkedHashMap <> (); HttpStatus status = HttpStatus . BAD_REQUEST ; errorAttributes . put ( \"status\" , status . value ()); errorAttributes . put ( \"error\" , status . getReasonPhrase ()); errorAttributes . put ( \"message\" , messages . getMessage ( \"error.\" + ex . getErrorCode (), ex . getMessage ())); errorAttributes . put ( \"body\" , ex . getBody ()); return new ResponseEntity <> ( errorAttributes , status ); } @ExceptionHandler ({ EmptyResultDataAccessException . class , EntityNotFoundException . class }) @ResponseStatus ( value = HttpStatus . NOT_FOUND ) public void handleNotFoundException () { } @ExceptionHandler ( Exception . class ) public void handleUncaughtException ( Exception ex , HttpServletRequest request , HttpServletResponse response ) throws Exception { if ( ex instanceof AccessDeniedException ) { throw ex ; } HttpStatus status = HttpStatus . INTERNAL_SERVER_ERROR ; logException ( ex , request , status ); String message = messages . getMessage ( \"error.INTERNAL_SERVER_ERROR\" , ex . getLocalizedMessage ()); response . sendError ( status . value (), message ); } private void logException ( Exception ex , HttpServletRequest request , HttpStatus status ) { if ( LOGGER . isErrorEnabled () && status . value () >= 500 || LOGGER . isInfoEnabled ()) { Marker marker = MarkerFactory . getMarker ( ex . getClass (). getName ()); String uri = request . getRequestURI (); if ( request . getQueryString () != null ) { uri += '?' + request . getQueryString (); } String msg = String . format ( \"%s %s ~> %s\" , request . getMethod (), uri , status ); if ( status . value () >= 500 ) { LOGGER . error ( marker , msg , ex ); } else if ( LOGGER . isDebugEnabled ()) { LOGGER . debug ( marker , msg , ex ); } else { LOGGER . info ( marker , msg ); } } } @Override public void setMessageSource ( MessageSource messageSource ) { this . messages = new MessageSourceAccessor ( messageSource ); } } \u4ee5\u4e0a\u89e3\u51b3\u65b9\u6848\u4e2d\uff0c\u901a\u8fc7\u7ee7\u627f ResponseEntityExceptionHandler \u7c7b\u5b9e\u73b0\u5bf9\u901a\u7528 spring mvc \u6807\u51c6\u5f02\u5e38\u96c6\u4e2d\u5316\u5904\u7406\uff0c\u8fd4\u56de\u6807\u51c6\u7684 ResponseEntity \u5bf9\u8c61\u3002 \u91cd\u5199\u4e86 ResponseEntityExceptionHandler \u7c7b\u5bf9 BindException , MethodArgumentNotValidException \u5b57\u6bb5\u9a8c\u8bc1\u7ed1\u5b9a\u5f02\u5e38\u5904\u7406\uff0c\u4f7f\u8fd4\u56de\u5f02\u5e38\u66f4\u52a0\u6e05\u6670\u548c\u673a\u6784\u5316\u3002 static class Error { public String field ; public Object rejected ; public String message ; } \u901a\u8fc7 @ExceptionHandler \u6ce8\u89e3\u6269\u5c55\u5bf9 BasicErrorCodeException \u81ea\u5b9a\u4e49\u5f02\u5e38\u7684\u5904\u7406\uff0c\u5e76\u652f\u6301\u5f02\u5e38\u56fd\u9645\u5316\u3002 \u901a\u8fc7 @ExceptionHandler \u548c @ResponseStatus(value = HttpStatus.NOT_FOUND) \u4e24\u4e2a\u6ce8\u91ca\u5bf9 EmptyResultDataAccessException , EntityNotFoundException \u8fdb\u884c\u5f02\u5e38\u5904\u7406\uff0c\u5f53\u51fa\u73b0\u4ee5\u4e0a\u5f02\u5e38\u65f6\uff0c\u8fd4\u56de 404 .","title":"\u76ee\u524d\u89e3\u51b3\u65b9\u6848"},{"location":"project/advance/exception/#effective","text":"\u5f53\u5145\u5206\u5229\u7528\u597d\u5f02\u5e38\u65f6\uff0c\u53ef\u4ee5\u63d0\u9ad8\u7a0b\u5e8f\u7684\u53ef\u8bfb\u6027\u3001\u53ef\u9760\u6027\u548c\u53ef\u7ef4\u62a4\u6027\u3002\u5982\u679c\u4f7f\u7528\u4e0d\u5f53\uff0c\u5219\u4f1a\u4ea7\u751f\u8d1f\u9762\u6548\u679c\u3002","title":"Effective"},{"location":"project/advance/exception/#_3","text":"\u867d\u7136\u8fd9\u4e00\u5efa\u8bae\u4f3c\u4e4e\u663e\u800c\u6613\u89c1\uff0c\u4f46\u5b83\u7ecf\u5e38\u88ab\u8fdd\u53cd\uff0c\u56e0\u6b64\u503c\u5f97\u5f3a\u8c03\u3002\u5f53 API \u7684\u8bbe\u8ba1\u4eba\u5458\u58f0\u660e\u4e00\u4e2a\u629b\u51fa\u5f02\u5e38\u7684\u65b9\u6cd5\u65f6\uff0c\u4ed6\u4eec\u8bd5\u56fe\u544a\u8bc9\u4f60\u4e00\u4e9b\u4e8b\u60c5\u3002\u4e0d\u8981\u5ffd\u7565\u5b83\uff01\u5982\u679c\u5728\u65b9\u6cd5\u8c03\u7528\u7684\u5468\u56f4\u52a0\u4e0a\u4e00\u6761 try \u8bed\u53e5\uff0c\u5176 catch \u5757\u4e3a\u7a7a\uff0c\u53ef\u4ee5\u5f88\u5bb9\u6613\u5ffd\u7565\u5f02\u5e38 \u7a7a catch \u5757\u8fdd\u80cc\u4e86\u5f02\u5e38\u7684\u76ee\u7684\uff0c \u5b83\u7684\u5b58\u5728\u662f\u4e3a\u4e86\u5f3a\u5236\u4f60\u5904\u7406\u5f02\u5e38\u60c5\u51b5\u3002\u5ffd\u7565\u5f02\u5e38\u7c7b\u4f3c\u4e8e\u5ffd\u7565\u706b\u707e\u8b66\u62a5\u4e00\u6837\uff0c\u5173\u6389\u5b83\u4e4b\u540e\uff0c\u5176\u4ed6\u4eba\u5c31\u6ca1\u6709\u673a\u4f1a\u770b\u5230\u662f\u5426\u771f\u7684\u53d1\u751f\u4e86\u706b\u707e\u3002**\u4f60\u53ef\u80fd\u4fa5\u5e78\u9003\u8131\uff0c\u4f46\u7ed3\u679c\u53ef\u80fd\u662f\u707e\u96be\u6027**\u7684\u3002\u6bcf\u5f53\u4f60\u770b\u5230\u4e00\u4e2a\u7a7a\u7684 catch \u5757\uff0c\u4f60\u7684\u8111\u6d77\u4e2d\u5e94\u8be5\u54cd\u8d77\u8b66\u62a5\u3002 \u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u5ffd\u7565\u5f02\u5e38\u662f\u5408\u9002\u7684\u3002\u4f8b\u5982\uff0c\u5728\u5173\u95ed FileInputStream \u65f6\uff0c\u5ffd\u7565\u5f02\u5e38\u53ef\u80fd\u662f\u5408\u9002\u7684\u3002\u4f60\u6ca1\u6709\u66f4\u6539\u6587\u4ef6\u7684\u72b6\u6001\uff0c\u56e0\u6b64\u4e0d\u9700\u8981\u6267\u884c\u4efb\u4f55\u6062\u590d\u64cd\u4f5c\uff0c\u5e76\u4e14\u5df2\u7ecf\u4ece\u6587\u4ef6\u4e2d\u8bfb\u53d6\u4e86\u6240\u9700\u7684\u4fe1\u606f\uff0c\u56e0\u6b64\u6ca1\u6709\u7406\u7531\u4e2d\u6b62\u6b63\u5728\u8fdb\u884c\u7684\u64cd\u4f5c\u3002 \u8bb0\u5f55\u5f02\u5e38\u53ef\u80fd\u662f\u660e\u667a\u7684\uff0c\u8fd9\u6837\u5982\u679c\u8fd9\u4e9b\u5f02\u5e38\u7ecf\u5e38\u53d1\u751f\uff0c\u4f60\u5e94\u8be5\u7814\u7a76\u8d77\u56e0 \u3002\u5982\u679c\u4f60\u9009\u62e9\u5ffd\u7565\u5f02\u5e38\uff0c catch \u5757\u5e94\u8be5\u5305\u542b\u4e00\u6761\u6ce8\u91ca\uff0c\u89e3\u91ca\u4e3a\u4ec0\u4e48\u8fd9\u6837\u505a\uff0c\u5e76\u4e14\u5e94\u8be5\u5c06\u53d8\u91cf\u547d\u540d\u4e3a ignore \uff1a Future < Integer > f = exec . submit ( planarMap :: chromaticNumber ); int numColors = 4 ; // Default; numColors = f . get ( 1L , TimeUnit . SECONDS ); } catch ( TimeoutException | ExecutionException ignored ) { // \u4f7f\u7528 default: minimal coloring is desirable, not required } Tip \u672c\u5efa\u8bae\u540c\u6837\u9002\u7528\u4e8e checked \u5f02\u5e38\u548c unchecked \u5f02\u5e38\u3002\u4e0d\u7ba1\u5f02\u5e38\u662f\u8868\u793a\u53ef\u9884\u6d4b\u7684\u5f02\u5e38\u6761\u4ef6\u8fd8\u662f\u7f16\u7a0b\u9519\u8bef\uff0c\u7528\u7a7a catch \u5757\u5ffd\u7565\u5b83\u5c06\u5bfc\u81f4\u7a0b\u5e8f\u5728\u9519\u8bef\u9762\u524d\u4fdd\u6301\u9759\u9ed8\u3002\u7136\u540e\uff0c\u7a0b\u5e8f\u53ef\u80fd\u4f1a\u5728\u672a\u6765\u7684\u4efb\u610f\u65f6\u95f4\u70b9\uff0c\u5728\u4e0e\u95ee\u9898\u6e90\u6ca1\u6709\u660e\u663e\u5173\u7cfb\u7684\u4ee3\u7801\u4e2d\u5931\u8d25\u3002\u6b63\u786e\u5904\u7406\u5f02\u5e38\u53ef\u4ee5\u5b8c\u5168\u907f\u514d\u5931\u8d25\u3002\u4ec5\u4ec5\u8ba9\u5f02\u5e38\u5411\u5916\u4f20\u64ad\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u7a0b\u5e8f\u8d70\u5411\u5931\u8d25\uff0c\u4fdd\u7559\u4fe1\u606f\u6709\u5229\u4e8e\u8c03\u8bd5\u3002","title":"\u4e0d\u8981\u5ffd\u7565\u5f02\u5e38"},{"location":"project/advance/exception/#_4","text":"try { int i = 0 ; while ( true ) range [ i ++] . climb (); } catch ( ArrayIndexOutOfBoundsException e ) { } \u8fd9\u662f\u4e00\u4e2a\u7528\u4e8e\u904d\u5386\u6570\u7ec4\u7684\u5143\u7d20\u7684\u975e\u5e38\u7cdf\u7cd5\u7684\u4e60\u60ef\u7528\u6cd5\u3002\u5f53\u8bd5\u56fe\u8bbf\u95ee\u6570\u7ec4\u8fb9\u754c\u4e4b\u5916\u7684\u6570\u7ec4\u5143\u7d20\u65f6\uff0c\u901a\u8fc7\u629b\u51fa\u3001\u6355\u83b7\u548c\u5ffd\u7565 ArrayIndexOutOfBoundsException \u6765\u7ec8\u6b62\u65e0\u9650\u5faa\u73af \u6807\u51c6\u505a\u6cd5\u662f: for ( Mountain m : range ) m . climb (); \u5229\u7528\u9519\u8bef\u5224\u65ad\u673a\u5236\u6765\u63d0\u9ad8\u6027\u80fd\u662f\u9519\u8bef\u7684\u3002\u8fd9\u79cd\u601d\u8def\u6709\u4e09\u70b9\u8bef\u533a\uff1a \u56e0\u4e3a\u5f02\u5e38\u662f\u4e3a\u5f02\u5e38\u60c5\u51b5\u8bbe\u8ba1\u7684\uff0c\u6240\u4ee5 JVM \u5b9e\u73b0\u51e0\u4e4e\u4e0d\u4f1a\u8ba9\u5b83\u4eec\u50cf\u663e\u5f0f\u6d4b\u8bd5\u4e00\u6837\u5feb\u3002 \u5c06\u4ee3\u7801\u653e\u5728 try-catch \u5757\u4e2d\u4f1a\u6291\u5236 JVM \u53ef\u80fd\u6267\u884c\u7684\u67d0\u4e9b\u4f18\u5316\uff1b \u904d\u5386\u6570\u7ec4\u7684\u6807\u51c6\u4e60\u60ef\u7528\u6cd5\u4e0d\u4e00\u5b9a\u4f1a\u5bfc\u81f4\u5197\u4f59\u68c0\u67e5\u3002\u8bb8\u591a JVM \u5b9e\u73b0\u5bf9\u5b83\u4eec\u8fdb\u884c\u4e86\u4f18\u5316\u3002 \u4e8b\u5b9e\u4e0a\uff0c\u57fa\u4e8e\u5f02\u5e38\u7684\u7528\u6cd5\u6bd4\u6807\u51c6\u7528\u6cd5\u6162\u5f97\u591a\u3002\u7528 100 \u4e2a\u5143\u7d20\u7684\u6570\u7ec4\u6d4b\u8bd5\uff0c\u57fa\u4e8e\u5f02\u5e38\u7684\u7528\u6cd5\u4e0e\u6807\u51c6\u7528\u6cd5\u76f8\u6bd4\u901f\u5ea6\u5927\u7ea6\u6162\u4e86\u4e24\u500d\u3002 \u5f02\u5e38\u53ea\u9002\u7528\u4e8e\u786e\u6709\u5f02\u5e38\u7684\u60c5\u51b5\uff1b\u5b83\u4eec\u4e0d\u5e94\u8be5\u7528\u4e8e\u4e00\u822c\u7684\u63a7\u5236\u6d41\u7a0b \u3002 \u66f4\u8fdb\u4e00\u6b65\u8bf4\uff0c\u4f7f\u7528\u6807\u51c6\u7684\u3001\u6613\u4e8e\u8bc6\u522b\u7684\u4e60\u60ef\u7528\u6cd5\uff0c\u800c\u4e0d\u662f\u58f0\u79f0\u80fd\u591f\u63d0\u4f9b\u66f4\u597d\u6027\u80fd\u7684\u8fc7\u4e8e\u6296\u673a\u7075\u7684\u6280\u672f\u3002\u5373\u4f7f\u6027\u80fd\u4f18\u52bf\u662f\u771f\u5b9e\u5b58\u5728\u7684\uff0c\u4f46\u5728\u7a33\u6b65\u6539\u8fdb\u5e73\u53f0\u5b9e\u73b0\u7684\u524d\u63d0\u4e0b\uff0c\u8fd9\u79cd\u4f18\u52bf\u4e5f\u5e76\u4e0d\u53ef\u9760\u3002\u800c\u4e14\uff0c\u6765\u81ea\u6296\u673a\u7075\u7684\u6280\u672f\u5b58\u5728\u7684\u7ec6\u5fae\u7f3a\u9677\u548c\u7ef4\u62a4\u95ee\u9898\u80af\u5b9a\u4f1a\u7ee7\u7eed\u5b58\u5728\u3002 \u8fd9\u4e2a\u539f\u5219\u5bf9 API \u8bbe\u8ba1\u4e5f\u6709\u5f71\u54cd\u3002\u4e00\u4e2a\u8bbe\u8ba1\u826f\u597d\u7684 API \u4e0d\u80fd\u8feb\u4f7f\u5176\u5ba2\u6237\u7aef\u4e3a\u4e00\u822c\u7684\u63a7\u5236\u6d41\u7a0b\u4f7f\u7528\u5f02\u5e38\u3002\u53ea\u6709\u5728\u67d0\u4e9b\u4e0d\u53ef\u9884\u77e5\u7684\u6761\u4ef6\u4e0b\u624d\u80fd\u8c03\u7528\u5177\u6709\u300c\u72b6\u6001\u4f9d\u8d56\u300d\u65b9\u6cd5\u7684\u7c7b\uff0c\u901a\u5e38\u5e94\u8be5\u6709\u4e00\u4e2a\u5355\u72ec\u7684\u300c\u72b6\u6001\u6d4b\u8bd5\u300d\u65b9\u6cd5\uff0c\u8868\u660e\u662f\u5426\u9002\u5408\u8c03\u7528\u300c\u72b6\u6001\u4f9d\u8d56\u300d\u65b9\u6cd5\u3002\u4f8b\u5982\uff0c Iterator \u63a5\u53e3\u5177\u6709\u300c\u72b6\u6001\u4f9d\u8d56\u300d\u7684 next \u65b9\u6cd5\u548c\u5bf9\u5e94\u7684\u300c\u72b6\u6001\u6d4b\u8bd5\u300d\u65b9\u6cd5 hasNext \u3002\u8fd9\u4f7f\u5f97\u4f20\u7edf for \u5faa\u73af\uff08\u5728 for-each \u5faa\u73af\u5185\u90e8\u4e5f\u4f7f\u7528\u4e86 hasNext \u65b9\u6cd5\uff09\u5728\u96c6\u5408\u4e0a\u8fdb\u884c\u8fed\u4ee3\u6210\u4e3a\u6807\u51c6\u4e60\u60ef\u7528\u6cd5\uff1a for ( Iterator < Foo > i = collection . iterator (); i . hasNext (); ) { Foo foo = i . next (); ... } \u5982\u679c Iterator \u7f3a\u5c11 hasNext \u65b9\u6cd5\uff0c\u5ba2\u6237\u7aef\u5c06\u88ab\u8feb\u8fd9\u6837\u505a\uff1a try { Iterator < Foo > i = collection . iterator (); while ( true ) { Foo foo = i . next (); ... } } catch ( NoSuchElementException e ) { } \u8fd9\u4e0e\u4e00\u5f00\u59cb\u4e3e\u4f8b\u7684\u5bf9\u6570\u7ec4\u8fdb\u884c\u8fed\u4ee3\u7684\u4f8b\u5b50\u975e\u5e38\u76f8\u4f3c\uff0c\u9664\u4e86\u5197\u957f\u548c\u8bef\u5bfc\u4e4b\u5916\uff0c\u57fa\u4e8e\u5f02\u5e38\u7684\u5faa\u73af\u6267\u884c\u6548\u679c\u53ef\u80fd\u5f88\u5dee\uff0c\u5e76\u4e14\u4f1a\u63a9\u76d6\u7cfb\u7edf\u4e2d\u4e0d\u76f8\u5173\u90e8\u5206\u7684 bug\u3002 \u63d0\u4f9b\u5355\u72ec\u7684\u300c\u72b6\u6001\u6d4b\u8bd5\u300d\u65b9\u6cd5\u7684\u53e6\u4e00\u79cd\u65b9\u5f0f\uff0c\u5c31\u662f\u8ba9\u300c\u72b6\u6001\u4f9d\u8d56\u300d\u65b9\u6cd5\u8fd4\u56de\u4e00\u4e2a\u7a7a\u7684 Optional \u5bf9\u8c61\uff0c\u6216\u8005\u5728\u5b83\u4e0d\u80fd\u6267\u884c\u6240\u9700\u7684\u8ba1\u7b97\u65f6\u8fd4\u56de\u4e00\u4e2a\u53ef\u8bc6\u522b\u7684\u503c\uff0c\u6bd4\u5982 null\u3002 \u6709\u4e00\u4e9b\u6307\u5bfc\u539f\u5219\uff0c\u5e2e\u52a9\u4f60\u5728 \u300c\u72b6\u6001\u6d4b\u8bd5\u300d\u65b9\u6cd5 \u3001 Optional \u3001 \u53ef\u8bc6\u522b\u7684\u8fd4\u56de\u503c \u4e4b\u95f4\u8fdb\u884c\u9009\u62e9\u3002 \u5982\u679c\u8981\u5728\u6ca1\u6709\u5916\u90e8\u540c\u6b65\u7684\u60c5\u51b5\u4e0b\u5e76\u53d1\u5730\u8bbf\u95ee\u5bf9\u8c61\uff0c\u6216\u8005\u53d7\u5236\u4e8e\u5916\u90e8\u6761\u4ef6\u7684\u72b6\u6001\u8f6c\u6362\uff0c\u5219\u5fc5\u987b\u4f7f\u7528 Optional \u6216\u53ef\u8bc6\u522b\u7684\u8fd4\u56de\u503c\uff0c\u56e0\u4e3a\u5bf9\u8c61\u7684\u72b6\u6001\u53ef\u80fd\u5728\u8c03\u7528\u300c\u72b6\u6001\u6d4b\u8bd5\u300d\u65b9\u6cd5\u4e0e\u300c\u72b6\u6001\u4f9d\u8d56\u300d\u65b9\u6cd5\u7684\u95f4\u9694\u4e2d\u53d1\u751f\u53d8\u5316\u3002 \u5982\u679c\u4e00\u4e2a\u5355\u72ec\u7684\u300c\u72b6\u6001\u6d4b\u8bd5\u300d\u65b9\u6cd5\u91cd\u590d\u300c\u72b6\u6001\u4f9d\u8d56\u300d\u65b9\u6cd5\u7684\u5de5\u4f5c\uff0c\u4ece\u6027\u80fd\u95ee\u9898\u8003\u8651\uff0c\u53ef\u80fd\u8981\u6c42\u4f7f\u7528 Optional \u6216\u53ef\u8bc6\u522b\u7684\u8fd4\u56de\u503c\u3002 \u5728\u6240\u6709\u5176\u4ed6\u6761\u4ef6\u76f8\u540c\u7684\u60c5\u51b5\u4e0b\uff0c\u300c\u72b6\u6001\u6d4b\u8bd5\u300d\u65b9\u6cd5\u7565\u4f18\u4e8e\u53ef\u8bc6\u522b\u7684\u8fd4\u56de\u503c\u3002\u5b83\u63d0\u4f9b\u4e86\u8f83\u597d\u7684\u53ef\u8bfb\u6027\uff0c\u800c\u4e14\u4e0d\u6b63\u786e\u7684\u4f7f\u7528\u53ef\u80fd\u66f4\u5bb9\u6613\u88ab\u68c0\u6d4b\uff1a\u5982\u679c\u4f60\u5fd8\u8bb0\u8c03\u7528\u300c\u72b6\u6001\u6d4b\u8bd5\u300d\u65b9\u6cd5\uff0c\u300c\u72b6\u6001\u4f9d\u8d56\u300d\u65b9\u6cd5\u5c06\u629b\u51fa\u5f02\u5e38\uff0c\u4f7f\u9519\u8bef\u663e\u800c\u6613\u89c1\uff1b \u5982\u679c\u4f60\u5fd8\u8bb0\u68c0\u67e5\u4e00\u4e2a\u53ef\u8bc6\u522b\u7684\u8fd4\u56de\u503c\uff0c\u90a3\u4e48\u8fd9\u4e2a bug \u53ef\u80fd\u5f88\u96be\u53d1\u73b0\u3002\u4f46\u662f\u8fd9\u5bf9\u4e8e\u8fd4\u56de Optional \u5bf9\u8c61\u7684\u65b9\u5f0f\u6765\u8bf4\u4e0d\u662f\u95ee\u9898\u3002","title":"\u4ec5\u5728\u786e\u6709\u5f02\u5e38\u4f7f\u7528"},{"location":"project/advance/exception/#checked-unchecked","text":"Java \u63d0\u4f9b\u4e86\u4e09\u79cd Throwable \uff1a checked exception , runtime exception , \u548c errors\u3002\u7a0b\u5e8f\u5458\u4eec\u5bf9\u4ec0\u4e48\u65f6\u5019\u4f7f\u7528\u8fd9\u4e9b\u53ef\u629b\u51fa\u9879\u6bd4\u8f83\u56f0\u60d1\u3002\u867d\u7136\u51b3\u7b56\u5e76\u4e0d\u603b\u662f\u660e\u786e\u7684\uff0c\u4f46\u662f\u6709\u4e00\u4e9b\u901a\u7528\u89c4\u5219\u53ef\u4ee5\u63d0\u4f9b\u6709\u529b\u7684\u6307\u5bfc\u3002","title":"checked \u548c unchecked"},{"location":"project/advance/exception/#checked","text":"\u4f7f\u7528 checked \u5f02\u5e38\u7684\u60c5\u51b5\u662f\u4e3a\u4e86\u5408\u7406\u5730\u671f\u671b\u8c03\u7528\u8005\u80fd\u591f\u4ece\u4e2d\u6062\u590d\u3002 \u901a\u8fc7\u629b\u51fa\u4e00\u4e2a checked \u7684\u5f02\u5e38\uff0c\u4f60\u53ef\u4ee5\u5f3a\u5236\u8c03\u7528\u8005\u5728 catch \u5b50\u53e5\u4e2d\u5904\u7406\u5f02\u5e38\uff0c\u6216\u8005\u5c06\u5176\u4f20\u64ad\u51fa\u53bb. \u56e0\u6b64\uff0c\u65b9\u6cd5\u4e2d\u58f0\u660e\u7684\u8981\u629b\u51fa\u7684\u6bcf\u4e2a checked \u5f02\u5e38\uff0c\u90fd\u6e05\u695a\u7684\u5411 API \u7528\u6237\u8868\u660e: \u8fd9\u662f\u53ef\u80fd\u51fa\u73b0\u7684\u8c03\u7528\u7ed3\u679c\u3002 Note \u901a\u8fc7\u5411\u7528\u6237\u63d0\u4f9b checked \u5f02\u5e38\uff0cAPI \u8bbe\u8ba1\u8005\u63d0\u4f9b\u4e86\u4ece\u5f02\u5e38\u6761\u4ef6\u4e2d\u6062\u590d\u7684\u63a5\u53e3\u3002\u7528\u6237\u65e0\u89c6\u5f02\u5e38\u5904\u7406\u8981\u6c42\uff0c\u53ef\u4ee5\u6355\u83b7\u5f02\u5e38\u5e76\u5ffd\u7565\uff0c\u4f46\u8fd9\u901a\u5e38\u4e0d\u662f\u4e00\u4e2a\u597d\u7684\u505a\u6cd5\uff0c\u53c2\u89c1 \u4e0d\u8981\u5ffd\u7565\u5f02\u5e38 \u7ae0\u8282\u3002 API \u8bbe\u8ba1\u4eba\u5458\u5e38\u5e38\u5fd8\u8bb0\u5f02\u5e38\u4e5f\u662f\u4e00\u4e2a\u6210\u719f\u5bf9\u8c61\uff0c\u53ef\u4ee5\u4e3a\u5176\u5b9a\u4e49\u4efb\u610f\u65b9\u6cd5\u3002 \u6b64\u7c7b\u65b9\u6cd5\u7684\u4e3b\u8981\u7528\u9014\u662f\u63d0\u4f9b\u6355\u83b7\u5f02\u5e38\u7684\u4ee3\u7801\uff0c\u5e76\u63d0\u4f9b\u6709\u5173\u5f15\u53d1\u5f02\u5e38\u7684\u9644\u52a0\u4fe1\u606f\u3002\u5982\u679c\u7f3a\u4e4f\u6b64\u7c7b\u65b9\u6cd5\uff0c\u7a0b\u5e8f\u5458\u9700\u8981\u81ea\u884c\u89e3\u6790\u5f02\u5e38\u7684\u5b57\u7b26\u4e32\u8868\u793a\u4ee5\u83b7\u53d6\u66f4\u591a\u4fe1\u606f\u3002\u8fd9\u662f\u6781\u574f\u7684\u505a\u6cd5\u3002\u8fd9\u79cd\u7c7b\u5f88\u5c11\u6307\u5b9a\u5176\u5b57\u7b26\u4e32\u8868\u793a\u7684\u7ec6\u8282\uff0c\u56e0\u6b64\u5b57\u7b26\u4e32\u8868\u793a\u53ef\u80fd\u56e0\u5b9e\u73b0\u800c\u5f02\uff0c\u4e5f\u53ef\u80fd\u56e0\u7248\u672c\u800c\u5f02\u3002\u56e0\u6b64\uff0c\u89e3\u6790\u5f02\u5e38\u7684\u5b57\u7b26\u4e32\u8868\u793a\u5f62\u5f0f\u7684\u4ee3\u7801\u53ef\u80fd\u662f\u4e0d\u53ef\u79fb\u690d\u4e14\u8106\u5f31\u7684 \u56e0\u4e3a checked \u5f02\u5e38\u901a\u5e38\u8868\u793a\u53ef\u6062\u590d\u7684\u6761\u4ef6\uff0c\u6240\u4ee5\u8fd9\u7c7b\u5f02\u5e38\u6765\u8bf4\uff0c\u8bbe\u8ba1\u80fd\u591f\u63d0\u4f9b\u4fe1\u606f\u7684\u65b9\u6cd5\u6765\u5e2e\u52a9\u8c03\u7528\u8005\u4ece\u5f02\u5e38\u6761\u4ef6\u4e2d\u6062\u590d\u5c24\u4e3a\u91cd\u8981\u3002\u4f8b\u5982\uff0c\u5047\u8bbe\u5f53\u4f7f\u7528\u793c\u54c1\u5361\u8d2d\u7269\u7531\u4e8e\u8d44\u91d1\u4e0d\u8db3\u800c\u5931\u8d25\u65f6\uff0c\u629b\u51fa\u4e00\u4e2a checked \u5f02\u5e38\u3002\u8be5\u5f02\u5e38\u5e94\u63d0\u4f9b\u4e00\u4e2a\u8bbf\u95ee\u5668\u65b9\u6cd5\u6765\u67e5\u8be2\u5dee\u989d\u3002\u8fd9\u5c06\u4f7f\u8c03\u7528\u8005\u80fd\u591f\u5c06\u91d1\u989d\u4f20\u9012\u7ed9\u8d2d\u7269\u8005.","title":"checked"},{"location":"project/advance/exception/#unchecked","text":"\u6709\u4e24\u79cd unchecked \u7684\u53ef\u629b\u51fa\u9879\uff1a\u8fd0\u884c\u65f6\u5f02\u5e38\u548c\u9519\u8bef\u3002\u5b83\u4eec\u5728\u884c\u4e3a\u4e0a\u662f\u4e00\u6837\u7684\uff1a \u90fd\u662f\u53ef\u629b\u51fa\u7684\uff0c\u901a\u5e38\u4e0d\u9700\u8981\u4e5f\u4e0d\u5e94\u8be5\u88ab\u6355\u83b7 \u3002 \u5982\u679c\u7a0b\u5e8f\u629b\u51fa unchecked \u5f02\u5e38\u6216\u9519\u8bef\uff0c\u901a\u5e38\u60c5\u51b5\u4e0b\u662f\u4e0d\u53ef\u80fd\u6062\u590d\u7684\uff0c\u5982\u679c\u7ee7\u7eed\u6267\u884c\uff0c\u5f0a\u5927\u4e8e\u5229\u3002\u5982\u679c\u7a0b\u5e8f\u6ca1\u6709\u6355\u83b7\u5230\u8fd9\u6837\u7684\u53ef\u629b\u51fa\u9879\uff0c\u5b83\u5c06\u5bfc\u81f4\u5f53\u524d\u7ebf\u7a0b\u505c\u6b62\uff0c\u5e76\u53d1\u51fa\u9002\u5f53\u7684\u9519\u8bef\u6d88\u606f\u3002 \u4f7f\u7528\u8fd0\u884c\u65f6\u5f02\u5e38\u6765\u6307\u793a\u7f16\u7a0b\u9519\u8bef \u3002 \u7edd\u5927\u591a\u6570\u8fd0\u884c\u65f6\u5f02\u5e38\u90fd\u8868\u793a\u64cd\u4f5c\u8fdd\u53cd\u4e86\u5148\u51b3\u6761\u4ef6\u3002\u8fdd\u53cd\u5148\u51b3\u6761\u4ef6\u662f\u6307\u4f7f\u7528 API \u7684\u5ba2\u6237\u7aef\u672a\u80fd\u9075\u5b88 API \u89c4\u8303\u6240\u5efa\u7acb\u7684\u7ea6\u5b9a\u3002\u4f8b\u5982\uff0c\u6570\u7ec4\u8bbf\u95ee\u7ea6\u5b9a\u6307\u5b9a\u6570\u7ec4\u7d22\u5f15\u5fc5\u987b\u5927\u4e8e\u7b49\u4e8e 0 \u5e76\u4e14\u5c0f\u4e8e\u7b49\u4e8e length-1 \uff08length\uff1a\u6570\u7ec4\u957f\u5ea6\uff09\u3002 ArrayIndexOutOfBoundsException \u8868\u793a\u8fdd\u53cd\u4e86\u6b64\u5148\u51b3\u6761\u4ef6\u3002 \u6709\u4e2a\u95ee\u9898\uff0c\u5e76\u4e0d\u603b\u80fd\u6e05\u695a\u662f\u5728\u5904\u7406\u53ef\u6062\u590d\u7684\u6761\u4ef6\u8fd8\u662f\u7f16\u7a0b\u9519\u8bef\uff0c\u4f8b\u5982\uff0c\u8003\u8651\u8d44\u6e90\u8017\u5c3d\u7684\u60c5\u51b5\uff0c\u8fd9\u53ef\u80fd\u662f\u7531\u7f16\u7a0b\u9519\u8bef\uff08\u5982\u5206\u914d\u4e00\u4e2a\u4e0d\u5408\u7406\u7684\u5927\u6570\u7ec4\uff09\u6216\u771f\u6b63\u7684\u8d44\u6e90\u77ed\u7f3a\u9020\u6210\u7684 \u5982\u679c\u8d44\u6e90\u67af\u7aed\u662f\u7531\u4e8e\u6682\u65f6\u77ed\u7f3a\u6216\u6682\u65f6\u9700\u6c42\u589e\u52a0\u9020\u6210\u7684\uff0c\u8fd9\u79cd\u60c5\u51b5\u5f88\u53ef\u80fd\u662f\u53ef\u4ee5\u6062\u590d\u7684\u3002\u5bf9\u4e8e API \u8bbe\u8ba1\u4eba\u5458\u6765\u8bf4\uff0c\u5224\u65ad\u7ed9\u5b9a\u7684\u8d44\u6e90\u8017\u5c3d\u5b9e\u4f8b\u662f\u5426\u5141\u8bb8\u6062\u590d\u662f\u4e00\u4e2a\u95ee\u9898\u3002 \u603b\u7ed3 \u5982\u679c\u4f60\u8ba4\u4e3a\u67d0\u4e2a\u6761\u4ef6\u53ef\u80fd\u5141\u8bb8\u6062\u590d\uff0c\u8bf7\u4f7f\u7528 checked \u5f02\u5e38\uff1b\u5982\u679c\u6ca1\u6709\uff0c\u5219\u4f7f\u7528\u8fd0\u884c\u65f6","title":"unchecked"},{"location":"project/advance/exception/#error","text":"\u867d\u7136 Java \u8bed\u8a00\u89c4\u8303\u6ca1\u6709\u8981\u6c42\uff0c\u4f46\u6709\u4e00\u4e2a\u7ea6\u5b9a\u4fd7\u6210\u7684\u7ea6\u5b9a\uff0c\u5373\u9519\u8bef\u4fdd\u7559\u7ed9 JVM \u4f7f\u7528\uff0c\u4ee5\u6307\u793a\uff1a\u8d44\u6e90\u4e0d\u8db3\u3001\u4e0d\u53ef\u6062\u590d\u6545\u969c\u6216\u5176\u4ed6\u5bfc\u81f4\u65e0\u6cd5\u7ee7\u7eed\u6267\u884c\u7684\u6761\u4ef6\u3002 Tip \u8003\u8651\u5230\u8fd9\u79cd\u7ea6\u5b9a\u88ab\u5927\u4f17\u8ba4\u53ef\uff0c\u6240\u4ee5\u6700\u597d\u4e0d\u8981\u5b9e\u73b0\u4efb\u4f55\u65b0\u7684 Error \u5b50\u7c7b\u3002\u56e0\u6b64\uff0c\u4f60\u5b9e\u73b0\u7684\u6240\u6709 unchecked \u53ef\u629b\u51fa\u9879\u90fd\u5e94\u8be5\u7ee7\u627f RuntimeException\uff08\u76f4\u63a5\u6216\u95f4\u63a5\uff09\u3002\u4e0d\u4ec5\u4e0d\u5e94\u8be5\u5b9a\u4e49 Error \u5b50\u7c7b\uff0c\u800c\u4e14\u9664\u4e86 AssertionError \u4e4b\u5916\uff0c\u4e0d\u5e94\u8be5\u629b\u51fa\u5b83\u4eec\u3002 Tip \u666e\u901a checked \u5f02\u5e38\u662f Exception \u7684\u5b50\u7c7b\uff0c\u4f46\u4e0d\u662f RuntimeException \u7684\u5b50\u7c7b \u603b\u7ed3 \u603b\u800c\u8a00\u4e4b\uff0c\u4e3a\u53ef\u6062\u590d\u6761\u4ef6\u629b\u51fa checked \u5f02\u5e38\uff0c\u4e3a\u7f16\u7a0b\u9519\u8bef\u629b\u51fa unchecked \u5f02\u5e38\u3002\u5f53\u6709\u7591\u95ee\u65f6\uff0c\u629b\u51fa unchecked \u5f02\u5e38\u3002\u4e0d\u8981\u5b9a\u4e49\u4efb\u4f55\u65e2\u4e0d\u662f checked \u5f02\u5e38\u4e5f\u4e0d\u662f\u8fd0\u884c\u65f6\u5f02\u5e38\u7684\u81ea\u5b9a\u4e49\u5f02\u5e38\u3002\u5e94\u8be5\u4e3a checked \u5f02\u5e38\u8bbe\u8ba1\u76f8\u5173\u7684\u65b9\u6cd5\uff0c\u5982\u63d0\u4f9b\u5f02\u5e38\u4fe1\u606f\uff0c\u4ee5\u5e2e\u52a9\u6062\u590d\u3002","title":"error"},{"location":"project/advance/exception/#_5","text":"\u4ee3\u7801\u590d\u7528\u662f\u4e00\u4ef6\u597d\u4e8b\uff0c\u5f02\u5e38\u4e5f\u4e0d\u4f8b\u5916\u3002Java \u5e93\u63d0\u4f9b\u4e86\u4e00\u7ec4\u5f02\u5e38\uff0c\u6db5\u76d6\u4e86\u5927\u591a\u6570 API \u7684\u5927\u591a\u6570\u5f02\u5e38\u629b\u51fa\u9700\u6c42\u3002 \u590d\u7528\u6807\u51c6\u5f02\u5e38\u6709\u51e0\u4e2a\u597d\u5904\uff1a \u5176\u4e2d\u6700\u4e3b\u8981\u7684\u662f\uff0c\u5b83\u4f7f\u4f60\u7684 API \u66f4\u5bb9\u6613\u5b66\u4e60\u548c\u4f7f\u7528\uff0c\u56e0\u4e3a\u5b83\u7b26\u5408\u7a0b\u5e8f\u5458\u5df2\u7ecf\u719f\u6089\u7684\u65e2\u5b9a\u7ea6\u5b9a\u3002 \u5176\u6b21\uff0c\u4f7f\u7528\u4f60\u7684 API \u7684\u7a0b\u5e8f\u66f4\u5bb9\u6613\u9605\u8bfb\uff0c\u56e0\u4e3a\u5b83\u4eec\u4e0d\u4f1a\u56e0\u4e3a\u4e0d\u719f\u6089\u7684\u5f02\u5e38\u800c\u6df7\u4e71\u3002\u6700\u540e\uff08\u4e5f\u662f\u6700\u4e0d\u91cd\u8981\u7684\uff09\uff0c\u66f4\u5c11\u7684\u5f02\u5e38\u7c7b\u610f\u5473\u7740\u66f4\u5c0f\u7684\u5185\u5b58\u5360\u7528\u548c\u66f4\u5c11\u7684\u52a0\u8f7d\u7c7b\u7684\u65f6\u95f4 \u5e38\u89c1\u53ef\u590d\u7528\u5f02\u5e38: \u6700\u5e38\u89c1\u7684\u590d\u7528\u5f02\u5e38\u7c7b\u578b\u662f IllegalArgumentException \u3002\u8fd9\u901a\u5e38\u662f\u8c03\u7528\u8005\u4f20\u5165\u4e0d\u5408\u9002\u7684\u53c2\u6570\u65f6\u629b\u51fa\u7684\u5f02\u5e38\u3002\u4f8b\u5982\uff0c\u5982\u679c\u8c03\u7528\u8005\u5728\u8868\u793a\u67d0\u4e2a\u64cd\u4f5c\u8981\u91cd\u590d\u591a\u5c11\u6b21\u7684\u53c2\u6570\u4e2d\u4f20\u9012\u4e86\u4e00\u4e2a\u8d1f\u6570\uff0c\u5219\u629b\u51fa\u8fd9\u4e2a\u5f02\u5e38\u3002 \u53e6\u4e00\u4e2a\u5e38\u88ab\u590d\u7528\u5f02\u5e38\u662f IllegalStateException \u3002\u5982\u679c\u63a5\u6536\u5bf9\u8c61\u7684\u72b6\u6001\u5bfc\u81f4\u8c03\u7528\u975e\u6cd5\uff0c\u5219\u901a\u5e38\u4f1a\u629b\u51fa\u6b64\u5f02\u5e38\u3002\u4f8b\u5982\uff0c\u5982\u679c\u8c03\u7528\u8005\u8bd5\u56fe\u5728\u5bf9\u8c61\u88ab\u6b63\u786e\u521d\u59cb\u5316\u4e4b\u524d\u4f7f\u7528\u5b83\uff0c\u90a3\u4e48\u8fd9\u5c06\u662f\u629b\u51fa\u7684\u5f02\u5e38\u3002 \u6700\u540e\u4e00\u4e2a\u9700\u8981\u6ce8\u610f\u7684\u6807\u51c6\u5f02\u5e38\u662f UnsupportedOperationException \u3002\u5982\u679c\u5bf9\u8c61\u4e0d\u652f\u6301\u5c1d\u8bd5\u7684\u64cd\u4f5c\uff0c\u5219\u629b\u51fa\u6b64\u5f02\u5e38\u3002\u5b83\u5f88\u5c11\u4f7f\u7528\uff0c\u56e0\u4e3a\u5927\u591a\u6570\u5bf9\u8c61\u90fd\u652f\u6301\u5b83\u4eec\u7684\u6240\u6709\u65b9\u6cd5\u3002\u6b64\u5f02\u5e38\u7528\u4e8e\u4e00\u4e2a\u7c7b\u6ca1\u6709\u5b9e\u73b0\u7531\u5176\u5b9e\u73b0\u7684\u63a5\u53e3\u5b9a\u4e49\u7684\u4e00\u4e2a\u6216\u591a\u4e2a\u53ef\u9009\u64cd\u4f5c\u3002\u4f8b\u5982\uff0c\u5bf9\u4e8e\u53ea\u652f\u6301\u8ffd\u52a0\u64cd\u4f5c\u7684 List \u5b9e\u73b0\uff0c\u8bd5\u56fe\u4ece\u4e2d\u5220\u9664\u5143\u7d20\u65f6\u5c31\u4f1a\u629b\u51fa\u8fd9\u4e2a\u5f02\u5e38\u3002 Caution \u4e0d\u8981\u76f4\u63a5\u590d\u7528 Exception\u3001RuntimeException\u3001Throwable \u6216 Error\u3002 \u5e94\u5f53\u5c06\u8fd9\u4e9b\u7c7b\u89c6\u4e3a\u62bd\u8c61\u7c7b\u3002\u4f60\u4e0d\u80fd\u5bf9\u8fd9\u4e9b\u5f02\u5e38\u8fdb\u884c\u53ef\u9760\u7684\u6d4b\u8bd5\uff0c\u56e0\u4e3a\u5b83\u4eec\u662f\u65b9\u6cd5\u53ef\u80fd\u629b\u51fa\u7684\u5f02\u5e38\u7684\u8d85\u7c7b\u3002 \u5982\u679c\u4e00\u4e2a\u5f02\u5e38\u7b26\u5408\u4f60\u7684\u9700\u8981\uff0c\u90a3\u4e48\u7ee7\u7eed\u4f7f\u7528\u5b83\uff0c\u4f46\u524d\u63d0\u662f\u4f60\u629b\u51fa\u5b83\u7684\u6761\u4ef6\u4e0e\u5f02\u5e38\u7684\u6587\u6863\u63cf\u8ff0\u4e00\u81f4\uff1a\u590d\u7528\u5fc5\u987b\u57fa\u4e8e\u6587\u6863\u5316\u7684\u8bed\u4e49\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u57fa\u4e8e\u540d\u79f0\u3002\u53e6\u5916\uff0c\u5982\u679c\u4f60\u60f3\u6dfb\u52a0\u66f4\u591a\u7684\u7ec6\u8282\uff0c\u53ef\u4ee5\u968f\u610f\u5b50\u7c7b\u5316\u6807\u51c6\u5f02\u5e38\uff0c\u4f46\u662f\u8bb0\u4f4f\uff0c\u5f02\u5e38\u662f\u53ef\u5e8f\u5217\u5316\u7684\u3002\u5982\u679c\u6ca1\u6709\u5145\u5206\u7684\u7406\u7531\uff0c\u4e0d\u8981\u7f16\u5199\u81ea\u5df1\u7684\u5f02\u5e38\u7c7b\u3002 Question \u8003\u8651\u4e00\u4e2a\u5bf9\u8c61\uff0c\u8868\u793a\u4e00\u526f\u724c\uff0c\u5047\u8bbe\u6709\u4e00\u4e2a\u65b9\u6cd5\u4ee3\u8868\u53d1\u724c\u64cd\u4f5c\uff0c\u8be5\u65b9\u6cd5\u5c06\u624b\u724c\u591a\u5c11\u4f5c\u4e3a\u53c2\u6570\u3002\u5982\u679c\u8c03\u7528\u8005\u4f20\u9012\u7684\u503c\u5927\u4e8e\u724c\u5806\u4e2d\u5269\u4f59\u7684\u724c\u7684\u6570\u91cf\uff0c\u5219\u53ef\u4ee5\u5c06\u5176\u89e3\u91ca\u4e3a IllegalArgumentException \uff08handSize \u53c2\u6570\u503c\u592a\u5927\uff09\u6216 IllegalStateException \uff08\u724c\u5806\u4e2d\u5305\u542b\u7684\u724c\u592a\u5c11\uff09\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u89c4\u5219\u662f\uff1a\u5982\u679c\u6ca1\u6709\u53c2\u6570\u503c\uff0c\u629b\u51fa IllegalStateException \uff0c\u5426\u5219\u629b\u51fa IllegalArgumentException \u3002","title":"\u590d\u7528\u6807\u51c6\u5f02\u5e38"},{"location":"project/advance/log/","text":"\u539f\u5219 \u00b6 \u65e5\u5fd7\u662f\u4e00\u4e2a\u8bb0\u5f55\u7cfb\u7edf\u548c\u7528\u6237\u4e4b\u95f4\u901a\u4fe1\u7684\u6587\u4ef6\uff0c\u6216\u8005\u662f\u4e00\u4e2a\u6570\u636e\u6536\u96c6\u5de5\u5177\uff0c\u5b83\u8bb0\u5f55\u7528\u6237\u4ece\u7cfb\u7edf\u7ec8\u7aef\u8fdb\u884c\u7684\u4e8b\u52a1\u7684\u7c7b\u578b\u3001\u5185\u5bb9\u548c\u65f6\u95f4\u3002 \u65e5\u5fd7\u7cfb\u7edf\u5305\u542b\u5728\u8bb8\u591a\u64cd\u4f5c\u7cfb\u7edf\u3001\u8f6f\u4ef6\u6846\u67b6\u548c\u7a0b\u5e8f\u4e2d\u3002Syslog \u7531 Internet Engineering Task Force (IETF)\u521b\u5efa\uff0c\u662f\u4e00\u4e2a\u5e7f\u6cdb\u4f7f\u7528\u7684\u65e5\u5fd7\u8bb0\u5f55\u6807\u51c6\u3002Syslog \u6807\u51c6\u5141\u8bb8\u901a\u8fc7\u4e13\u95e8\u7684\u6807\u51c6\u5316\u5b50\u7cfb\u7edf\u751f\u6210\u3001\u7b5b\u9009\u3001\u8bb0\u5f55\u548c\u5206\u6790\u65e5\u5fd7\u6d88\u606f\u3002\u8fd9\u5c31\u6d88\u9664\u4e86\u8f6f\u4ef6\u5f00\u53d1\u4eba\u5458\u521b\u5efa\u548c\u6784\u5efa\u4ed6\u4eec\u81ea\u5df1\u7684\u7279\u522b\u65e5\u5fd7\u7cfb\u7edf\u7684\u9700\u8981\u3002 what \u00b6 \u9996\u5148\u8981\u77e5\u9053 \u65e5\u5fd7\u53ef\u4ee5\u8bb0\u5f55\u4ec0\u4e48: \u8f93\u5165\u3001\u8f93\u51fa\u6d88\u606f \u4f20\u5165\u548c\u4f20\u51fa\u7684\u6d88\u606f\u90fd\u5fc5\u987b\u7528 API \u7aef\u70b9 url\u3001\u8bf7\u6c42\u53c2\u6570\u3001\u8bf7\u6c42\u6765\u6e90\u548c\u4e2d\u95f4 ip\u3001\u8bf7\u6c42\u5934\u3001\u4f5c\u8005\u4fe1\u606f\u3001\u8bf7\u6c42\u548c\u54cd\u5e94\u4e3b\u4f53\u3001\u4e1a\u52a1\u4e0a\u4e0b\u6587\u3001\u65f6\u95f4\u6233\u4ee5\u53ca\u7ec4\u4ef6\u901a\u8fc7\u6d88\u606f\u4f20\u9012\u8fdb\u884c\u901a\u4fe1\u65f6\u7684\u5185\u90e8\u5904\u7406\u6b65\u9aa4\u8fdb\u884c\u8bb0\u5f55\u3002 \u670d\u52a1\u548c\u529f\u80fd\u8c03\u7528 \u5728\u8c03\u7528\u670d\u52a1\u6216\u51fd\u6570\u65f6\uff0c\u6700\u597d\u4ee5\u8f83\u4f4e\u7684\u65e5\u5fd7\u7ea7\u522b\u62a5\u544a\u8c03\u7528\u7684\u4e0a\u4e0b\u6587\uff0c\u4e3b\u8981\u7528\u4e8e\u8c03\u8bd5\u3002\u5c06\u8fd9\u4e9b\u65e5\u5fd7\u653e\u5728\u624b\u8fb9\u53ef\u4ee5\u66f4\u5bb9\u6613\u5730\u63a2\u7d22\u4e1a\u52a1\u903b\u8f91\u7684\u95ee\u9898\uff0c\u7279\u522b\u662f\u5f53\u6211\u4eec\u6ca1\u6709\u80fd\u529b\u5c06\u8c03\u8bd5\u5668\u8fde\u63a5\u5230\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u65f6\u3002 \u7528\u6237\u4ea4\u4e92\u548c\u4e1a\u52a1\u7edf\u8ba1 \u6bcf\u4e2a\u5e94\u7528\u7a0b\u5e8f\u90fd\u6709\u81ea\u5df1\u7684\u4e00\u7ec4\u4e1a\u52a1\u7528\u4f8b\u548c\u7528\u6237\u6d41\u7a0b\uff0c\u8fd9\u4e3a\u7cfb\u7edf\u7684\u9886\u57df\u4e13\u5bb6\u63d0\u4f9b\u4e86\u4e30\u5bcc\u7684\u4fe1\u606f\u3002\u5176\u4ed6\u4e0e\u4e1a\u52a1\u76f8\u5173\u7684\u6570\u636e\uff0c\u5982\u4ea4\u6613\u91cf\u548c\u6d3b\u8dc3\u7528\u6237\u53ca\u5176\u9636\u6bb5\uff0c\u5728\u83b7\u5f97\u4e1a\u52a1\u6d1e\u5bdf\u529b\u65b9\u9762\u975e\u5e38\u6709\u7528\uff0c\u751a\u81f3\u53ef\u4ee5\u7528\u4e8e\u4e1a\u52a1\u667a\u80fd\u3002 \u6570\u636e\u64cd\u4f5c \u5728\u5927\u591a\u6570\u4f01\u4e1a\u5e94\u7528\u7a0b\u5e8f\u4e2d\uff0c\u4e3a\u4e0e\u6570\u636e\u76f8\u5173\u7684\u64cd\u4f5c\u4fdd\u7559\u4e00\u4e2a\u5355\u72ec\u7684\u65e5\u5fd7\uff0c\u5176\u4e2d\u5305\u542b\u6240\u6709\u91cd\u8981\u4fe1\u606f\uff0c\u5982\u8bbf\u95ee id\u3001\u4f7f\u7528\u7684\u786e\u5207\u670d\u52a1\u5b9e\u4f8b\u548c\u89d2\u8272\u7279\u6743\u3001\u65f6\u95f4\u6233\u3001\u6570\u636e\u5c42\u67e5\u8be2\uff0c\u4ee5\u53ca\u5df2\u66f4\u6539\u6570\u636e\u96c6\u4ee5\u524d\u548c\u65b0\u72b6\u6001\u7684\u5feb\u7167\uff0c\u8fd9\u662f\u51fa\u4e8e\u5b89\u5168\u548c\u9075\u4ece\u6027\u7684\u539f\u56e0\u3002\u7528\u6237\u4ee5\u53ca\u5176\u4ed6\u7cfb\u7edf\u548c\u670d\u52a1\u6240\u505a\u7684\u6240\u6709\u4e0e\u6570\u636e\u76f8\u5173\u7684\u5c1d\u8bd5\u548c CRUD \u64cd\u4f5c\u90fd\u5fc5\u987b\u8bb0\u5f55\u5728\u5ba1\u8ba1\u8ddf\u8e2a\u4e2d\u3002 \u7cfb\u7edf\u4e8b\u4ef6 \u884c\u4e3a\u4e8b\u4ef6\u3001\u8f6c\u6362\u6a21\u5f0f\u3001\u670d\u52a1\u95f4\u901a\u4fe1\u3001\u670d\u52a1\u5b9e\u4f8b id\u3001\u4e3b\u52a8\u670d\u52a1 api\u3001\u4e3b\u52a8\u76d1\u542c IP \u548c\u7aef\u53e3\u8303\u56f4\u3001\u52a0\u8f7d\u7684\u914d\u7f6e\u3001\u603b\u4f53\u670d\u52a1\u5065\u5eb7\u72b6\u51b5\u4ee5\u53ca\u5176\u4ed6\u6709\u52a9\u4e8e\u7406\u89e3\u7cfb\u7edf\u884c\u4e3a\u7684\u6240\u6709\u4e1c\u897f\u90fd\u5fc5\u987b\u5728\u7cfb\u7edf\u4e8b\u4ef6\u4e2d\u6355\u83b7\u3002 when \u00b6 \u7cfb\u7edf\u4e2d\u6bcf\u4e2a\u4e8b\u4ef6\u7684\u4e25\u91cd\u6027\u7531\u65e5\u5fd7\u7ea7\u522b\u6307\u5b9a\u3002\u5927\u591a\u6570\u65e5\u5fd7\u6846\u67b6\u90fd\u53ef\u4ee5\u8bbf\u95ee\u4ee5\u4e0b\u7ea7\u522b\u3002 FATAL - \u6807\u8bc6\u53ef\u80fd\u5bfc\u81f4\u5e94\u7528\u7a0b\u5e8f\u4e2d\u6b62\u7684\u6781\u5176\u4e25\u91cd\u7684\u9519\u8bef\u4e8b\u4ef6\u3002\u901a\u5e38\uff0c\u8fd9\u4f1a\u5bfc\u81f4\u707e\u96be\u6027\u7684\u6545\u969c ERROR - \u6807\u8bc6\u4ecd\u7136\u53ef\u4ee5\u8ba9\u8f6f\u4ef6\u8fd0\u884c\u4f46\u5728\u6240\u5f71\u54cd\u7684\u8def\u7531\u4e2d\u5177\u6709\u53d7\u9650\u529f\u80fd\u7684\u9519\u8bef\u4e8b\u4ef6 WARN - \u63cf\u8ff0\u7834\u574f\u6027\u5c0f\u4e8e\u9519\u8bef\u7684\u4e8b\u4ef6\u3002\u5b83\u4eec\u901a\u5e38\u4e0d\u4f1a\u5bfc\u81f4\u5e94\u7528\u7a0b\u5e8f\u529f\u80fd\u7684\u4efb\u4f55\u51cf\u5c11\u6216\u5176\u5b8c\u5168\u5931\u8d25\u3002\u7136\u800c\uff0c\u8fd9\u4e9b\u90fd\u662f\u5fc5\u987b\u8c03\u67e5\u7684\u7ea2\u8272\u6807\u5fd7 INFO - \u5728\u7533\u8bf7\u884c\u4e3a\u65b9\u9762\uff0c\u8868\u793a\u4e3b\u8981\u4e8b\u4ef6\u7684\u6a2a\u989d\u53ca\u8d44\u8baf\u8baf\u606f DEBUG - \u8868\u793a\u4e3b\u8981\u7528\u4e8e\u8c03\u8bd5\u7684\u7279\u6b8a\u548c\u8be6\u7ec6\u7684\u6570\u636e\u3002\u8fd9\u4e9b\u65e5\u5fd7\u5e2e\u52a9\u6211\u4eec\u8c03\u8bd5\u4ee3\u7801 TRACE - \u4e3a\u4e86\u63d0\u4f9b\u5173\u4e8e\u7279\u5b9a\u4e8b\u4ef6/\u4e0a\u4e0b\u6587\u7684\u6700\u5927\u4fe1\u606f\uff0c\u5b83\u8868\u793a\u6700\u5e95\u5c42\u7684\u4fe1\u606f\uff0c\u4f8b\u5982\u4ee3\u7801\u7684\u5806\u6808\u8ddf\u8e2a\u3002\u8fd9\u4e9b\u65e5\u5fd7\u5141\u8bb8\u6211\u4eec\u68c0\u67e5\u53d8\u91cf\u503c\u4ee5\u53ca\u5b8c\u6574\u7684\u9519\u8bef\u5806\u6808 \u65e0\u8bba\u6bcf\u4e2a\u65e5\u5fd7\u7ea7\u522b\u5b9e\u73b0\u7684\u590d\u6742\u6027\u548c\u6df1\u5ea6\u5982\u4f55\uff0c\u6211\u4eec\u90fd\u5fc5\u987b\u5728\u4ee3\u7801\u4e2d\u9002\u5f53\u5730\u8bbe\u7f6e\u5b83\u4eec\uff0c\u4ee5\u4fbf\u4e3a\u6bcf\u4e2a\u73af\u5883\u63d0\u4f9b\u6700\u4f73\u7a0b\u5ea6\u7684\u4fe1\u606f\u3002 How - \u4f7f\u7528\u82f1\u8bed\u548c\u53cb\u597d\u7684\u6d88\u606f \u00b6 \u4e00\u4e9b\u5de5\u5177\u548c\u7ec8\u7aef\u63a7\u5236\u53f0\u4e0d\u652f\u6301\u67d0\u4e9b Unicode \u5b57\u7b26\u4ee5\u6253\u5370\u548c\u4fdd\u5b58\u65e5\u5fd7\u6d88\u606f\u3002\u5728\u65e5\u5fd7\u7ea7\u522b\uff0c\u672c\u5730\u5316\u548c\u5176\u4ed6\u590d\u6742\u7279\u6027\u53ef\u80fd\u96be\u4ee5\u5b9e\u73b0\u3002\u56e0\u6b64\uff0c\u5728\u7f16\u5199\u65e5\u5fd7\u6d88\u606f\u65f6\uff0c\u4e00\u5b9a\u8981\u575a\u6301\u4f7f\u7528\u82f1\u8bed\uff0c\u5e76\u59cb\u7ec8\u4f7f\u7528\u516c\u8ba4\u7684\u5b57\u7b26\u96c6 \u5982\u679c\u6211\u4eec\u8bb0\u5f55\u7684\u592a\u5c11\uff0c\u6211\u4eec\u53ef\u80fd\u65e0\u6cd5\u6536\u96c6\u5230\u8db3\u591f\u7684\u4fe1\u606f\u6765\u5efa\u7acb\u6bcf\u4e2a\u5173\u952e\u4e8b\u4ef6\u7684\u4e0a\u4e0b\u6587\u3002\u5982\u679c\u65e5\u5fd7\u8bb0\u5f55\u8fc7\u591a\uff0c\u6211\u4eec\u5c06\u4f1a\u62c5\u5fc3\u6027\u80fd\u95ee\u9898\u3002 \u5168\u9762\u638c\u63e1\u7cfb\u7edf\u7684\u529f\u80fd\u6027\u548c\u975e\u529f\u80fd\u6027\u9700\u6c42\uff0c\u8ba1\u5212\u9002\u5f53\u7684\u65e5\u5fd7\u6d88\u606f\u8d28\u91cf\u548c\u6570\u91cf\uff0c\u4ee5\u4f18\u5316\u65e5\u5fd7\u6d88\u606f\u3002\u8ba9\u6bcf\u4e00\u6761\u65e5\u5fd7\u4fe1\u606f\u90fd\u6709\u7528\u5e76\u4e0e\u5f53\u65f6\u7684\u60c5\u51b5\u76f8\u5173\u2014\u2014\u5e76\u4e14\u59cb\u7ec8\u4fdd\u6301\u7b80\u77ed\u548c\u6070\u5230\u597d\u5904\u3002 How - \u7ed3\u6784\u5316 \u00b6 \u597d\u7684\u65e5\u5fd7\u8bb0\u5f55\u9700\u8981\u8de8\u6240\u6709\u65e5\u5fd7\u6587\u4ef6\u4fdd\u6301\u4e00\u81f4\u7684\u6807\u51c6\u65e5\u5fd7\u6587\u4ef6\u7ed3\u6784\u3002\u6bcf\u4e2a\u65e5\u5fd7\u884c\u5e94\u8be5\u53cd\u6620\u4e00\u4e2a\u4e8b\u4ef6\uff0c\u5305\u62ec\u65f6\u95f4\u6233\u3001\u4e3b\u673a\u540d\u3001\u670d\u52a1\u548c\u65e5\u5fd7\u5668\u540d\u79f0\u7b49\u3002\u7ebf\u7a0b\u6216\u8fdb\u7a0b id\u3001\u4e8b\u4ef6 id\u3001\u4f1a\u8bdd id \u548c\u7528\u6237 id \u90fd\u53ef\u4ee5\u7528\u4f5c\u9644\u52a0\u503c\u3002 \u5176\u4ed6\u91cd\u8981\u503c\u53ef\u4ee5\u8fde\u63a5\u5230\u4e8b\u4ef6\u7684\u73af\u5883\uff0c\u4f8b\u5982\u5b9e\u4f8b ID\u3001\u90e8\u7f72\u540d\u79f0\u3001\u5e94\u7528\u7a0b\u5e8f\u7248\u672c\u6216\u4efb\u4f55\u5176\u4ed6\u952e\u503c\u5bf9\u3002\u786e\u4fdd\u60a8\u7684\u65f6\u95f4\u6233\u683c\u5f0f\u5305\u542b\u65f6\u533a\u6570\u636e\u5e76\u4f7f\u7528\u9ad8\u7cbe\u5ea6\u65f6\u95f4\u6233\u3002 \u6700\u540e\uff0c\u5982\u679c\u4f60\u60f3\u8ba9\u81ea\u5df1\u770b\u8d77\u6765\u50cf\u4e2a\u4e13\u4e1a\u4eba\u58eb\uff0c\u7ed9\u6bcf\u4e2a\u65e5\u5fd7\u884c\u4e00\u4e2a\u552f\u4e00\u7684 ID\u3002\u4e00\u4e2a\u65e5\u5fd7\u884c \u901a\u5e38\u6709\u4e00\u4e2a\u8bbe\u7f6e\u7ec4\u4ef6\u548c\u4e00\u4e2a\u53ef\u53d8\u90e8\u4ef6\uff0c\u8fd9\u4f7f\u5f97\u8fc7\u6ee4\u67d0\u4e9b\u6a21\u5f0f\u53d8\u5f97\u56f0\u96be\u3002\u5728\u8fd9\u4e00\u70b9\u4e0a\uff0c\u72ec\u7279\u7684 ID \u5f88\u6709\u5e2e\u52a9\u3002\u4e3a\u65e5\u5fd7\u9519\u8bef\u6dfb\u52a0\u9519\u8bef ID\u3002\u5f53\u60a8\u9700\u8981\u5728\u77e5\u8bc6\u7ba1\u7406\u7cfb\u7edf\u4e2d\u641c\u7d22\u4efb\u4f55\u5185\u5bb9\u65f6\uff0c\u8fd9\u5c06\u6d3e\u4e0a\u7528\u573a\u3002 How - \u4f7f\u7528\u5ea6\u91cf\uff08Metrics\uff09 \u00b6 \u5ea6\u91cf\u662f\u65e5\u5fd7\u8bb0\u5f55\u4e2d\u7684\u4e00\u4e2a\u57fa\u672c\u6982\u5ff5\u3002\u5ea6\u91cf\u662f\u4e00\u4e2a\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u800c\u4ef7\u503c\u8fde\u57ce\u7684\u8d22\u4ea7\uff0c\u901a\u5e38\u6709\u56fa\u5b9a\u7684\u95f4\u9694\u3002 \u4ee5\u4e0b\u662f\u5e38\u7528\u6307\u6807\u7c7b\u578b\u7684\u5217\u8868: Meter - \u8ba1\u7b97\u4e8b\u4ef6\u53d1\u751f\u7684\u9891\u7387 (\u4f8b\u5982: \u8bbf\u95ee\u4f60\u7f51\u7ad9\u7684\u4eba\u6570) Timer - \u6d4b\u91cf\u5b8c\u6210\u4e00\u9879\u7a0b\u5e8f\u6240\u9700\u7684\u65f6\u95f4(\u4f8b\u5982: \u60a8\u7684 web \u670d\u52a1\u5668\u54cd\u5e94\u65f6\u95f4) Counter - \u6574\u6570\u503c\u9012\u589e\u548c\u9012\u51cf(\u4f8b\u5982: \u767b\u5f55\u7528\u6237\u6570\u76ee) Gauge - \u8981\u6d4b\u91cf\u7684\u4efb\u610f\u503c (\u4f8b\u5982: CPU) \u6bcf\u4e2a\u5ea6\u91cf\u8868\u793a\u67d0\u4e2a\u7cfb\u7edf\u5c5e\u6027\u7684\u6761\u4ef6\u3002\u5ea6\u91cf\u6700\u68d2\u7684\u5730\u65b9\u5728\u4e8e\uff0c\u60a8\u53ef\u4ee5\u62e5\u6709\u5f88\u591a\u5ea6\u91cf\uff0c\u5e76\u5c06\u5b83\u4eec\u5f7c\u6b64\u5173\u8054\u8d77\u6765\u3002 Note \u5efa\u8bae\u8ddf\u8e2a\u548c\u8bb0\u5f55\u5ea6\u91cf\uff0c\u6216\u8005\u5c06\u5ea6\u91cf\u4e0e\u60a8\u7684\u65e5\u5fd7\u5206\u5f00\u3002 How - \u65e5\u5fd7\u552f\u4e00 \u00b6 \u5927\u591a\u6570\u521d\u5b66\u8005\u90fd\u4f1a\u72af\u8fd9\u6837\u4e00\u4e2a\u9519\u8bef\uff0c\u5373\u5c06\u76f8\u540c\u7684\u65e5\u5fd7\u6d88\u606f\u590d\u5236\u7c98\u8d34\u5230\u8bb8\u591a\u6587\u4ef6\u4e2d\uff0c\u5bfc\u81f4\u6700\u7ec8\u7684\u65e5\u5fd7\u805a\u5408\u88ab\u7cfb\u7edf\u5404\u4e2a\u90e8\u5206\u7684\u76f8\u4f3c\u65e5\u5fd7\u884c\u586b\u5145\u3002\u5f53\u4ed6\u4eec\u8fd9\u6837\u505a\u65f6\uff0c\u5f88\u96be\u786e\u5b9a\u89e6\u53d1\u4e8b\u4ef6\u7684\u4ee3\u7801\u4e2d\u7684\u5177\u4f53\u4f4d\u7f6e\u3002 \u5982\u679c\u4e0d\u80fd\u66f4\u6539\u8bed\u53e5\uff0c\u90a3\u4e48\u81f3\u5c11\u8981\u7528\u65e5\u5fd7\u6d88\u606f\u6307\u5b9a\u65e5\u5fd7\u6e90\uff0c\u4ee5\u533a\u5206\u6700\u7ec8\u7684\u65e5\u5fd7\u884c\u3002\u6b64\u5916\uff0c\u5982\u679c\u7236\u7c7b\u5904\u7406\u65e5\u5fd7\u8bb0\u5f55\uff0c\u8bf7\u786e\u4fdd\u5728\u542f\u52a8\u65f6\u63d0\u4ea4\u6807\u8bc6\u7b26\uff0c\u5e76\u5728\u4e3a\u5b50\u884c\u4e3a\u5199\u65e5\u5fd7\u6d88\u606f\u65f6\u4f7f\u7528\u5b83 How - \u63d0\u4f9b\u4e0a\u4e0b\u6587 \u00b6 \u65e5\u5fd7\u662f\u7531\u5f00\u53d1\u4eba\u5458\u6839\u636e\u4ee3\u7801\u7f16\u5199\u7684\u3002\u8fd9\u610f\u5473\u7740\u5f00\u53d1\u4eba\u5458\u5728\u7f16\u5199\u4ee3\u7801\u65f6\u5c06\u65e5\u5fd7\u57fa\u4e8e\u4ee3\u7801\u7684\u4e0a\u4e0b\u6587\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u9605\u8bfb\u65e5\u5fd7\u7684\u4e2a\u4eba\u7f3a\u4e4f\u4e0a\u4e0b\u6587\uff0c\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u751a\u81f3\u53ef\u4ee5\u8bbf\u95ee\u6e90\u4ee3\u7801\u3002 \u4f8b\u5982: \"The database is unavailable.\" \"Failed to Get users' preferences for user id=1. Configuration Database not responding. Please retry again in 3 minutes.\" \u901a\u8fc7\u8bfb\u53d6\u7b2c\u4e8c\u4e2a\u65e5\u5fd7\u884c\uff0c\u6211\u4eec\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u63a8\u65ad\u51fa\u5e94\u7528\u7a0b\u5e8f\u8bd5\u56fe\u5b8c\u6210\u4ec0\u4e48\u3001\u54ea\u4e2a\u7ec4\u4ef6\u5931\u8d25\uff0c\u4ee5\u53ca\u662f\u5426\u5b58\u5728\u95ee\u9898\u7684\u89e3\u51b3\u65b9\u6848\u3002\u6bcf\u4e2a\u65e5\u5fd7\u884c\u90fd\u5e94\u8be5\u6709\u8db3\u591f\u7684\u4fe1\u606f\uff0c\u8ba9\u60a8\u51c6\u786e\u5730\u7406\u89e3\u53d1\u751f\u4e86\u4ec0\u4e48\u4ee5\u53ca\u5e94\u7528\u7a0b\u5e8f\u5f53\u65f6\u7684\u72b6\u6001\u662f\u4ec0\u4e48\u3002 How - \u8bb0\u5f55\u8b66\u544a\u548c\u5f02\u5e38\u5904\u7406 \u00b6 \u5c3d\u7ba1\u65e5\u5fd7\u5f02\u5e38\u662f\u65e5\u5fd7\u8bb0\u5f55\u6700\u91cd\u8981\u7684\u529f\u80fd\u4e4b\u4e00\uff0c\u4f46\u8bb8\u591a\u7a0b\u5e8f\u5458\u5c06\u65e5\u5fd7\u8bb0\u5f55\u89c6\u4e3a\u5904\u7406\u5f02\u5e38\u7684\u4e00\u79cd\u65b9\u6cd5\u3002 How - \u7f16\u5199\u65e5\u5fd7\u89e3\u6790\u5668\u5e76\u4e3b\u52a8\u76d1\u542c\u65e5\u5fd7 \u00b6 \u5927\u591a\u6570 API \u65e5\u5fd7\u8bb0\u5f55\u7cfb\u7edf\u90fd\u80fd\u591f\u521b\u5efa\u81ea\u5b9a\u4e49\u65e5\u5fd7\u89e3\u6790\u5668\u548c\u8fc7\u6ee4\u5668\u3002\u8fd9\u4e9b\u89e3\u6790\u5668\u5141\u8bb8\u6211\u4eec\u4ee5\u66f4\u6709\u7ec4\u7ec7\u7684\u65b9\u5f0f\u5b58\u50a8\u65e5\u5fd7\u6570\u636e\uff0c\u4f7f\u67e5\u8be2\u66f4\u52a0\u5bb9\u6613\u548c\u5feb\u901f\u3002\u6b63\u786e\u7ec4\u7ec7\u7684\u65e5\u5fd7\u6570\u636e\u4e5f\u53ef\u4ee5\u88ab\u63d0\u4f9b\u5230\u65e5\u5fd7\u76d1\u63a7\u548c\u5f02\u5e38\u68c0\u6d4b\u7ba1\u7406\u7cfb\u7edf\u4e2d\uff0c\u4ee5\u4fbf\u4e3b\u52a8\u76d1\u63a7\u7cfb\u7edf\u548c\u9884\u6d4b\u672a\u6765\u4e8b\u4ef6\u3002 \u8fd9\u4e9b\u6280\u672f\u975e\u5e38\u590d\u6742\uff0c\u901a\u8fc7\u57fa\u4e8e\u65f6\u95f4\u5e8f\u5217\u548c\u57fa\u4e8e\u65e5\u5fd7\u6570\u636e\u548c\u5176\u4ed6\u6765\u6e90\u7684\u5b9e\u65f6\u4e8b\u4ef6\u5206\u6790\u7684\u4ea4\u4e92\u5f0f\u4eea\u8868\u677f\u3002 \u65e5\u5fd7\u6846\u67b6 \u00b6 log4j2 \u00b6 Log4j 2 \u662f Log4j \u65e5\u5fd7\u6846\u67b6\u7684\u65b0\u6539\u8fdb\u7248\u672c\u3002\u6700\u5f15\u4eba\u6ce8\u76ee\u7684\u6539\u8fdb\u662f\"\u5f02\u6b65\u65e5\u5fd7\u8bb0\u5f55\"\u3002 Log4j 2 \u4f9d\u8d56: <dependency> <groupId> org.apache.logging.log4j </groupId> <artifactId> log4j-api </artifactId> <version> 2.6.1 </version> </dependency> <dependency> <groupId> org.apache.logging.log4j </groupId> <artifactId> log4j-core </artifactId> <version> 2.6.1 </version> </dependency> \u914d\u7f6e Log4j 2 \u57fa\u4e8e\u4e3b\u914d\u7f6e log4j2.xml \u6587\u4ef6\u3002\u9996\u5148\u8981\u914d\u7f6e\u7684\u662f appender \u3002 \u8fd9\u4e9b\u51b3\u5b9a\u4e86\u65e5\u5fd7\u6d88\u606f\u5c06\u88ab\u8def\u7531\u5230\u54ea\u91cc\u3002\u76ee\u7684\u5730\u53ef\u4ee5\u662f\"\u63a7\u5236\u53f0\"\u3001\"\u6587\u4ef6\"\u3001\"\u5957\u63a5\u5b57\"\u7b49\u3002 Log4j 2 \u6709\u8bb8\u591a\u7528\u4e8e\u4e0d\u540c\u76ee\u7684\u7684 eppender \uff0c\u53ef\u4ee5\u5728 Log4j 2 \u5b98\u65b9\u7f51\u7ad9\u4e0a\u627e\u5230\u66f4\u591a\u4fe1\u606f\u3002 log4j2.xml\uff1a <Configuration status=\"debug\" name=\"baeldung\" packages=\"\"> <Appenders> <Console name=\"stdout\" target=\"SYSTEM_OUT\"> <PatternLayout pattern=\"%d{yyyy-MM-dd HH:mm:ss} %p %m%n\"/> </Console> </Appenders> </Configuration> \u60a8\u53ef\u4ee5\u4e3a\u6bcf\u4e2a appender \u8bbe\u7f6e\u4e00\u4e2a\u540d\u79f0\uff0c\u4f8b\u5982\u4f7f\u7528 \u5176\u4ed6\u63a7\u5236\u53f0\u540d\u79f0 \u800c\u4e0d\u662f \"stdout\"\u3002 \u6ce8\u610f PatternLayout \u5143\u7d20\u2014\u2014\u8fd9\u51b3\u5b9a\u4e86\u6d88\u606f\u5e94\u8be5\u662f\u4ec0\u4e48\u6837\u5b50\u3002\u5728\u6211\u4eec\u7684\u793a\u4f8b\u4e2d\uff0c\u6a21\u5f0f\u662f\u57fa\u4e8e\u6a21\u5f0f\u53c2\u6570\u8bbe\u7f6e\u7684\uff0c\u5176\u4e2d % d \u51b3\u5b9a\u65e5\u671f\u6a21\u5f0f, % p \u51b3\u5b9a\u65e5\u5fd7\u7ea7\u522b\u7684\u8f93\u51fa, % m \u51b3\u5b9a\u65e5\u5fd7\u6d88\u606f\u7684\u8f93\u51fa, % n \u51b3\u5b9a\u65b0\u7684\u884c\u7b26\u53f7\u3002\u4f60\u53ef\u4ee5\u5728 Log4j 2 \u5b98\u65b9\u9875\u9762\u4e0a\u627e\u5230\u66f4\u591a\u5173\u4e8e \u65e5\u5fd7\u6a21\u5f0f\u7684\u4fe1\u606f\u3002 \u6700\u540e\uff0c \u542f\u7528\u4e00\u4e2a(\u6216\u591a\u4e2a) appender \uff0c\u5c06\u4ed6\u6dfb\u52a0\u5230 <root> \u4e2d <Root level= \"error\" > <AppenderRef ref= \"STDOUT\" /> </Root> \u6587\u4ef6\u8f93\u51fa \u00b6 \u6709\u65f6\u5019\u4f60\u9700\u8981\u5728\u6587\u4ef6\u4e2d\u4f7f\u7528\u65e5\u5fd7\u8bb0\u5f55\uff0c\u6240\u4ee5\u6211\u4eec\u4f1a\u5728\u914d\u7f6e\u4e2d\u6dfb\u52a0 name = \"f-out\" \u65e5\u5fd7\u8bb0\u5f55\u5668: <Appenders> <File name= \"fout\" fileName= \"baeldung.log\" append= \"true\" > <PatternLayout> <Pattern> %d{yyyy-MM-dd HH:mm:ss} %-5p %m%nw </Pattern> </PatternLayout> </File> </Appenders> fileName - \u914d\u7f6e\u65e5\u5fd7\u6587\u4ef6\u7684\u540d\u79f0\uff1b append - \u6b64\u53c2\u6570\u7684\u9ed8\u8ba4\u503c\u4e3a true \uff0c\u8fd9\u610f\u5473\u7740\u9ed8\u8ba4\u60c5\u51b5\u4e0b File appender \u5c06\u9644\u52a0\u5230\u73b0\u6709\u6587\u4ef6\uff0c\u800c\u4e0d\u662f\u622a\u65ad\u8be5\u6587\u4ef6\u3002 \u542f\u7528 \u6587\u4ef6\u65e5\u5fd7\u8bb0\u5f55 <Root level= \"INFO\" > <AppenderRef ref= \"stdout\" /> <AppenderRef ref= \"fout\" /> </Root> \u5f02\u6b65\u65e5\u5fd7 \u00b6 \u5982\u679c\u60f3\u8ba9 Log4j 2\u53d8\u5f97\u5f02\u6b65\uff0c\u9700\u8981\u5728 pom.xml \u4e2d\u6dfb\u52a0 LMAX disruptor \u5e93\u3002LMAX \u5e72\u6270\u5668\u662f\u4e00\u4e2a\u65e0\u9501\u7684\u7ebf\u7a0b\u95f4\u901a\u4fe1\u5e93\u3002 <dependency> <groupId> com.lmax </groupId> <artifactId> disruptor </artifactId> <version> 3.3.4 </version> </dependency> \u5982\u679c\u60f3\u4f7f\u7528 LMAX disruptor\uff0c\u9700\u8981\u5728\u7684\u914d\u7f6e\u4e2d\u4f7f\u7528 < asyncroot > \u800c\u4e0d\u662f < root > \u3002 <AsyncRoot level= \"DEBUG\" > <AppenderRef ref= \"stdout\" /> <AppenderRef ref= \"fout\" /> </AsyncRoot> Note \u6216\u8005\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7\u5c06\u7cfb\u7edf\u5c5e\u6027 Log4jContextSelector \u8bbe\u7f6e\u4e3a org.apache.logging.log4j.core.async.AsyncLoggerContextSelector \u6765\u542f\u7528\u5f02\u6b65\u65e5\u5fd7\u8bb0\u5f55\u3002 Logback \u00b6 Logback \u662f Log4j \u7684\u6539\u8fdb\u7248\uff0c\u7531\u540c\u4e00\u4e2a\u5f00\u53d1\u8005\u5f00\u53d1\u3002 \u4e0e Log4j \u76f8\u6bd4\uff0cLogback \u6709\u66f4\u591a\u7684\u7279\u6027\uff0c\u5176\u4e2d\u8bb8\u591a\u7279\u6027\u4e5f\u88ab\u5f15\u5165\u5230 Log4j 2\u4e2dd <dependency> <groupId> ch.qos.logback </groupId> <artifactId> logback-classic </artifactId> <version> 1.2.6 </version> </dependency> \u8fd9\u4e2a\u4f9d\u8d56\u9879\u5c06\u4f20\u9012\u6027\u5730\u5f15\u5165\u53e6\u5916\u4e24\u4e2a\u4f9d\u8d56\u9879: logback-core \u548c slf4j-api \u914d\u7f6e: <configuration> # Console appender <appender name= \"stdout\" class= \"ch.qos.logback.core.ConsoleAppender\" > <layout class= \"ch.qos.logback.classic.PatternLayout\" > # Pattern of log message for console appender <Pattern> %d{yyyy-MM-dd HH:mm:ss} %-5p %m%n </Pattern> </layout> </appender> # File appender <appender name= \"fout\" class= \"ch.qos.logback.core.FileAppender\" > <file> baeldung.log </file> <append> false </append> <encoder> # Pattern of log message for file appender <pattern> %d{yyyy-MM-dd HH:mm:ss} %-5p %m%n </pattern> </encoder> </appender> # Override log level for specified package <logger name= \"com.baeldung.log4j\" level= \"TRACE\" /> <root level= \"INFO\" > <appender-ref ref= \"stdout\" /> <appender-ref ref= \"fout\" /> </root> </configuration> SLF4J \u4e3a\u5927\u591a\u6570 Java \u65e5\u5fd7\u6846\u67b6\u63d0\u4f9b\u4e86\u4e00\u4e2a\u516c\u5171\u63a5\u53e3\u548c\u62bd\u8c61\u3002\u5b83\u5145\u5f53 facade\uff0c\u5e76\u63d0\u4f9b\u6807\u51c6\u5316\u7684 API \u6765\u8bbf\u95ee\u65e5\u5fd7\u6846\u67b6\u7684\u5e95\u5c42\u7279\u6027\u3002 Logback \u4f7f\u7528 SLF4J \u4f5c\u4e3a\u672c\u5730 API \u5b9e\u73b0\u5176\u529f\u80fd: import org.slf4j.Logger ; import org.slf4j.LoggerFactory ; public class Log4jExample { private static Logger logger = LoggerFactory . getLogger ( Log4jExample . class ); public static void main ( String [] args ) { logger . debug ( \"Debug log message\" ); logger . info ( \"Info log message\" ); logger . error ( \"Error log message\" ); } }","title":"\u65e5\u5fd7"},{"location":"project/advance/log/#_1","text":"\u65e5\u5fd7\u662f\u4e00\u4e2a\u8bb0\u5f55\u7cfb\u7edf\u548c\u7528\u6237\u4e4b\u95f4\u901a\u4fe1\u7684\u6587\u4ef6\uff0c\u6216\u8005\u662f\u4e00\u4e2a\u6570\u636e\u6536\u96c6\u5de5\u5177\uff0c\u5b83\u8bb0\u5f55\u7528\u6237\u4ece\u7cfb\u7edf\u7ec8\u7aef\u8fdb\u884c\u7684\u4e8b\u52a1\u7684\u7c7b\u578b\u3001\u5185\u5bb9\u548c\u65f6\u95f4\u3002 \u65e5\u5fd7\u7cfb\u7edf\u5305\u542b\u5728\u8bb8\u591a\u64cd\u4f5c\u7cfb\u7edf\u3001\u8f6f\u4ef6\u6846\u67b6\u548c\u7a0b\u5e8f\u4e2d\u3002Syslog \u7531 Internet Engineering Task Force (IETF)\u521b\u5efa\uff0c\u662f\u4e00\u4e2a\u5e7f\u6cdb\u4f7f\u7528\u7684\u65e5\u5fd7\u8bb0\u5f55\u6807\u51c6\u3002Syslog \u6807\u51c6\u5141\u8bb8\u901a\u8fc7\u4e13\u95e8\u7684\u6807\u51c6\u5316\u5b50\u7cfb\u7edf\u751f\u6210\u3001\u7b5b\u9009\u3001\u8bb0\u5f55\u548c\u5206\u6790\u65e5\u5fd7\u6d88\u606f\u3002\u8fd9\u5c31\u6d88\u9664\u4e86\u8f6f\u4ef6\u5f00\u53d1\u4eba\u5458\u521b\u5efa\u548c\u6784\u5efa\u4ed6\u4eec\u81ea\u5df1\u7684\u7279\u522b\u65e5\u5fd7\u7cfb\u7edf\u7684\u9700\u8981\u3002","title":"\u539f\u5219"},{"location":"project/advance/log/#what","text":"\u9996\u5148\u8981\u77e5\u9053 \u65e5\u5fd7\u53ef\u4ee5\u8bb0\u5f55\u4ec0\u4e48: \u8f93\u5165\u3001\u8f93\u51fa\u6d88\u606f \u4f20\u5165\u548c\u4f20\u51fa\u7684\u6d88\u606f\u90fd\u5fc5\u987b\u7528 API \u7aef\u70b9 url\u3001\u8bf7\u6c42\u53c2\u6570\u3001\u8bf7\u6c42\u6765\u6e90\u548c\u4e2d\u95f4 ip\u3001\u8bf7\u6c42\u5934\u3001\u4f5c\u8005\u4fe1\u606f\u3001\u8bf7\u6c42\u548c\u54cd\u5e94\u4e3b\u4f53\u3001\u4e1a\u52a1\u4e0a\u4e0b\u6587\u3001\u65f6\u95f4\u6233\u4ee5\u53ca\u7ec4\u4ef6\u901a\u8fc7\u6d88\u606f\u4f20\u9012\u8fdb\u884c\u901a\u4fe1\u65f6\u7684\u5185\u90e8\u5904\u7406\u6b65\u9aa4\u8fdb\u884c\u8bb0\u5f55\u3002 \u670d\u52a1\u548c\u529f\u80fd\u8c03\u7528 \u5728\u8c03\u7528\u670d\u52a1\u6216\u51fd\u6570\u65f6\uff0c\u6700\u597d\u4ee5\u8f83\u4f4e\u7684\u65e5\u5fd7\u7ea7\u522b\u62a5\u544a\u8c03\u7528\u7684\u4e0a\u4e0b\u6587\uff0c\u4e3b\u8981\u7528\u4e8e\u8c03\u8bd5\u3002\u5c06\u8fd9\u4e9b\u65e5\u5fd7\u653e\u5728\u624b\u8fb9\u53ef\u4ee5\u66f4\u5bb9\u6613\u5730\u63a2\u7d22\u4e1a\u52a1\u903b\u8f91\u7684\u95ee\u9898\uff0c\u7279\u522b\u662f\u5f53\u6211\u4eec\u6ca1\u6709\u80fd\u529b\u5c06\u8c03\u8bd5\u5668\u8fde\u63a5\u5230\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u65f6\u3002 \u7528\u6237\u4ea4\u4e92\u548c\u4e1a\u52a1\u7edf\u8ba1 \u6bcf\u4e2a\u5e94\u7528\u7a0b\u5e8f\u90fd\u6709\u81ea\u5df1\u7684\u4e00\u7ec4\u4e1a\u52a1\u7528\u4f8b\u548c\u7528\u6237\u6d41\u7a0b\uff0c\u8fd9\u4e3a\u7cfb\u7edf\u7684\u9886\u57df\u4e13\u5bb6\u63d0\u4f9b\u4e86\u4e30\u5bcc\u7684\u4fe1\u606f\u3002\u5176\u4ed6\u4e0e\u4e1a\u52a1\u76f8\u5173\u7684\u6570\u636e\uff0c\u5982\u4ea4\u6613\u91cf\u548c\u6d3b\u8dc3\u7528\u6237\u53ca\u5176\u9636\u6bb5\uff0c\u5728\u83b7\u5f97\u4e1a\u52a1\u6d1e\u5bdf\u529b\u65b9\u9762\u975e\u5e38\u6709\u7528\uff0c\u751a\u81f3\u53ef\u4ee5\u7528\u4e8e\u4e1a\u52a1\u667a\u80fd\u3002 \u6570\u636e\u64cd\u4f5c \u5728\u5927\u591a\u6570\u4f01\u4e1a\u5e94\u7528\u7a0b\u5e8f\u4e2d\uff0c\u4e3a\u4e0e\u6570\u636e\u76f8\u5173\u7684\u64cd\u4f5c\u4fdd\u7559\u4e00\u4e2a\u5355\u72ec\u7684\u65e5\u5fd7\uff0c\u5176\u4e2d\u5305\u542b\u6240\u6709\u91cd\u8981\u4fe1\u606f\uff0c\u5982\u8bbf\u95ee id\u3001\u4f7f\u7528\u7684\u786e\u5207\u670d\u52a1\u5b9e\u4f8b\u548c\u89d2\u8272\u7279\u6743\u3001\u65f6\u95f4\u6233\u3001\u6570\u636e\u5c42\u67e5\u8be2\uff0c\u4ee5\u53ca\u5df2\u66f4\u6539\u6570\u636e\u96c6\u4ee5\u524d\u548c\u65b0\u72b6\u6001\u7684\u5feb\u7167\uff0c\u8fd9\u662f\u51fa\u4e8e\u5b89\u5168\u548c\u9075\u4ece\u6027\u7684\u539f\u56e0\u3002\u7528\u6237\u4ee5\u53ca\u5176\u4ed6\u7cfb\u7edf\u548c\u670d\u52a1\u6240\u505a\u7684\u6240\u6709\u4e0e\u6570\u636e\u76f8\u5173\u7684\u5c1d\u8bd5\u548c CRUD \u64cd\u4f5c\u90fd\u5fc5\u987b\u8bb0\u5f55\u5728\u5ba1\u8ba1\u8ddf\u8e2a\u4e2d\u3002 \u7cfb\u7edf\u4e8b\u4ef6 \u884c\u4e3a\u4e8b\u4ef6\u3001\u8f6c\u6362\u6a21\u5f0f\u3001\u670d\u52a1\u95f4\u901a\u4fe1\u3001\u670d\u52a1\u5b9e\u4f8b id\u3001\u4e3b\u52a8\u670d\u52a1 api\u3001\u4e3b\u52a8\u76d1\u542c IP \u548c\u7aef\u53e3\u8303\u56f4\u3001\u52a0\u8f7d\u7684\u914d\u7f6e\u3001\u603b\u4f53\u670d\u52a1\u5065\u5eb7\u72b6\u51b5\u4ee5\u53ca\u5176\u4ed6\u6709\u52a9\u4e8e\u7406\u89e3\u7cfb\u7edf\u884c\u4e3a\u7684\u6240\u6709\u4e1c\u897f\u90fd\u5fc5\u987b\u5728\u7cfb\u7edf\u4e8b\u4ef6\u4e2d\u6355\u83b7\u3002","title":"what"},{"location":"project/advance/log/#when","text":"\u7cfb\u7edf\u4e2d\u6bcf\u4e2a\u4e8b\u4ef6\u7684\u4e25\u91cd\u6027\u7531\u65e5\u5fd7\u7ea7\u522b\u6307\u5b9a\u3002\u5927\u591a\u6570\u65e5\u5fd7\u6846\u67b6\u90fd\u53ef\u4ee5\u8bbf\u95ee\u4ee5\u4e0b\u7ea7\u522b\u3002 FATAL - \u6807\u8bc6\u53ef\u80fd\u5bfc\u81f4\u5e94\u7528\u7a0b\u5e8f\u4e2d\u6b62\u7684\u6781\u5176\u4e25\u91cd\u7684\u9519\u8bef\u4e8b\u4ef6\u3002\u901a\u5e38\uff0c\u8fd9\u4f1a\u5bfc\u81f4\u707e\u96be\u6027\u7684\u6545\u969c ERROR - \u6807\u8bc6\u4ecd\u7136\u53ef\u4ee5\u8ba9\u8f6f\u4ef6\u8fd0\u884c\u4f46\u5728\u6240\u5f71\u54cd\u7684\u8def\u7531\u4e2d\u5177\u6709\u53d7\u9650\u529f\u80fd\u7684\u9519\u8bef\u4e8b\u4ef6 WARN - \u63cf\u8ff0\u7834\u574f\u6027\u5c0f\u4e8e\u9519\u8bef\u7684\u4e8b\u4ef6\u3002\u5b83\u4eec\u901a\u5e38\u4e0d\u4f1a\u5bfc\u81f4\u5e94\u7528\u7a0b\u5e8f\u529f\u80fd\u7684\u4efb\u4f55\u51cf\u5c11\u6216\u5176\u5b8c\u5168\u5931\u8d25\u3002\u7136\u800c\uff0c\u8fd9\u4e9b\u90fd\u662f\u5fc5\u987b\u8c03\u67e5\u7684\u7ea2\u8272\u6807\u5fd7 INFO - \u5728\u7533\u8bf7\u884c\u4e3a\u65b9\u9762\uff0c\u8868\u793a\u4e3b\u8981\u4e8b\u4ef6\u7684\u6a2a\u989d\u53ca\u8d44\u8baf\u8baf\u606f DEBUG - \u8868\u793a\u4e3b\u8981\u7528\u4e8e\u8c03\u8bd5\u7684\u7279\u6b8a\u548c\u8be6\u7ec6\u7684\u6570\u636e\u3002\u8fd9\u4e9b\u65e5\u5fd7\u5e2e\u52a9\u6211\u4eec\u8c03\u8bd5\u4ee3\u7801 TRACE - \u4e3a\u4e86\u63d0\u4f9b\u5173\u4e8e\u7279\u5b9a\u4e8b\u4ef6/\u4e0a\u4e0b\u6587\u7684\u6700\u5927\u4fe1\u606f\uff0c\u5b83\u8868\u793a\u6700\u5e95\u5c42\u7684\u4fe1\u606f\uff0c\u4f8b\u5982\u4ee3\u7801\u7684\u5806\u6808\u8ddf\u8e2a\u3002\u8fd9\u4e9b\u65e5\u5fd7\u5141\u8bb8\u6211\u4eec\u68c0\u67e5\u53d8\u91cf\u503c\u4ee5\u53ca\u5b8c\u6574\u7684\u9519\u8bef\u5806\u6808 \u65e0\u8bba\u6bcf\u4e2a\u65e5\u5fd7\u7ea7\u522b\u5b9e\u73b0\u7684\u590d\u6742\u6027\u548c\u6df1\u5ea6\u5982\u4f55\uff0c\u6211\u4eec\u90fd\u5fc5\u987b\u5728\u4ee3\u7801\u4e2d\u9002\u5f53\u5730\u8bbe\u7f6e\u5b83\u4eec\uff0c\u4ee5\u4fbf\u4e3a\u6bcf\u4e2a\u73af\u5883\u63d0\u4f9b\u6700\u4f73\u7a0b\u5ea6\u7684\u4fe1\u606f\u3002","title":"when"},{"location":"project/advance/log/#how-","text":"\u4e00\u4e9b\u5de5\u5177\u548c\u7ec8\u7aef\u63a7\u5236\u53f0\u4e0d\u652f\u6301\u67d0\u4e9b Unicode \u5b57\u7b26\u4ee5\u6253\u5370\u548c\u4fdd\u5b58\u65e5\u5fd7\u6d88\u606f\u3002\u5728\u65e5\u5fd7\u7ea7\u522b\uff0c\u672c\u5730\u5316\u548c\u5176\u4ed6\u590d\u6742\u7279\u6027\u53ef\u80fd\u96be\u4ee5\u5b9e\u73b0\u3002\u56e0\u6b64\uff0c\u5728\u7f16\u5199\u65e5\u5fd7\u6d88\u606f\u65f6\uff0c\u4e00\u5b9a\u8981\u575a\u6301\u4f7f\u7528\u82f1\u8bed\uff0c\u5e76\u59cb\u7ec8\u4f7f\u7528\u516c\u8ba4\u7684\u5b57\u7b26\u96c6 \u5982\u679c\u6211\u4eec\u8bb0\u5f55\u7684\u592a\u5c11\uff0c\u6211\u4eec\u53ef\u80fd\u65e0\u6cd5\u6536\u96c6\u5230\u8db3\u591f\u7684\u4fe1\u606f\u6765\u5efa\u7acb\u6bcf\u4e2a\u5173\u952e\u4e8b\u4ef6\u7684\u4e0a\u4e0b\u6587\u3002\u5982\u679c\u65e5\u5fd7\u8bb0\u5f55\u8fc7\u591a\uff0c\u6211\u4eec\u5c06\u4f1a\u62c5\u5fc3\u6027\u80fd\u95ee\u9898\u3002 \u5168\u9762\u638c\u63e1\u7cfb\u7edf\u7684\u529f\u80fd\u6027\u548c\u975e\u529f\u80fd\u6027\u9700\u6c42\uff0c\u8ba1\u5212\u9002\u5f53\u7684\u65e5\u5fd7\u6d88\u606f\u8d28\u91cf\u548c\u6570\u91cf\uff0c\u4ee5\u4f18\u5316\u65e5\u5fd7\u6d88\u606f\u3002\u8ba9\u6bcf\u4e00\u6761\u65e5\u5fd7\u4fe1\u606f\u90fd\u6709\u7528\u5e76\u4e0e\u5f53\u65f6\u7684\u60c5\u51b5\u76f8\u5173\u2014\u2014\u5e76\u4e14\u59cb\u7ec8\u4fdd\u6301\u7b80\u77ed\u548c\u6070\u5230\u597d\u5904\u3002","title":"How - \u4f7f\u7528\u82f1\u8bed\u548c\u53cb\u597d\u7684\u6d88\u606f"},{"location":"project/advance/log/#how-_1","text":"\u597d\u7684\u65e5\u5fd7\u8bb0\u5f55\u9700\u8981\u8de8\u6240\u6709\u65e5\u5fd7\u6587\u4ef6\u4fdd\u6301\u4e00\u81f4\u7684\u6807\u51c6\u65e5\u5fd7\u6587\u4ef6\u7ed3\u6784\u3002\u6bcf\u4e2a\u65e5\u5fd7\u884c\u5e94\u8be5\u53cd\u6620\u4e00\u4e2a\u4e8b\u4ef6\uff0c\u5305\u62ec\u65f6\u95f4\u6233\u3001\u4e3b\u673a\u540d\u3001\u670d\u52a1\u548c\u65e5\u5fd7\u5668\u540d\u79f0\u7b49\u3002\u7ebf\u7a0b\u6216\u8fdb\u7a0b id\u3001\u4e8b\u4ef6 id\u3001\u4f1a\u8bdd id \u548c\u7528\u6237 id \u90fd\u53ef\u4ee5\u7528\u4f5c\u9644\u52a0\u503c\u3002 \u5176\u4ed6\u91cd\u8981\u503c\u53ef\u4ee5\u8fde\u63a5\u5230\u4e8b\u4ef6\u7684\u73af\u5883\uff0c\u4f8b\u5982\u5b9e\u4f8b ID\u3001\u90e8\u7f72\u540d\u79f0\u3001\u5e94\u7528\u7a0b\u5e8f\u7248\u672c\u6216\u4efb\u4f55\u5176\u4ed6\u952e\u503c\u5bf9\u3002\u786e\u4fdd\u60a8\u7684\u65f6\u95f4\u6233\u683c\u5f0f\u5305\u542b\u65f6\u533a\u6570\u636e\u5e76\u4f7f\u7528\u9ad8\u7cbe\u5ea6\u65f6\u95f4\u6233\u3002 \u6700\u540e\uff0c\u5982\u679c\u4f60\u60f3\u8ba9\u81ea\u5df1\u770b\u8d77\u6765\u50cf\u4e2a\u4e13\u4e1a\u4eba\u58eb\uff0c\u7ed9\u6bcf\u4e2a\u65e5\u5fd7\u884c\u4e00\u4e2a\u552f\u4e00\u7684 ID\u3002\u4e00\u4e2a\u65e5\u5fd7\u884c \u901a\u5e38\u6709\u4e00\u4e2a\u8bbe\u7f6e\u7ec4\u4ef6\u548c\u4e00\u4e2a\u53ef\u53d8\u90e8\u4ef6\uff0c\u8fd9\u4f7f\u5f97\u8fc7\u6ee4\u67d0\u4e9b\u6a21\u5f0f\u53d8\u5f97\u56f0\u96be\u3002\u5728\u8fd9\u4e00\u70b9\u4e0a\uff0c\u72ec\u7279\u7684 ID \u5f88\u6709\u5e2e\u52a9\u3002\u4e3a\u65e5\u5fd7\u9519\u8bef\u6dfb\u52a0\u9519\u8bef ID\u3002\u5f53\u60a8\u9700\u8981\u5728\u77e5\u8bc6\u7ba1\u7406\u7cfb\u7edf\u4e2d\u641c\u7d22\u4efb\u4f55\u5185\u5bb9\u65f6\uff0c\u8fd9\u5c06\u6d3e\u4e0a\u7528\u573a\u3002","title":"How - \u7ed3\u6784\u5316"},{"location":"project/advance/log/#how-metrics","text":"\u5ea6\u91cf\u662f\u65e5\u5fd7\u8bb0\u5f55\u4e2d\u7684\u4e00\u4e2a\u57fa\u672c\u6982\u5ff5\u3002\u5ea6\u91cf\u662f\u4e00\u4e2a\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u800c\u4ef7\u503c\u8fde\u57ce\u7684\u8d22\u4ea7\uff0c\u901a\u5e38\u6709\u56fa\u5b9a\u7684\u95f4\u9694\u3002 \u4ee5\u4e0b\u662f\u5e38\u7528\u6307\u6807\u7c7b\u578b\u7684\u5217\u8868: Meter - \u8ba1\u7b97\u4e8b\u4ef6\u53d1\u751f\u7684\u9891\u7387 (\u4f8b\u5982: \u8bbf\u95ee\u4f60\u7f51\u7ad9\u7684\u4eba\u6570) Timer - \u6d4b\u91cf\u5b8c\u6210\u4e00\u9879\u7a0b\u5e8f\u6240\u9700\u7684\u65f6\u95f4(\u4f8b\u5982: \u60a8\u7684 web \u670d\u52a1\u5668\u54cd\u5e94\u65f6\u95f4) Counter - \u6574\u6570\u503c\u9012\u589e\u548c\u9012\u51cf(\u4f8b\u5982: \u767b\u5f55\u7528\u6237\u6570\u76ee) Gauge - \u8981\u6d4b\u91cf\u7684\u4efb\u610f\u503c (\u4f8b\u5982: CPU) \u6bcf\u4e2a\u5ea6\u91cf\u8868\u793a\u67d0\u4e2a\u7cfb\u7edf\u5c5e\u6027\u7684\u6761\u4ef6\u3002\u5ea6\u91cf\u6700\u68d2\u7684\u5730\u65b9\u5728\u4e8e\uff0c\u60a8\u53ef\u4ee5\u62e5\u6709\u5f88\u591a\u5ea6\u91cf\uff0c\u5e76\u5c06\u5b83\u4eec\u5f7c\u6b64\u5173\u8054\u8d77\u6765\u3002 Note \u5efa\u8bae\u8ddf\u8e2a\u548c\u8bb0\u5f55\u5ea6\u91cf\uff0c\u6216\u8005\u5c06\u5ea6\u91cf\u4e0e\u60a8\u7684\u65e5\u5fd7\u5206\u5f00\u3002","title":"How - \u4f7f\u7528\u5ea6\u91cf\uff08Metrics\uff09"},{"location":"project/advance/log/#how-_2","text":"\u5927\u591a\u6570\u521d\u5b66\u8005\u90fd\u4f1a\u72af\u8fd9\u6837\u4e00\u4e2a\u9519\u8bef\uff0c\u5373\u5c06\u76f8\u540c\u7684\u65e5\u5fd7\u6d88\u606f\u590d\u5236\u7c98\u8d34\u5230\u8bb8\u591a\u6587\u4ef6\u4e2d\uff0c\u5bfc\u81f4\u6700\u7ec8\u7684\u65e5\u5fd7\u805a\u5408\u88ab\u7cfb\u7edf\u5404\u4e2a\u90e8\u5206\u7684\u76f8\u4f3c\u65e5\u5fd7\u884c\u586b\u5145\u3002\u5f53\u4ed6\u4eec\u8fd9\u6837\u505a\u65f6\uff0c\u5f88\u96be\u786e\u5b9a\u89e6\u53d1\u4e8b\u4ef6\u7684\u4ee3\u7801\u4e2d\u7684\u5177\u4f53\u4f4d\u7f6e\u3002 \u5982\u679c\u4e0d\u80fd\u66f4\u6539\u8bed\u53e5\uff0c\u90a3\u4e48\u81f3\u5c11\u8981\u7528\u65e5\u5fd7\u6d88\u606f\u6307\u5b9a\u65e5\u5fd7\u6e90\uff0c\u4ee5\u533a\u5206\u6700\u7ec8\u7684\u65e5\u5fd7\u884c\u3002\u6b64\u5916\uff0c\u5982\u679c\u7236\u7c7b\u5904\u7406\u65e5\u5fd7\u8bb0\u5f55\uff0c\u8bf7\u786e\u4fdd\u5728\u542f\u52a8\u65f6\u63d0\u4ea4\u6807\u8bc6\u7b26\uff0c\u5e76\u5728\u4e3a\u5b50\u884c\u4e3a\u5199\u65e5\u5fd7\u6d88\u606f\u65f6\u4f7f\u7528\u5b83","title":"How - \u65e5\u5fd7\u552f\u4e00"},{"location":"project/advance/log/#how-_3","text":"\u65e5\u5fd7\u662f\u7531\u5f00\u53d1\u4eba\u5458\u6839\u636e\u4ee3\u7801\u7f16\u5199\u7684\u3002\u8fd9\u610f\u5473\u7740\u5f00\u53d1\u4eba\u5458\u5728\u7f16\u5199\u4ee3\u7801\u65f6\u5c06\u65e5\u5fd7\u57fa\u4e8e\u4ee3\u7801\u7684\u4e0a\u4e0b\u6587\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u9605\u8bfb\u65e5\u5fd7\u7684\u4e2a\u4eba\u7f3a\u4e4f\u4e0a\u4e0b\u6587\uff0c\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u751a\u81f3\u53ef\u4ee5\u8bbf\u95ee\u6e90\u4ee3\u7801\u3002 \u4f8b\u5982: \"The database is unavailable.\" \"Failed to Get users' preferences for user id=1. Configuration Database not responding. Please retry again in 3 minutes.\" \u901a\u8fc7\u8bfb\u53d6\u7b2c\u4e8c\u4e2a\u65e5\u5fd7\u884c\uff0c\u6211\u4eec\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u63a8\u65ad\u51fa\u5e94\u7528\u7a0b\u5e8f\u8bd5\u56fe\u5b8c\u6210\u4ec0\u4e48\u3001\u54ea\u4e2a\u7ec4\u4ef6\u5931\u8d25\uff0c\u4ee5\u53ca\u662f\u5426\u5b58\u5728\u95ee\u9898\u7684\u89e3\u51b3\u65b9\u6848\u3002\u6bcf\u4e2a\u65e5\u5fd7\u884c\u90fd\u5e94\u8be5\u6709\u8db3\u591f\u7684\u4fe1\u606f\uff0c\u8ba9\u60a8\u51c6\u786e\u5730\u7406\u89e3\u53d1\u751f\u4e86\u4ec0\u4e48\u4ee5\u53ca\u5e94\u7528\u7a0b\u5e8f\u5f53\u65f6\u7684\u72b6\u6001\u662f\u4ec0\u4e48\u3002","title":"How - \u63d0\u4f9b\u4e0a\u4e0b\u6587"},{"location":"project/advance/log/#how-_4","text":"\u5c3d\u7ba1\u65e5\u5fd7\u5f02\u5e38\u662f\u65e5\u5fd7\u8bb0\u5f55\u6700\u91cd\u8981\u7684\u529f\u80fd\u4e4b\u4e00\uff0c\u4f46\u8bb8\u591a\u7a0b\u5e8f\u5458\u5c06\u65e5\u5fd7\u8bb0\u5f55\u89c6\u4e3a\u5904\u7406\u5f02\u5e38\u7684\u4e00\u79cd\u65b9\u6cd5\u3002","title":"How - \u8bb0\u5f55\u8b66\u544a\u548c\u5f02\u5e38\u5904\u7406"},{"location":"project/advance/log/#how-_5","text":"\u5927\u591a\u6570 API \u65e5\u5fd7\u8bb0\u5f55\u7cfb\u7edf\u90fd\u80fd\u591f\u521b\u5efa\u81ea\u5b9a\u4e49\u65e5\u5fd7\u89e3\u6790\u5668\u548c\u8fc7\u6ee4\u5668\u3002\u8fd9\u4e9b\u89e3\u6790\u5668\u5141\u8bb8\u6211\u4eec\u4ee5\u66f4\u6709\u7ec4\u7ec7\u7684\u65b9\u5f0f\u5b58\u50a8\u65e5\u5fd7\u6570\u636e\uff0c\u4f7f\u67e5\u8be2\u66f4\u52a0\u5bb9\u6613\u548c\u5feb\u901f\u3002\u6b63\u786e\u7ec4\u7ec7\u7684\u65e5\u5fd7\u6570\u636e\u4e5f\u53ef\u4ee5\u88ab\u63d0\u4f9b\u5230\u65e5\u5fd7\u76d1\u63a7\u548c\u5f02\u5e38\u68c0\u6d4b\u7ba1\u7406\u7cfb\u7edf\u4e2d\uff0c\u4ee5\u4fbf\u4e3b\u52a8\u76d1\u63a7\u7cfb\u7edf\u548c\u9884\u6d4b\u672a\u6765\u4e8b\u4ef6\u3002 \u8fd9\u4e9b\u6280\u672f\u975e\u5e38\u590d\u6742\uff0c\u901a\u8fc7\u57fa\u4e8e\u65f6\u95f4\u5e8f\u5217\u548c\u57fa\u4e8e\u65e5\u5fd7\u6570\u636e\u548c\u5176\u4ed6\u6765\u6e90\u7684\u5b9e\u65f6\u4e8b\u4ef6\u5206\u6790\u7684\u4ea4\u4e92\u5f0f\u4eea\u8868\u677f\u3002","title":"How - \u7f16\u5199\u65e5\u5fd7\u89e3\u6790\u5668\u5e76\u4e3b\u52a8\u76d1\u542c\u65e5\u5fd7"},{"location":"project/advance/log/#_2","text":"","title":"\u65e5\u5fd7\u6846\u67b6"},{"location":"project/advance/log/#log4j2","text":"Log4j 2 \u662f Log4j \u65e5\u5fd7\u6846\u67b6\u7684\u65b0\u6539\u8fdb\u7248\u672c\u3002\u6700\u5f15\u4eba\u6ce8\u76ee\u7684\u6539\u8fdb\u662f\"\u5f02\u6b65\u65e5\u5fd7\u8bb0\u5f55\"\u3002 Log4j 2 \u4f9d\u8d56: <dependency> <groupId> org.apache.logging.log4j </groupId> <artifactId> log4j-api </artifactId> <version> 2.6.1 </version> </dependency> <dependency> <groupId> org.apache.logging.log4j </groupId> <artifactId> log4j-core </artifactId> <version> 2.6.1 </version> </dependency> \u914d\u7f6e Log4j 2 \u57fa\u4e8e\u4e3b\u914d\u7f6e log4j2.xml \u6587\u4ef6\u3002\u9996\u5148\u8981\u914d\u7f6e\u7684\u662f appender \u3002 \u8fd9\u4e9b\u51b3\u5b9a\u4e86\u65e5\u5fd7\u6d88\u606f\u5c06\u88ab\u8def\u7531\u5230\u54ea\u91cc\u3002\u76ee\u7684\u5730\u53ef\u4ee5\u662f\"\u63a7\u5236\u53f0\"\u3001\"\u6587\u4ef6\"\u3001\"\u5957\u63a5\u5b57\"\u7b49\u3002 Log4j 2 \u6709\u8bb8\u591a\u7528\u4e8e\u4e0d\u540c\u76ee\u7684\u7684 eppender \uff0c\u53ef\u4ee5\u5728 Log4j 2 \u5b98\u65b9\u7f51\u7ad9\u4e0a\u627e\u5230\u66f4\u591a\u4fe1\u606f\u3002 log4j2.xml\uff1a <Configuration status=\"debug\" name=\"baeldung\" packages=\"\"> <Appenders> <Console name=\"stdout\" target=\"SYSTEM_OUT\"> <PatternLayout pattern=\"%d{yyyy-MM-dd HH:mm:ss} %p %m%n\"/> </Console> </Appenders> </Configuration> \u60a8\u53ef\u4ee5\u4e3a\u6bcf\u4e2a appender \u8bbe\u7f6e\u4e00\u4e2a\u540d\u79f0\uff0c\u4f8b\u5982\u4f7f\u7528 \u5176\u4ed6\u63a7\u5236\u53f0\u540d\u79f0 \u800c\u4e0d\u662f \"stdout\"\u3002 \u6ce8\u610f PatternLayout \u5143\u7d20\u2014\u2014\u8fd9\u51b3\u5b9a\u4e86\u6d88\u606f\u5e94\u8be5\u662f\u4ec0\u4e48\u6837\u5b50\u3002\u5728\u6211\u4eec\u7684\u793a\u4f8b\u4e2d\uff0c\u6a21\u5f0f\u662f\u57fa\u4e8e\u6a21\u5f0f\u53c2\u6570\u8bbe\u7f6e\u7684\uff0c\u5176\u4e2d % d \u51b3\u5b9a\u65e5\u671f\u6a21\u5f0f, % p \u51b3\u5b9a\u65e5\u5fd7\u7ea7\u522b\u7684\u8f93\u51fa, % m \u51b3\u5b9a\u65e5\u5fd7\u6d88\u606f\u7684\u8f93\u51fa, % n \u51b3\u5b9a\u65b0\u7684\u884c\u7b26\u53f7\u3002\u4f60\u53ef\u4ee5\u5728 Log4j 2 \u5b98\u65b9\u9875\u9762\u4e0a\u627e\u5230\u66f4\u591a\u5173\u4e8e \u65e5\u5fd7\u6a21\u5f0f\u7684\u4fe1\u606f\u3002 \u6700\u540e\uff0c \u542f\u7528\u4e00\u4e2a(\u6216\u591a\u4e2a) appender \uff0c\u5c06\u4ed6\u6dfb\u52a0\u5230 <root> \u4e2d <Root level= \"error\" > <AppenderRef ref= \"STDOUT\" /> </Root>","title":"log4j2"},{"location":"project/advance/log/#_3","text":"\u6709\u65f6\u5019\u4f60\u9700\u8981\u5728\u6587\u4ef6\u4e2d\u4f7f\u7528\u65e5\u5fd7\u8bb0\u5f55\uff0c\u6240\u4ee5\u6211\u4eec\u4f1a\u5728\u914d\u7f6e\u4e2d\u6dfb\u52a0 name = \"f-out\" \u65e5\u5fd7\u8bb0\u5f55\u5668: <Appenders> <File name= \"fout\" fileName= \"baeldung.log\" append= \"true\" > <PatternLayout> <Pattern> %d{yyyy-MM-dd HH:mm:ss} %-5p %m%nw </Pattern> </PatternLayout> </File> </Appenders> fileName - \u914d\u7f6e\u65e5\u5fd7\u6587\u4ef6\u7684\u540d\u79f0\uff1b append - \u6b64\u53c2\u6570\u7684\u9ed8\u8ba4\u503c\u4e3a true \uff0c\u8fd9\u610f\u5473\u7740\u9ed8\u8ba4\u60c5\u51b5\u4e0b File appender \u5c06\u9644\u52a0\u5230\u73b0\u6709\u6587\u4ef6\uff0c\u800c\u4e0d\u662f\u622a\u65ad\u8be5\u6587\u4ef6\u3002 \u542f\u7528 \u6587\u4ef6\u65e5\u5fd7\u8bb0\u5f55 <Root level= \"INFO\" > <AppenderRef ref= \"stdout\" /> <AppenderRef ref= \"fout\" /> </Root>","title":"\u6587\u4ef6\u8f93\u51fa"},{"location":"project/advance/log/#_4","text":"\u5982\u679c\u60f3\u8ba9 Log4j 2\u53d8\u5f97\u5f02\u6b65\uff0c\u9700\u8981\u5728 pom.xml \u4e2d\u6dfb\u52a0 LMAX disruptor \u5e93\u3002LMAX \u5e72\u6270\u5668\u662f\u4e00\u4e2a\u65e0\u9501\u7684\u7ebf\u7a0b\u95f4\u901a\u4fe1\u5e93\u3002 <dependency> <groupId> com.lmax </groupId> <artifactId> disruptor </artifactId> <version> 3.3.4 </version> </dependency> \u5982\u679c\u60f3\u4f7f\u7528 LMAX disruptor\uff0c\u9700\u8981\u5728\u7684\u914d\u7f6e\u4e2d\u4f7f\u7528 < asyncroot > \u800c\u4e0d\u662f < root > \u3002 <AsyncRoot level= \"DEBUG\" > <AppenderRef ref= \"stdout\" /> <AppenderRef ref= \"fout\" /> </AsyncRoot> Note \u6216\u8005\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7\u5c06\u7cfb\u7edf\u5c5e\u6027 Log4jContextSelector \u8bbe\u7f6e\u4e3a org.apache.logging.log4j.core.async.AsyncLoggerContextSelector \u6765\u542f\u7528\u5f02\u6b65\u65e5\u5fd7\u8bb0\u5f55\u3002","title":"\u5f02\u6b65\u65e5\u5fd7"},{"location":"project/advance/log/#logback","text":"Logback \u662f Log4j \u7684\u6539\u8fdb\u7248\uff0c\u7531\u540c\u4e00\u4e2a\u5f00\u53d1\u8005\u5f00\u53d1\u3002 \u4e0e Log4j \u76f8\u6bd4\uff0cLogback \u6709\u66f4\u591a\u7684\u7279\u6027\uff0c\u5176\u4e2d\u8bb8\u591a\u7279\u6027\u4e5f\u88ab\u5f15\u5165\u5230 Log4j 2\u4e2dd <dependency> <groupId> ch.qos.logback </groupId> <artifactId> logback-classic </artifactId> <version> 1.2.6 </version> </dependency> \u8fd9\u4e2a\u4f9d\u8d56\u9879\u5c06\u4f20\u9012\u6027\u5730\u5f15\u5165\u53e6\u5916\u4e24\u4e2a\u4f9d\u8d56\u9879: logback-core \u548c slf4j-api \u914d\u7f6e: <configuration> # Console appender <appender name= \"stdout\" class= \"ch.qos.logback.core.ConsoleAppender\" > <layout class= \"ch.qos.logback.classic.PatternLayout\" > # Pattern of log message for console appender <Pattern> %d{yyyy-MM-dd HH:mm:ss} %-5p %m%n </Pattern> </layout> </appender> # File appender <appender name= \"fout\" class= \"ch.qos.logback.core.FileAppender\" > <file> baeldung.log </file> <append> false </append> <encoder> # Pattern of log message for file appender <pattern> %d{yyyy-MM-dd HH:mm:ss} %-5p %m%n </pattern> </encoder> </appender> # Override log level for specified package <logger name= \"com.baeldung.log4j\" level= \"TRACE\" /> <root level= \"INFO\" > <appender-ref ref= \"stdout\" /> <appender-ref ref= \"fout\" /> </root> </configuration> SLF4J \u4e3a\u5927\u591a\u6570 Java \u65e5\u5fd7\u6846\u67b6\u63d0\u4f9b\u4e86\u4e00\u4e2a\u516c\u5171\u63a5\u53e3\u548c\u62bd\u8c61\u3002\u5b83\u5145\u5f53 facade\uff0c\u5e76\u63d0\u4f9b\u6807\u51c6\u5316\u7684 API \u6765\u8bbf\u95ee\u65e5\u5fd7\u6846\u67b6\u7684\u5e95\u5c42\u7279\u6027\u3002 Logback \u4f7f\u7528 SLF4J \u4f5c\u4e3a\u672c\u5730 API \u5b9e\u73b0\u5176\u529f\u80fd: import org.slf4j.Logger ; import org.slf4j.LoggerFactory ; public class Log4jExample { private static Logger logger = LoggerFactory . getLogger ( Log4jExample . class ); public static void main ( String [] args ) { logger . debug ( \"Debug log message\" ); logger . info ( \"Info log message\" ); logger . error ( \"Error log message\" ); } }","title":"Logback"},{"location":"project/advance/setting/","text":"\u6982\u8981 \u00b6 \u8981\u70b9 \u00b6 \u4ecb\u7ecd\u5404\u79cd\u914d\u7f6e\u65b9\u5f0f\u7684\u4f18\u5148\u7ea7\u3002 \u4ecb\u7ecd\u5404\u79cd\u5916\u90e8\u5316\u914d\u7f6e\u65b9\u5f0f\u3002 \u4ecb\u7ecdyaml\u7684\u683c\u5f0f\u53ca\u539f\u7406\u3002 \u4ecb\u7ecd\u5982\u4f55\u7ed1\u5b9a\u5e76\u6d4b\u8bd5\u7c7b\u578b\u5b89\u5168\u7684\u5c5e\u6027\u914d\u7f6e\u3002 \u4ecb\u7ecd @ConfigurationProperties \u4e0e @Value \u7684\u533a\u522b\u3002 \u4f18\u5148\u7ea7 \u00b6 Spring Boot \u4f7f\u7528\u4e00\u79cd\u975e\u5e38\u7279\u6b8a\u7684 PropertySource \u987a\u5e8f\uff0c\u5176\u8bbe\u8ba1\u76ee\u7684\u662f\u5141\u8bb8\u975e\u5e38\u7b26\u5408\u60c5\u7406\u7684\u8986\u76d6\u91cd\u5199\u503c\u3002 \u4e00\u822c\u6309\u7167\u4ee5\u4e0b\u987a\u5e8f\u8fdb\u884c\u52a0\u8f7d: \u9ed8\u8ba4\u5c5e\u6027\uff0c\u901a\u8fc7 SpringApplication.setDefaultProperties \u6307\u5b9a\uff1b @Configuration \u7c7b\u4e0a\u6ce8\u89e3\u7684 @PropertySource \u914d\u7f6e; \u914d\u7f6e\u6587\u4ef6, application.properties \uff0c application.yml \u6587\u4ef6\u7b49\uff1b jar \u5305\u5185 \u7684 Application properties , \u4f8b\u5982 application.properties \uff0c application.yml \u7b49\uff1b jar \u5305\u5185 \u901a\u8fc7 profile \u6307\u5b9a\u7684 \u5c5e\u6027\uff0c \u4f8b\u5982 application-{profile}.properties ; jar \u5305\u5916 \u7684 Application properties \u6587\u4ef6\uff0c application.properties \u4ee5\u53ca yaml \u7684\u5404\u79cd\u53d8\u4f53\uff1b jar \u5305\u5916 \u901a\u8fc7 profile \u6307\u5b9a\u7684 \u5c5e\u6027\uff0c \u4f8b\u5982 application-{profile}.properties \u4ee5\u53ca yaml \u7684\u5404\u79cd\u53d8\u4f53\u3002 \u901a\u8fc7 RandomValuePropertySource \u548c\u914d\u7f6e random.* \u751f\u6210\u7684\u968f\u673a\u5c5e\u6027\u503c\uff0c\u652f\u6301 int , long \uff0c string , uuid ; \u64cd\u4f5c\u7cfb\u7edf\u73af\u5883\u53d8\u91cf\uff1b java \u7cfb\u7edf\u5c5e\u6027 \uff0c\u53ef\u901a\u8fc7 System.getProperties() \u83b7\u53d6\uff1b \u6765\u81ea java:comp/env \u7684 JNDI \u5c5e\u6027\uff1b ServletContext \u521d\u59cb\u5316\u53c2\u6570\uff1b ServletConfig \u521d\u59cb\u5316\u53c2\u6570\uff1b \u6765\u81ea SPRING_APPLICATION_JSON \u6307\u5b9a\u7684\u5c5e\u6027\uff1b \u547d\u4ee4\u884c\u53c2\u6570\uff1b \u6d4b\u8bd5\u4e2d\u7684 @SpringBootTest \u6ce8\u89e3\u4e2d\u7684 properties \u5c5e\u6027\u503c \u3002 \u6d4b\u8bd5\u4e2d\u7684 @TestPropertySource \u6ce8\u89e3\uff1b \u5f53 Devtools \u5904\u4e8e\u6d3b\u52a8\u72b6\u6001\u65f6\uff0c\u5728 $HOME/.config/spring-boot \u76ee\u5f55\u4e2d\u7684 Devtools \u5168\u5c40\u8bbe\u7f6e\u5c5e\u6027\u3002 Important \u4ee5\u4e0a\u914d\u7f6e\u987a\u5e8f\u5e76\u975e \u5c5e\u6027\u4f18\u5148\u7ea7\uff0c\u800c\u662f\u52a0\u8f7d\u987a\u5e8f\uff0c\u4e00\u822c\u662f \u540e\u52a0\u8f7d\u8986\u76d6\u524d\u52a0\u8f7d \u5bf9\u4e8e\u9664\u6d4b\u8bd5\u4ee5\u5916\u7684\u5e38\u89c1\u914d\u7f6e\u4f18\u5148\u7ea7\u5982\u4e0b: \u547d\u4ee4\u884c\uff1b SPRING_APPLICATION_JSON ; jar \u5305\u5916\u90e8\u914d\u7f6e\u6587\u4ef6 \u901a\u8fc7 --spring.config.name ,\u4ee5\u53ca --spring.config.location= \u6307\u5b9a\u7684\u914d\u7f6e\u6587\u4ef6\uff1b jar\u5305\u540c\u7ea7\u76ee\u5f55 config \u76ee\u5f55\u4e0b\u7684\u76f4\u63a5\u5b50\u76ee\u5f55\uff0c\u4f8b\u5982 /config/app/application.yml jar \u5305\u540c\u7ea7\u76ee\u5f55\u4e0b\u7684 config \u76ee\u5f55\uff1b \u5f53\u524d\u76ee\u5f55\uff1b \u7c7b\u8def\u5f84\u4e0b\u7684 config \u76ee\u5f55\uff1b \u7c7b\u8def\u5f84\u7684\u6839\u76ee\u5f55\uff1b @PropertySource SpringApplication.setDefaultProperties \u5b57\u6bb5\u9ed8\u8ba4\u914d\u7f6e; \u5e38\u89c1\u914d\u7f6e\u65b9\u5f0f \u00b6 \u5728\u4ee5\u4e0a\u5217\u4e3e\u7684\u591a\u79cd\u914d\u7f6e\u65b9\u5f0f\u4e2d\uff0c\u672c\u7ae0\u8282\u5c06\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u5e38\u89c1\u7684\u51e0\u79cd\u914d\u7f6e\u65b9\u5f0f\u6311\u51fa\u6765\u505a\u5177\u4f53\u8bb2\u89e3\uff1b \u6307\u5b9a\u914d\u7f6e\u6587\u4ef6 \u00b6 \u66f4\u6362\u914d\u7f6e\u6587\u4ef6\u540d\u79f0 \u00b6 \u5982\u679c\u4e0d\u559c\u6b22\u5c06 application \u4f5c\u4e3a\u914d\u7f6e\u6587\u4ef6\u540d\uff0c\u53ef\u4ee5\u901a\u8fc7\u6307\u5b9a\u4e00\u4e2a spring.config.name \u73af\u5883\u5c5e\u6027\u5207\u6362\u5230\u53e6\u4e00\u4e2a\u6587\u4ef6\u540d\u3002 \u4f8b\u5982\uff0c\u8981\u5c06 myproject.properties \u6216\u8005 myproject.yaml \u4f5c\u4e3a\u914d\u7f6e\u6587\u4ef6\uff0c\u53ef\u4ee5\u6309\u7167\u4ee5\u4e0b\u65b9\u5f0f\u8fd0\u884c\u5e94\u7528\u7a0b\u5e8f: $ java -jar myproject.jar --spring.config.name = myproject \u53ef\u9009\u4f4d\u7f6e \u00b6 \u5982\u679c\u9700\u8981\u6307\u5b9a\u4e00\u4e9b\u786e\u5207\u4f4d\u7f6e\u7684\u914d\u7f6e\u6587\u4ef6\u4f5c\u4e3a\u9ed8\u8ba4\u5916\u90e8\u914d\u7f6e\u6587\u4ef6\uff0c\u53ef\u7528\u901a\u8fc7\u4f7f\u7528 spring.config.location \u6765\u6307\u5b9a\u3002 \u8be5\u5c5e\u6027\u53ef\u4ee5\u63a5\u53d7\u591a\u4e2a location\u3002 $ java -jar myproject.jar --spring.config.location = \\ optional:classpath:/default.properties, \\ optional:classpath:/override.properties Caution spring.config.name , spring.config.location , spring.config.additional-location \u7684\u4f18\u5148\u7ea7\u5f80\u5f80\u6bd4\u8f83\u9ad8\uff0c\u56e0\u6b64\u4ed6\u4eec\u7ecf\u5e38\u88ab\u5b9a\u4e49\u5230 \u73af\u5883\u53d8\u91cf\u4e2d\uff0c\u4f8b\u5982 \u64cd\u4f5c\u7cfb\u7edf\u73af\u5883\u53d8\u91cf\uff0c\u7cfb\u7edf\u5c5e\u6027\uff0c\u547d\u4ee4\u884c\u53c2\u6570\u7b49\u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5f53\u6307\u5b9a\u7684\u914d\u7f6e\u6570\u636e\u4f4d\u7f6e\u4e0d\u5b58\u5728\u65f6\uff0cSpring Boot \u4f1a\u629b\u51fa\u4e00\u4e2a ConfigDataLocationNotFoundException \u5e76\u4e14\u4f60\u7684\u5e94\u7528\u7a0b\u5e8f\u4e0d\u4f1a\u542f\u52a8\u3002 \u5f53\u7136\u5982\u679c\u6709\u591a\u4e2a\u53ef\u9009\u4f4d\u7f6e\uff0c\u800c\u6709\u4e9b\u4f4d\u7f6e\u53ef\u80fd\u4e0d\u5b58\u5728\u65f6\uff0c\u53ef\u4ee5\u7ed3\u5408 optional: \u4f7f\u7528\u3002 Note \u5982\u679c\u60f3\u5ffd\u7565\u6240\u6709 ConfigDataLocationNotFoundExceptions \u5e76\u7ee7\u7eed\u542f\u52a8\uff0c\u53ef\u4ee5\u4f7f\u7528 spring.config.on-not-found=ignore \u901a\u914d\u7b26\u4f4d\u7f6e \u00b6 \u901a\u914d\u7b26\u4f4d\u7f6e\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e2a\u4f4d\u7f6e\u63a5\u53d7\u591a\u4e2a\u6587\u4ef6\u3002\u8fd9\u4e00\u822c\u5728\u591a\u914d\u7f6e\u5c5e\u6027\u6765\u6e90\u65f6\u8d39\u7528\u6709\u7528\u3002\u4f8b\u5982k8s\u3002 \u4f8b\u5982\u5e94\u7528\u6709 redis \u914d\u7f6e\u548cmysql \u914d\u7f6e\uff0c\u800c\u6211\u4eec\u5e0c\u671b\u5c06\u4ed6\u4eec\u5206\u5f00\u914d\u7f6e\uff0c\u540c\u65f6\u8981\u6c42\u4ed6\u4eec\u5b58\u5728\u4e8e\u4e00\u4e2a application.properties \u6587\u4ef6\u4e2d\u3002\u8fd9\u53ef\u80fd\u5bfc\u81f4\u4ed6\u4eec\u653e\u5728\u4e0d\u540c\u7684\u4f4d\u7f6e\u3002\u4f8b\u5982 /config/redis/application.properties \u548c /config/mysql/application.properties . \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u901a\u914d\u7b26\u4f4d\u7f6e config/*/ , \u5c06\u4f1a\u4f7f\u4e24\u4e2a\u6587\u4ef6\u90fd\u88ab\u5904\u7406\u3002 Caution \u901a\u914d\u7b26\u4f4d\u7f6e\u53ea\u80fd\u5305\u542b\u4e00\u4e2a * \u548c\u4ee5 */ \u7ed3\u5c3e\u7684\u76ee\u5f55\u4f4d\u7f6e\u6216 */<filename> \u7684\u6587\u4ef6\u4f4d\u7f6e\u3002\u5e26\u901a\u914d\u7b26\u7684\u4f4d\u7f6e\u6839\u636e\u6587\u4ef6\u540d\u7684\u7edd\u5bf9\u8def\u5f84\u6309\u5b57\u6bcd\u987a\u5e8f\u6392\u5e8f\u3002 Tip \u901a\u914d\u7b26\u4f4d\u7f6e\u53ea\u80fd\u7528\u4e8e\u5916\u90e8\u6587\u4ef6\u914d\u7f6e\u3002\u4e0d\u80fd\u5728\u7c7b\u8def\u5f84\u4e2d\u4f7f\u7528\u3002 \u6307\u5b9a profile \u00b6 \u9664\u4e86 application \u6587\u4ef6\uff0cSpring Boot \u8fd8\u5c06\u5c1d\u8bd5\u4f7f\u7528\u547d\u540d\u7ea6\u5b9a\u52a0\u8f7d\u7279\u5b9a\u4e8e\u914d\u7f6e\u6587\u4ef6\u7684\u6587\u4ef6 application-{profile} \u3002\u4f8b\u5982\uff0c\u5982\u679c\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u6fc0\u6d3b\u4e86\u4e00\u4e2a\u540d\u4e3aprod\u5e76\u4f7f\u7528 YAML \u6587\u4ef6\u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u90a3\u4e48 application.yml \u548c application-prod.yml \u5747\u4f1a\u88ab\u52a0\u8f7d\uff0cprofile \u6587\u4ef6\u4e2d\u7684\u5c5e\u6027\u4f18\u5148\u7ea7\u9ad8\u4e8e\u9ed8\u8ba4\u3002 \u5982\u679c\u6fc0\u6d3b\u4e86\u591a\u4e2a\u914d\u7f6e\u6587\u4ef6\uff0c \u91c7\u7528 \u6700\u540e\u80dc\u51fa \u7b56\u7565\u3002 \u4f8b\u5982\u6fc0\u6d3b spring.profiles.active = prod,live ,\u90a3\u4e48\u5bf9\u5e94\u540c\u4e00\u4e2a\u540d\u79f0\u7684\u5c5e\u6027\uff0c\u5c06\u91c7\u7528 live profile \u7684\u914d\u7f6e\u3002 Note \u6700\u540e\u83b7\u80dc\u7b56\u7565 \u9002\u7528\u4e8e \"location group\" (\u591a\u4e2a\u914d\u7f6e\u6587\u4ef6\u76ee\u5f55\u4ee5 ; \u9694\u5f00)\uff0c\u4ee5 , \u9694\u5f00\u7684\u591a\u4e2a\u914d\u7f6e\u6587\u4ef6\u91c7\u7528 \u6309\u7167\u76ee\u5f55\u4f18\u5148\u7ea7\u52a0\u8f7d\u3002 \u5bfc\u5165\u989d\u5916\u6570\u636e \u00b6 \u5e94\u7528\u7a0b\u5e8f\u5c5e\u6027\u53ef\u4ee5\u4f7f\u7528 spring.config.import \u5c5e\u6027\u4ece\u5176\u4ed6\u4f4d\u7f6e\u5bfc\u5165\u989d\u5916\u7684\u7684\u8865\u5145\u914d\u7f6e\u6570\u636e\u3002\u5bfc\u5165\u5728\u88ab\u52a0\u8f7d\u65f6\u88ab\u5904\u7406\uff0c\u5e76\u4f5c\u4e3a\u9644\u52a0\u6587\u6863\u5904\u7406\uff0c\u63d2\u5165\u5230\u9ed8\u8ba4\u7684\u6587\u6863\u4e4b\u4e0b\u3002 spring.application.name = myapp spring.config.import = optional:file:./dev.properties \u4e0a\u9762\u7684\u914d\u7f6e\u5c06\u89e6\u53d1 dev.properties \u6587\u4ef6\u4e2d\u7684\u5c5e\u6027\u5bfc\u5165\uff08\u5982\u679c\u5b58\u5728\u8fd9\u6837\u7684\u6587\u4ef6\uff09\u3002\u5bfc\u5165\u7684\u503c\u4f18\u5148\u4e8e\u672c\u6587\u6863\u5df2\u914d\u7f6e\u7684\u5c5e\u6027\u3002\u5728\u4e0a\u9762\u7684\u793a\u4f8b\u4e2d\uff0cdev.properties\u53ef\u4ee5\u91cd\u65b0\u5b9a\u4e49spring.application.name\u4e3a\u4e0d\u540c\u7684\u503c\u3002 \u7cfb\u7edf\u73af\u5883\u53d8\u91cf \u00b6 \u5728 Windows \u4e0a\uff0c\u5982\u679c\u6dfb\u52a0\u65b0\u7684 OS \u73af\u5883\u53d8\u91cf\uff0c\u5219\u5fc5\u987b\u91cd\u65b0\u542f\u52a8\u8fdb\u7a0b(Java \u8fdb\u7a0b\u3001 Intellij IDEA)\u624d\u80fd\u8bfb\u53d6\u65b0\u7684 OS \u73af\u5883\u53d8\u91cf\u3002 Note \u4efb\u4f55\u5176\u4ed6 Windows \u53ef\u6267\u884c\u3001\u7cfb\u7edf\u7ea7\u522b\u5bf9\u73af\u5883\u53d8\u91cf\u7684\u66f4\u6539\u53ea\u6709\u5728\u8fdb\u7a0b\u91cd\u65b0\u542f\u52a8\u65f6\u624d\u4f1a\u4f20\u64ad\u5230\u8fdb\u7a0b\u3002 \u5728 Linux \u6216 Windows \u4e0a\u6dfb\u52a0\u7528\u6237\u53d8\u91cf\u6216\u7cfb\u7edf\u53d8\u91cf: msg=hello \u6709\u4ee5\u4e0b\u51e0\u79cd\u65b9\u5f0f\u53ef\u4ee5\u6765\u8bfb\u53d6\uff1a \u901a\u8fc7\u7cfb\u7edf\u7c7b\u8bfb\u53d6 System . getenv ( \"msg\" ) \u901a\u8fc7 Environment \u5bf9\u8c61 @Autowired private Environment environment ; environment . getProperty ( \"msg\" ) \u6ce8\u5165 spring \u73af\u5883\u53d8\u91cf @Value ( \"${msg}\" ) private String msg ; \u5728 application.properties \u6587\u4ef6\u4e2d\u901a\u8fc7\u73af\u5883\u53d8\u91cf\uff1b msg = ${msg} JSON Application Properties \u00b6 \u73af\u5883\u53d8\u91cf\u548c\u7cfb\u7edf\u5c5e\u6027\u901a\u5e38\u6709\u4e00\u4e9b\u9650\u5236\uff0c\u8fd9\u610f\u5473\u7740\u67d0\u4e9b\u5c5e\u6027\u540d\u4e0d\u80fd\u4f7f\u7528,\u4f8b\u5982\u67d0\u4e9b\u6388\u6743\uff0c\u5546\u4e1a\u6027\u8d28\u7684\u9650\u5236\u7b49\u3002\u4e3a\u4e86\u5e2e\u52a9\u5b9e\u73b0\u8fd9\u4e00\u70b9\uff0cspringboot \u5141\u8bb8\u60a8\u5c06\u4e00\u4e2a\u5c5e\u6027\u5757\u7f16\u7801\u4e3a\u5355\u4e2a JSON \u7ed3\u6784\u3002 SPRING_APPLICATION_JSON = '{\"my\":{\"name\":\"test\"}}' java -jar myapp.jar \u5728\u4e0a\u9762\u7684\u793a\u4f8b\u4e2d\uff0c\u53ef\u4ee5\u4ece Spring Environment \u4e2d\u5f97\u5230 my.name = test \u3002 \u540c\u6837\u7684 JSON \u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u7cfb\u7edf\u5c5e\u6027\u63d0\u4f9b: $ java -Dspring.application.json = '{\"my\":{\"name\":\"test\"}}' -jar myapp.jar \u6216\u8005 \u901a\u8fc7 \u547d\u4ee4\u884c\u53c2\u6570\u6765\u5b9e\u73b0: $ java -jar myapp.jar --spring.application.json = '{\"my\":{\"name\":\"test\"}}' \u5f53\u7136\u4f7f\u7528 JNDI \u53d8\u91cf\u4e5f\u53ef\u4ee5\u5b9e\u73b0 java:comp/env/spring.application.json \u7cfb\u7edf\u5c5e\u6027 \u00b6 java \u5e73\u53f0\u672c\u8eab\u4f7f\u7528\u4e00\u4e2a Properties \u5bf9\u8c61\u6765\u7ef4\u62a4\u81ea\u5df1\u7684\u914d\u7f6e\u3002 System \u7c7b\u7ef4\u62a4\u4e00\u4e2a\u63cf\u8ff0\u5f53\u524d\u5de5\u4f5c\u73af\u5883\u914d\u7f6e\u7684 Properties \u5bf9\u8c61\u3002\u7cfb\u7edf\u5c5e\u6027\u5305\u62ec\u6709\u5173 \u5f53\u524d\u7528\u6237\u3001 Java \u8fd0\u884c\u65f6\u7684\u5f53\u524d\u7248\u672c\u4ee5\u53ca\u7528\u4e8e\u5206\u9694\u6587\u4ef6\u8def\u5f84\u540d\u79f0\u7684\u7ec4\u4ef6\u7684\u5b57\u7b26\u7684\u4fe1\u606f\u7b49\u3002 \u5e38\u89c1\u91cd\u8981\u7684\u7cfb\u7edf\u5c5e\u6027\u6709: \u94a5\u5319 \u610f\u4e49 file.separator \u5206\u9694\u6587\u4ef6\u8def\u5f84\u7ec4\u4ef6\u7684\u5b57\u7b26\u3002\u8fd9\u662f/UNIX \u4e0a\u7684 \" \\\" \u548c Windows \u4e0a\u7684 \" \"\u3002 java.class.path \u7528\u4e8e\u67e5\u627e\u5305\u542b\u7c7b\u6587\u4ef6\u7684\u76ee\u5f55\u548c JAR \u6863\u6848\u7684\u8def\u5f84\u3002\u7c7b\u8def\u5f84\u7684\u5143\u7d20\u7531path.separator\u5c5e\u6027\u4e2d\u6307\u5b9a\u7684\u5e73\u53f0\u7279\u5b9a\u5b57\u7b26\u5206\u9694\u3002 java.home Java \u8fd0\u884c\u65f6\u73af\u5883 (JRE) \u7684\u5b89\u88c5\u76ee\u5f55 java.vendor JRE \u4f9b\u5e94\u5546\u540d\u79f0 java.vendor.url JRE \u4f9b\u5e94\u5546 URL java.version JRE \u7248\u672c\u53f7 line.separator \u64cd\u4f5c\u7cfb\u7edf\u7528\u4e8e\u5206\u9694\u6587\u672c\u6587\u4ef6\u4e2d\u7684\u884c\u7684\u5e8f\u5217 os.arch \u64cd\u4f5c\u7cfb\u7edf\u67b6\u6784 os.name \u64cd\u4f5c\u7cfb\u7edf\u540d\u79f0 os.version \u64cd\u4f5c\u7cfb\u7edf\u7248\u672c path.separator \u8def\u5f84\u5206\u9694\u7b26\u7528\u4e8ejava.class.path user.dir \u7528\u6237\u5de5\u4f5c\u76ee\u5f55 user.home \u7528\u6237\u4e3b\u76ee\u5f55 user.name \u7528\u6237\u5e10\u6237\u540d\u79f0 \u8bfb\u53d6 \u00b6 System \u7c7b\u6709\u4e24\u4e2a\u7528\u4e8e\u8bfb\u53d6\u7cfb\u7edf\u5c5e\u6027\u7684\u65b9\u6cd5: getProperty \u548c getProperties \u3002 System \u7c7b\u6709\u4e24\u4e2a\u4e0d\u540c\u7248\u672c\u7684 getProperty \u3002\u4e24\u8005\u90fd\u68c0\u7d22\u53c2\u6570\u5217\u8868\u4e2d\u547d\u540d\u7684\u5c5e\u6027\u7684\u503c\u3002\u4e24\u4e2a getProperty \u65b9\u6cd5\u4e2d\u6bd4\u8f83\u7b80\u5355\u7684\u4e00\u4e2a\u53ea\u6709\u4e00\u4e2a\u53c2\u6570\uff0c\u4e00\u4e2a\u5c5e\u6027\u952e\u4f8b\u5982\uff0c\u8981\u83b7\u5f97 path.separator \u7684\u503c\uff0c\u4f7f\u7528\u4ee5\u4e0b\u8bed\u53e5: // \u8fd4\u56de\u7cfb\u7edf\u53d8\u91cf\uff0c\u5982\u679c\u6ca1\u6709\u8fd4\u56denull System . getProperty ( \"path.separator\" ); // \u8fd4\u56de\u7cfb\u7edf\u53d8\u91cf\uff0c\u5982\u679c\u6ca1\u6709\u5219\u8fd4\u56de \"default\" \u9ed8\u8ba4\u503c System . getProperty ( \"path\" , \"default\" ); System \u7c7b\u63d0\u4f9b\u7684\u8bbf\u95ee\u5c5e\u6027\u503c\u7684\u6700\u540e\u4e00\u4e2a\u65b9\u6cd5\u662f getProperties \u65b9\u6cd5\uff0c\u5b83\u8fd4\u56de\u4e00\u4e2a Properties \u5bf9\u8c61\u3002\u6b64\u5bf9\u8c61\u5305\u542b\u4e00\u7ec4\u5b8c\u6574\u7684\u7cfb\u7edf\u5c5e\u6027\u5b9a\u4e49\u3002 \u5199\u5165\u66f4\u65b0 \u00b6 \u82e5\u8981\u4fee\u6539\u73b0\u6709\u7684\u7cfb\u7edf\u5c5e\u6027\u96c6\uff0c\u8bf7\u4f7f\u7528 System.setProperties . Note setProperties \u65b9\u6cd5\u66f4\u6539\u5f53\u524d\u8fd0\u884c\u7684\u5e94\u7528\u7a0b\u5e8f\u7684\u7cfb\u7edf\u5c5e\u6027\u3002\u8fd9\u4e9b\u53d8\u5316\u5e76\u4e0d\u662f\u6301\u4e45\u7684\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u66f4\u6539\u5e94\u7528\u7a0b\u5e8f\u4e2d\u7684\u7cfb\u7edf\u5c5e\u6027\u4e0d\u4f1a\u5f71\u54cd\u5c06\u6765\u5bf9\u8fd9\u4e2a\u5e94\u7528\u7a0b\u5e8f\u6216\u4efb\u4f55\u5176\u4ed6\u5e94\u7528\u7a0b\u5e8f\u7684 Java \u89e3\u91ca\u5668\u8c03\u7528\u3002\u8fd0\u884c\u65f6\u7cfb\u7edf\u5728\u6bcf\u6b21\u542f\u52a8\u65f6\u91cd\u65b0\u521d\u59cb\u5316\u7cfb\u7edf\u5c5e\u6027\u3002\u5982\u679c\u5bf9\u7cfb\u7edf\u5c5e\u6027\u7684\u66f4\u6539\u662f\u6301\u4e45\u7684\uff0c\u90a3\u4e48\u5e94\u7528\u7a0b\u5e8f\u5fc5\u987b\u5728\u9000\u51fa\u524d\u5c06\u503c\u5199\u5165\u67d0\u4e2a\u6587\u4ef6\uff0c\u5e76\u5728\u542f\u52a8\u65f6\u518d\u6b21\u8bfb\u5165\u8fd9\u4e9b\u503c\u3002 spring boot \u81ea\u52a8\u914d\u7f6e\u539f\u7406 \u00b6 \u57fa\u4e8e Spring \u7684\u5e94\u7528\u7a0b\u5e8f\u6709\u5f88\u591a\u914d\u7f6e\u3002 \u5f53\u6211\u4eec\u4f7f\u7528 Spring MVC \u65f6\uff0c\u6211\u4eec\u9700\u8981\u914d\u7f6e\u7ec4\u4ef6\u626b\u63cf\u3001Dispatcher Servlet\u3001\u89c6\u56fe\u89e3\u6790\u5668\u3001Web jars\uff08\u7528\u4e8e\u4f20\u9012\u9759\u6001\u5185\u5bb9\uff09\u7b49\u7b49\u3002 \u5f53\u6211\u4eec\u4f7f\u7528 Hibernate/JPA \u65f6\uff0c\u6211\u4eec\u9700\u8981\u914d\u7f6e\u4e00\u4e2a\u6570\u636e\u6e90\u3001\u4e00\u4e2a\u5b9e\u4f53\u7ba1\u7406\u5668\u5de5\u5382\u3001\u4e00\u4e2a\u4e8b\u52a1\u7ba1\u7406\u5668\u7b49\u7b49\u3002 ... Question \u5982\u679c Hibernate jar \u5728\u7c7b\u8def\u5f84\u4e0a\uff0c\u5982\u4f55\u81ea\u52a8\u914d\u7f6e\u6570\u636e\u6e90\uff1f \u5982\u679c Spring MVC jar \u5728\u7c7b\u8def\u5f84\u4e0a\uff0c\u5982\u4f55\u81ea\u52a8\u914d\u7f6e Dispatcher Servlet\uff1f \u56e0\u4e3a\u6709\u4e9b\u4e1c\u897f\u662f\u76f8\u540c\u7684\uff0c\u751a\u81f3\u4e8e\u6709\u7684bean \u53ef\u4ee5\u4f7f\u7528 \u590d\u5236-\u7c98\u8d34 \u6765\u641e\u5b9a\u3002 \u6846\u67b6b\u7684\u5df2\u6709\u7684\u914d\u7f6e\u5b8c\u5168\u53ef\u4ee5\u5728a\u5e94\u7528\u6846\u67b6\u4e0a\u5f88\u597d\u7684\u4f7f\u7528\u3002\u57fa\u4e8e\u6b64\uff0cspring boot \u63d0\u4f9b\u6700\u57fa\u7840\u7684\u901a\u7528\u914d\u7f6e\uff0c\u800c\u8fd9\u4e9b\u914d\u7f6e\u53ef\u4ee5\u88ab\u5f88\u65b9\u4fbf\u7684\u88ab\u5ba2\u6237\u5b9a\u5236\u8986\u76d6\u3002\u800c\u8fd9\u901a\u5e38\u88ab\u79f0\u4f5c \"\u81ea\u52a8\u914d\u7f6e\" \u521d\u6b65\u4e86\u89e3 \u00b6 \u5f53\u6211\u4eec\u542f\u52a8\u4e00\u4e2a spring boot web \u7a0b\u5e8f\uff0c\u5f80\u5f80\u53ef\u4ee5\u770b\u5230\u4e00\u4e0b\u8f93\u51fa: Mapping servlet: 'dispatcherServlet' to [ / ] Mapped \"{[/error]}\" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error ( javax.servlet.http.HttpServletRequest ) Mapped URL path [ /webjars/** ] onto handler of type [ class org.springframework.web.servlet.resource.ResourceHttpRequestHandler ] \u4e0a\u9762\u7684\u65e5\u5fd7\u8bed\u53e5\u662f Spring Boot Auto Configuration \u5f88\u597d\u7684\u5b9e\u4f8b\u3002 \u4e00\u65e6\u6211\u4eec\u5728\u9879\u76ee\u4e2d\u6dfb\u52a0\u4e86 Spring Boot Starter Web \u4f5c\u4e3a\u4f9d\u8d56\u9879\uff0c Spring Boot Autoconfiguration \u5c31\u4f1a\u53d1\u73b0 Spring MVC \u4f4d\u4e8e\u7c7b\u8def\u5f84\u4e2d\u3002\u5b83\u81ea\u52a8\u914d\u7f6e dispatcherServlet\uff0c\u4e00\u4e2a\u9ed8\u8ba4\u7684\u9519\u8bef\u9875\u9762\u548c webjars\u3002 \u5982\u679c\u6dfb\u52a0 Spring Boot Data JPA Starter \uff0c\u60a8\u5c06\u770b\u5230 Spring Boot Auto Configuration \u81ea\u52a8\u914d\u7f6e\u4e00\u4e2a\u6570\u636e\u6e90\u548c\u4e00\u4e2a\u5b9e\u4f53\u7ba1\u7406\u5668\u3002 \u5982\u4f55\u5b9e\u73b0 \u00b6 \u6240\u6709\u7684\u81ea\u52a8\u914d\u7f6e\u903b\u8f91\u90fd\u5728 spring-boot-autoconfigure.jar \u4e2d\u5b9e\u73b0\u3002 Mvc \u3001 data \u3001 jms \u548c\u5176\u4ed6\u6846\u67b6\u7684\u6240\u6709\u81ea\u52a8\u914d\u7f6e\u903b\u8f91\u90fd\u5728\u6b64\u3002 Spring-boot-autoconfigure.jar \u5185\u7684\u5176\u4ed6\u91cd\u8981\u6587\u4ef6\u662f /META-INF/spring.factories \u3002\u6b64\u6587\u4ef6\u5217\u51fa\u4e86 EnableAutoConfiguration \u952e\u4e0b\u5e94\u8be5\u542f\u7528\u7684\u6240\u6709\u81ea\u52a8\u914d\u7f6e\u7c7b\u3002\u4e0b\u9762\u5217\u51fa\u4e86\u4e00\u4e9b\u91cd\u8981\u7684\u914d\u7f6e\u3002 # Auto Configure org.springframework.boot.autoconfigure.EnableAutoConfiguration = \\ org.springframework.boot.autoconfigure.admin.SpringApplicationAdminJmxAutoConfiguration,\\ org.springframework.boot.autoconfigure.aop.AopAutoConfiguration,\\ org.springframework.boot.autoconfigure.amqp.RabbitAutoConfiguration,\\ org.springframework.boot.autoconfigure.batch.BatchAutoConfiguration,\\ org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration,\\ org.springframework.boot.autoconfigure.cassandra.CassandraAutoConfiguration,\\ org.springframework.boot.autoconfigure.cloud.CloudAutoConfiguration,\\ org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration,\\ org.springframework.boot.autoconfigure.context.MessageSourceAutoConfiguration,\\ org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration,\\ org.springframework.boot.autoconfigure.couchbase.CouchbaseAutoConfiguration,\\ org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration,\\ org.springframework.boot.autoconfigure.data.cassandra.CassandraDataAutoConfiguration,\\ org.springframework.boot.autoconfigure.data.cassandra.CassandraReactiveDataAutoConfiguration,\\ org.springframework.boot.autoconfigure.data.cassandra.CassandraReactiveRepositoriesAutoConfiguration,\\ org.springframework.boot.autoconfigure.data.cassandra.CassandraRepositoriesAutoConfiguration,\\ ... \u4f8b\u5b50 \u00b6 \u6211\u4eec\u6765\u770b\u4e00\u4e0b \u00b7DataSourceAutoConfiguration\u00b7\u3002 \u901a\u5e38\uff0c\u6240\u6709 Auto Configuration \u7c7b\u90fd\u67e5\u770b\u7c7b\u8def\u5f84\u4e2d\u7684\u5176\u4ed6\u53ef\u7528\u7c7b\u3002\u5982\u679c\u5728\u7c7b\u8def\u5f84\u4e2d\u6709\u53ef\u7528\u7684\u7279\u5b9a\u7c7b\uff0c\u5219\u901a\u8fc7\u81ea\u52a8\u914d\u7f6e\u6765\u542f\u7528\u8be5\u529f\u80fd\u7684\u914d\u7f6e\u3002\u50cf @ConditionalOnClass \u3001 @conditionmissingbean \u8fd9\u6837\u7684\u6ce8\u91ca\u53ef\u4ee5\u5e2e\u52a9\u63d0\u4f9b\u8fd9\u4e9b\u7279\u6027\uff01 @conditionalonclass({DataSource.class,EmbeddedDatabaseType.class }) : \u8868\u793a\u53ea\u6709\u5f53\u8fd9\u4e9b\u7c7b\u5728\u7c7b\u8def\u5f84\u4e2d\u53ef\u7528\u65f6\u624d\u542f\u7528\u6b64\u914d\u7f6e\u3002 @Configuration @ConditionalOnClass ({ DataSource . class , EmbeddedDatabaseType . class }) @EnableConfigurationProperties ( DataSourceProperties . class ) @Import ({ Registrar . class , DataSourcePoolMetadataProvidersConfiguration . class }) public class DataSourceAutoConfiguration { } @conditionalonmissingbean : \u53ea\u6709\u5728\u6ca1\u6709\u5176\u4ed6 bean \u914d\u7f6e\u76f8\u540c\u540d\u79f0\u7684\u60c5\u51b5\u4e0b\uff0c\u624d\u914d\u7f6e\u6b64 bean\u3002 @Bean @ConditionalOnMissingBean public DataSourceInitializer dataSourceInitializer () { return new DataSourceInitializer (); } \u4ee5\u4e0b\u4f8b\u5b50\u53ea\u6709\u5728\u6ca1\u6709\u7c7b\u578b\u4e3a DataSource.class \u6216 XADataSource.class \u7684 bean \u65f6\u624d\u914d\u7f6e\u5d4c\u5165\u5f0f\u6570\u636e\u5e93\u3002 @Conditional ( EmbeddedDatabaseCondition . class ) @ConditionalOnMissingBean ({ DataSource . class , XADataSource . class }) @Import ( EmbeddedDataSourceConfiguration . class ) protected static class EmbeddedDatabaseConfiguration { }","title":"\u914d\u7f6e"},{"location":"project/advance/setting/#_1","text":"","title":"\u6982\u8981"},{"location":"project/advance/setting/#_2","text":"\u4ecb\u7ecd\u5404\u79cd\u914d\u7f6e\u65b9\u5f0f\u7684\u4f18\u5148\u7ea7\u3002 \u4ecb\u7ecd\u5404\u79cd\u5916\u90e8\u5316\u914d\u7f6e\u65b9\u5f0f\u3002 \u4ecb\u7ecdyaml\u7684\u683c\u5f0f\u53ca\u539f\u7406\u3002 \u4ecb\u7ecd\u5982\u4f55\u7ed1\u5b9a\u5e76\u6d4b\u8bd5\u7c7b\u578b\u5b89\u5168\u7684\u5c5e\u6027\u914d\u7f6e\u3002 \u4ecb\u7ecd @ConfigurationProperties \u4e0e @Value \u7684\u533a\u522b\u3002","title":"\u8981\u70b9"},{"location":"project/advance/setting/#_3","text":"Spring Boot \u4f7f\u7528\u4e00\u79cd\u975e\u5e38\u7279\u6b8a\u7684 PropertySource \u987a\u5e8f\uff0c\u5176\u8bbe\u8ba1\u76ee\u7684\u662f\u5141\u8bb8\u975e\u5e38\u7b26\u5408\u60c5\u7406\u7684\u8986\u76d6\u91cd\u5199\u503c\u3002 \u4e00\u822c\u6309\u7167\u4ee5\u4e0b\u987a\u5e8f\u8fdb\u884c\u52a0\u8f7d: \u9ed8\u8ba4\u5c5e\u6027\uff0c\u901a\u8fc7 SpringApplication.setDefaultProperties \u6307\u5b9a\uff1b @Configuration \u7c7b\u4e0a\u6ce8\u89e3\u7684 @PropertySource \u914d\u7f6e; \u914d\u7f6e\u6587\u4ef6, application.properties \uff0c application.yml \u6587\u4ef6\u7b49\uff1b jar \u5305\u5185 \u7684 Application properties , \u4f8b\u5982 application.properties \uff0c application.yml \u7b49\uff1b jar \u5305\u5185 \u901a\u8fc7 profile \u6307\u5b9a\u7684 \u5c5e\u6027\uff0c \u4f8b\u5982 application-{profile}.properties ; jar \u5305\u5916 \u7684 Application properties \u6587\u4ef6\uff0c application.properties \u4ee5\u53ca yaml \u7684\u5404\u79cd\u53d8\u4f53\uff1b jar \u5305\u5916 \u901a\u8fc7 profile \u6307\u5b9a\u7684 \u5c5e\u6027\uff0c \u4f8b\u5982 application-{profile}.properties \u4ee5\u53ca yaml \u7684\u5404\u79cd\u53d8\u4f53\u3002 \u901a\u8fc7 RandomValuePropertySource \u548c\u914d\u7f6e random.* \u751f\u6210\u7684\u968f\u673a\u5c5e\u6027\u503c\uff0c\u652f\u6301 int , long \uff0c string , uuid ; \u64cd\u4f5c\u7cfb\u7edf\u73af\u5883\u53d8\u91cf\uff1b java \u7cfb\u7edf\u5c5e\u6027 \uff0c\u53ef\u901a\u8fc7 System.getProperties() \u83b7\u53d6\uff1b \u6765\u81ea java:comp/env \u7684 JNDI \u5c5e\u6027\uff1b ServletContext \u521d\u59cb\u5316\u53c2\u6570\uff1b ServletConfig \u521d\u59cb\u5316\u53c2\u6570\uff1b \u6765\u81ea SPRING_APPLICATION_JSON \u6307\u5b9a\u7684\u5c5e\u6027\uff1b \u547d\u4ee4\u884c\u53c2\u6570\uff1b \u6d4b\u8bd5\u4e2d\u7684 @SpringBootTest \u6ce8\u89e3\u4e2d\u7684 properties \u5c5e\u6027\u503c \u3002 \u6d4b\u8bd5\u4e2d\u7684 @TestPropertySource \u6ce8\u89e3\uff1b \u5f53 Devtools \u5904\u4e8e\u6d3b\u52a8\u72b6\u6001\u65f6\uff0c\u5728 $HOME/.config/spring-boot \u76ee\u5f55\u4e2d\u7684 Devtools \u5168\u5c40\u8bbe\u7f6e\u5c5e\u6027\u3002 Important \u4ee5\u4e0a\u914d\u7f6e\u987a\u5e8f\u5e76\u975e \u5c5e\u6027\u4f18\u5148\u7ea7\uff0c\u800c\u662f\u52a0\u8f7d\u987a\u5e8f\uff0c\u4e00\u822c\u662f \u540e\u52a0\u8f7d\u8986\u76d6\u524d\u52a0\u8f7d \u5bf9\u4e8e\u9664\u6d4b\u8bd5\u4ee5\u5916\u7684\u5e38\u89c1\u914d\u7f6e\u4f18\u5148\u7ea7\u5982\u4e0b: \u547d\u4ee4\u884c\uff1b SPRING_APPLICATION_JSON ; jar \u5305\u5916\u90e8\u914d\u7f6e\u6587\u4ef6 \u901a\u8fc7 --spring.config.name ,\u4ee5\u53ca --spring.config.location= \u6307\u5b9a\u7684\u914d\u7f6e\u6587\u4ef6\uff1b jar\u5305\u540c\u7ea7\u76ee\u5f55 config \u76ee\u5f55\u4e0b\u7684\u76f4\u63a5\u5b50\u76ee\u5f55\uff0c\u4f8b\u5982 /config/app/application.yml jar \u5305\u540c\u7ea7\u76ee\u5f55\u4e0b\u7684 config \u76ee\u5f55\uff1b \u5f53\u524d\u76ee\u5f55\uff1b \u7c7b\u8def\u5f84\u4e0b\u7684 config \u76ee\u5f55\uff1b \u7c7b\u8def\u5f84\u7684\u6839\u76ee\u5f55\uff1b @PropertySource SpringApplication.setDefaultProperties \u5b57\u6bb5\u9ed8\u8ba4\u914d\u7f6e;","title":"\u4f18\u5148\u7ea7"},{"location":"project/advance/setting/#_4","text":"\u5728\u4ee5\u4e0a\u5217\u4e3e\u7684\u591a\u79cd\u914d\u7f6e\u65b9\u5f0f\u4e2d\uff0c\u672c\u7ae0\u8282\u5c06\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u5e38\u89c1\u7684\u51e0\u79cd\u914d\u7f6e\u65b9\u5f0f\u6311\u51fa\u6765\u505a\u5177\u4f53\u8bb2\u89e3\uff1b","title":"\u5e38\u89c1\u914d\u7f6e\u65b9\u5f0f"},{"location":"project/advance/setting/#_5","text":"","title":"\u6307\u5b9a\u914d\u7f6e\u6587\u4ef6"},{"location":"project/advance/setting/#_6","text":"\u5982\u679c\u4e0d\u559c\u6b22\u5c06 application \u4f5c\u4e3a\u914d\u7f6e\u6587\u4ef6\u540d\uff0c\u53ef\u4ee5\u901a\u8fc7\u6307\u5b9a\u4e00\u4e2a spring.config.name \u73af\u5883\u5c5e\u6027\u5207\u6362\u5230\u53e6\u4e00\u4e2a\u6587\u4ef6\u540d\u3002 \u4f8b\u5982\uff0c\u8981\u5c06 myproject.properties \u6216\u8005 myproject.yaml \u4f5c\u4e3a\u914d\u7f6e\u6587\u4ef6\uff0c\u53ef\u4ee5\u6309\u7167\u4ee5\u4e0b\u65b9\u5f0f\u8fd0\u884c\u5e94\u7528\u7a0b\u5e8f: $ java -jar myproject.jar --spring.config.name = myproject","title":"\u66f4\u6362\u914d\u7f6e\u6587\u4ef6\u540d\u79f0"},{"location":"project/advance/setting/#_7","text":"\u5982\u679c\u9700\u8981\u6307\u5b9a\u4e00\u4e9b\u786e\u5207\u4f4d\u7f6e\u7684\u914d\u7f6e\u6587\u4ef6\u4f5c\u4e3a\u9ed8\u8ba4\u5916\u90e8\u914d\u7f6e\u6587\u4ef6\uff0c\u53ef\u7528\u901a\u8fc7\u4f7f\u7528 spring.config.location \u6765\u6307\u5b9a\u3002 \u8be5\u5c5e\u6027\u53ef\u4ee5\u63a5\u53d7\u591a\u4e2a location\u3002 $ java -jar myproject.jar --spring.config.location = \\ optional:classpath:/default.properties, \\ optional:classpath:/override.properties Caution spring.config.name , spring.config.location , spring.config.additional-location \u7684\u4f18\u5148\u7ea7\u5f80\u5f80\u6bd4\u8f83\u9ad8\uff0c\u56e0\u6b64\u4ed6\u4eec\u7ecf\u5e38\u88ab\u5b9a\u4e49\u5230 \u73af\u5883\u53d8\u91cf\u4e2d\uff0c\u4f8b\u5982 \u64cd\u4f5c\u7cfb\u7edf\u73af\u5883\u53d8\u91cf\uff0c\u7cfb\u7edf\u5c5e\u6027\uff0c\u547d\u4ee4\u884c\u53c2\u6570\u7b49\u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5f53\u6307\u5b9a\u7684\u914d\u7f6e\u6570\u636e\u4f4d\u7f6e\u4e0d\u5b58\u5728\u65f6\uff0cSpring Boot \u4f1a\u629b\u51fa\u4e00\u4e2a ConfigDataLocationNotFoundException \u5e76\u4e14\u4f60\u7684\u5e94\u7528\u7a0b\u5e8f\u4e0d\u4f1a\u542f\u52a8\u3002 \u5f53\u7136\u5982\u679c\u6709\u591a\u4e2a\u53ef\u9009\u4f4d\u7f6e\uff0c\u800c\u6709\u4e9b\u4f4d\u7f6e\u53ef\u80fd\u4e0d\u5b58\u5728\u65f6\uff0c\u53ef\u4ee5\u7ed3\u5408 optional: \u4f7f\u7528\u3002 Note \u5982\u679c\u60f3\u5ffd\u7565\u6240\u6709 ConfigDataLocationNotFoundExceptions \u5e76\u7ee7\u7eed\u542f\u52a8\uff0c\u53ef\u4ee5\u4f7f\u7528 spring.config.on-not-found=ignore","title":"\u53ef\u9009\u4f4d\u7f6e"},{"location":"project/advance/setting/#_8","text":"\u901a\u914d\u7b26\u4f4d\u7f6e\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e2a\u4f4d\u7f6e\u63a5\u53d7\u591a\u4e2a\u6587\u4ef6\u3002\u8fd9\u4e00\u822c\u5728\u591a\u914d\u7f6e\u5c5e\u6027\u6765\u6e90\u65f6\u8d39\u7528\u6709\u7528\u3002\u4f8b\u5982k8s\u3002 \u4f8b\u5982\u5e94\u7528\u6709 redis \u914d\u7f6e\u548cmysql \u914d\u7f6e\uff0c\u800c\u6211\u4eec\u5e0c\u671b\u5c06\u4ed6\u4eec\u5206\u5f00\u914d\u7f6e\uff0c\u540c\u65f6\u8981\u6c42\u4ed6\u4eec\u5b58\u5728\u4e8e\u4e00\u4e2a application.properties \u6587\u4ef6\u4e2d\u3002\u8fd9\u53ef\u80fd\u5bfc\u81f4\u4ed6\u4eec\u653e\u5728\u4e0d\u540c\u7684\u4f4d\u7f6e\u3002\u4f8b\u5982 /config/redis/application.properties \u548c /config/mysql/application.properties . \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u901a\u914d\u7b26\u4f4d\u7f6e config/*/ , \u5c06\u4f1a\u4f7f\u4e24\u4e2a\u6587\u4ef6\u90fd\u88ab\u5904\u7406\u3002 Caution \u901a\u914d\u7b26\u4f4d\u7f6e\u53ea\u80fd\u5305\u542b\u4e00\u4e2a * \u548c\u4ee5 */ \u7ed3\u5c3e\u7684\u76ee\u5f55\u4f4d\u7f6e\u6216 */<filename> \u7684\u6587\u4ef6\u4f4d\u7f6e\u3002\u5e26\u901a\u914d\u7b26\u7684\u4f4d\u7f6e\u6839\u636e\u6587\u4ef6\u540d\u7684\u7edd\u5bf9\u8def\u5f84\u6309\u5b57\u6bcd\u987a\u5e8f\u6392\u5e8f\u3002 Tip \u901a\u914d\u7b26\u4f4d\u7f6e\u53ea\u80fd\u7528\u4e8e\u5916\u90e8\u6587\u4ef6\u914d\u7f6e\u3002\u4e0d\u80fd\u5728\u7c7b\u8def\u5f84\u4e2d\u4f7f\u7528\u3002","title":"\u901a\u914d\u7b26\u4f4d\u7f6e"},{"location":"project/advance/setting/#profile","text":"\u9664\u4e86 application \u6587\u4ef6\uff0cSpring Boot \u8fd8\u5c06\u5c1d\u8bd5\u4f7f\u7528\u547d\u540d\u7ea6\u5b9a\u52a0\u8f7d\u7279\u5b9a\u4e8e\u914d\u7f6e\u6587\u4ef6\u7684\u6587\u4ef6 application-{profile} \u3002\u4f8b\u5982\uff0c\u5982\u679c\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u6fc0\u6d3b\u4e86\u4e00\u4e2a\u540d\u4e3aprod\u5e76\u4f7f\u7528 YAML \u6587\u4ef6\u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u90a3\u4e48 application.yml \u548c application-prod.yml \u5747\u4f1a\u88ab\u52a0\u8f7d\uff0cprofile \u6587\u4ef6\u4e2d\u7684\u5c5e\u6027\u4f18\u5148\u7ea7\u9ad8\u4e8e\u9ed8\u8ba4\u3002 \u5982\u679c\u6fc0\u6d3b\u4e86\u591a\u4e2a\u914d\u7f6e\u6587\u4ef6\uff0c \u91c7\u7528 \u6700\u540e\u80dc\u51fa \u7b56\u7565\u3002 \u4f8b\u5982\u6fc0\u6d3b spring.profiles.active = prod,live ,\u90a3\u4e48\u5bf9\u5e94\u540c\u4e00\u4e2a\u540d\u79f0\u7684\u5c5e\u6027\uff0c\u5c06\u91c7\u7528 live profile \u7684\u914d\u7f6e\u3002 Note \u6700\u540e\u83b7\u80dc\u7b56\u7565 \u9002\u7528\u4e8e \"location group\" (\u591a\u4e2a\u914d\u7f6e\u6587\u4ef6\u76ee\u5f55\u4ee5 ; \u9694\u5f00)\uff0c\u4ee5 , \u9694\u5f00\u7684\u591a\u4e2a\u914d\u7f6e\u6587\u4ef6\u91c7\u7528 \u6309\u7167\u76ee\u5f55\u4f18\u5148\u7ea7\u52a0\u8f7d\u3002","title":"\u6307\u5b9a profile"},{"location":"project/advance/setting/#_9","text":"\u5e94\u7528\u7a0b\u5e8f\u5c5e\u6027\u53ef\u4ee5\u4f7f\u7528 spring.config.import \u5c5e\u6027\u4ece\u5176\u4ed6\u4f4d\u7f6e\u5bfc\u5165\u989d\u5916\u7684\u7684\u8865\u5145\u914d\u7f6e\u6570\u636e\u3002\u5bfc\u5165\u5728\u88ab\u52a0\u8f7d\u65f6\u88ab\u5904\u7406\uff0c\u5e76\u4f5c\u4e3a\u9644\u52a0\u6587\u6863\u5904\u7406\uff0c\u63d2\u5165\u5230\u9ed8\u8ba4\u7684\u6587\u6863\u4e4b\u4e0b\u3002 spring.application.name = myapp spring.config.import = optional:file:./dev.properties \u4e0a\u9762\u7684\u914d\u7f6e\u5c06\u89e6\u53d1 dev.properties \u6587\u4ef6\u4e2d\u7684\u5c5e\u6027\u5bfc\u5165\uff08\u5982\u679c\u5b58\u5728\u8fd9\u6837\u7684\u6587\u4ef6\uff09\u3002\u5bfc\u5165\u7684\u503c\u4f18\u5148\u4e8e\u672c\u6587\u6863\u5df2\u914d\u7f6e\u7684\u5c5e\u6027\u3002\u5728\u4e0a\u9762\u7684\u793a\u4f8b\u4e2d\uff0cdev.properties\u53ef\u4ee5\u91cd\u65b0\u5b9a\u4e49spring.application.name\u4e3a\u4e0d\u540c\u7684\u503c\u3002","title":"\u5bfc\u5165\u989d\u5916\u6570\u636e"},{"location":"project/advance/setting/#_10","text":"\u5728 Windows \u4e0a\uff0c\u5982\u679c\u6dfb\u52a0\u65b0\u7684 OS \u73af\u5883\u53d8\u91cf\uff0c\u5219\u5fc5\u987b\u91cd\u65b0\u542f\u52a8\u8fdb\u7a0b(Java \u8fdb\u7a0b\u3001 Intellij IDEA)\u624d\u80fd\u8bfb\u53d6\u65b0\u7684 OS \u73af\u5883\u53d8\u91cf\u3002 Note \u4efb\u4f55\u5176\u4ed6 Windows \u53ef\u6267\u884c\u3001\u7cfb\u7edf\u7ea7\u522b\u5bf9\u73af\u5883\u53d8\u91cf\u7684\u66f4\u6539\u53ea\u6709\u5728\u8fdb\u7a0b\u91cd\u65b0\u542f\u52a8\u65f6\u624d\u4f1a\u4f20\u64ad\u5230\u8fdb\u7a0b\u3002 \u5728 Linux \u6216 Windows \u4e0a\u6dfb\u52a0\u7528\u6237\u53d8\u91cf\u6216\u7cfb\u7edf\u53d8\u91cf: msg=hello \u6709\u4ee5\u4e0b\u51e0\u79cd\u65b9\u5f0f\u53ef\u4ee5\u6765\u8bfb\u53d6\uff1a \u901a\u8fc7\u7cfb\u7edf\u7c7b\u8bfb\u53d6 System . getenv ( \"msg\" ) \u901a\u8fc7 Environment \u5bf9\u8c61 @Autowired private Environment environment ; environment . getProperty ( \"msg\" ) \u6ce8\u5165 spring \u73af\u5883\u53d8\u91cf @Value ( \"${msg}\" ) private String msg ; \u5728 application.properties \u6587\u4ef6\u4e2d\u901a\u8fc7\u73af\u5883\u53d8\u91cf\uff1b msg = ${msg}","title":"\u7cfb\u7edf\u73af\u5883\u53d8\u91cf"},{"location":"project/advance/setting/#json-application-properties","text":"\u73af\u5883\u53d8\u91cf\u548c\u7cfb\u7edf\u5c5e\u6027\u901a\u5e38\u6709\u4e00\u4e9b\u9650\u5236\uff0c\u8fd9\u610f\u5473\u7740\u67d0\u4e9b\u5c5e\u6027\u540d\u4e0d\u80fd\u4f7f\u7528,\u4f8b\u5982\u67d0\u4e9b\u6388\u6743\uff0c\u5546\u4e1a\u6027\u8d28\u7684\u9650\u5236\u7b49\u3002\u4e3a\u4e86\u5e2e\u52a9\u5b9e\u73b0\u8fd9\u4e00\u70b9\uff0cspringboot \u5141\u8bb8\u60a8\u5c06\u4e00\u4e2a\u5c5e\u6027\u5757\u7f16\u7801\u4e3a\u5355\u4e2a JSON \u7ed3\u6784\u3002 SPRING_APPLICATION_JSON = '{\"my\":{\"name\":\"test\"}}' java -jar myapp.jar \u5728\u4e0a\u9762\u7684\u793a\u4f8b\u4e2d\uff0c\u53ef\u4ee5\u4ece Spring Environment \u4e2d\u5f97\u5230 my.name = test \u3002 \u540c\u6837\u7684 JSON \u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u7cfb\u7edf\u5c5e\u6027\u63d0\u4f9b: $ java -Dspring.application.json = '{\"my\":{\"name\":\"test\"}}' -jar myapp.jar \u6216\u8005 \u901a\u8fc7 \u547d\u4ee4\u884c\u53c2\u6570\u6765\u5b9e\u73b0: $ java -jar myapp.jar --spring.application.json = '{\"my\":{\"name\":\"test\"}}' \u5f53\u7136\u4f7f\u7528 JNDI \u53d8\u91cf\u4e5f\u53ef\u4ee5\u5b9e\u73b0 java:comp/env/spring.application.json","title":"JSON Application Properties"},{"location":"project/advance/setting/#_11","text":"java \u5e73\u53f0\u672c\u8eab\u4f7f\u7528\u4e00\u4e2a Properties \u5bf9\u8c61\u6765\u7ef4\u62a4\u81ea\u5df1\u7684\u914d\u7f6e\u3002 System \u7c7b\u7ef4\u62a4\u4e00\u4e2a\u63cf\u8ff0\u5f53\u524d\u5de5\u4f5c\u73af\u5883\u914d\u7f6e\u7684 Properties \u5bf9\u8c61\u3002\u7cfb\u7edf\u5c5e\u6027\u5305\u62ec\u6709\u5173 \u5f53\u524d\u7528\u6237\u3001 Java \u8fd0\u884c\u65f6\u7684\u5f53\u524d\u7248\u672c\u4ee5\u53ca\u7528\u4e8e\u5206\u9694\u6587\u4ef6\u8def\u5f84\u540d\u79f0\u7684\u7ec4\u4ef6\u7684\u5b57\u7b26\u7684\u4fe1\u606f\u7b49\u3002 \u5e38\u89c1\u91cd\u8981\u7684\u7cfb\u7edf\u5c5e\u6027\u6709: \u94a5\u5319 \u610f\u4e49 file.separator \u5206\u9694\u6587\u4ef6\u8def\u5f84\u7ec4\u4ef6\u7684\u5b57\u7b26\u3002\u8fd9\u662f/UNIX \u4e0a\u7684 \" \\\" \u548c Windows \u4e0a\u7684 \" \"\u3002 java.class.path \u7528\u4e8e\u67e5\u627e\u5305\u542b\u7c7b\u6587\u4ef6\u7684\u76ee\u5f55\u548c JAR \u6863\u6848\u7684\u8def\u5f84\u3002\u7c7b\u8def\u5f84\u7684\u5143\u7d20\u7531path.separator\u5c5e\u6027\u4e2d\u6307\u5b9a\u7684\u5e73\u53f0\u7279\u5b9a\u5b57\u7b26\u5206\u9694\u3002 java.home Java \u8fd0\u884c\u65f6\u73af\u5883 (JRE) \u7684\u5b89\u88c5\u76ee\u5f55 java.vendor JRE \u4f9b\u5e94\u5546\u540d\u79f0 java.vendor.url JRE \u4f9b\u5e94\u5546 URL java.version JRE \u7248\u672c\u53f7 line.separator \u64cd\u4f5c\u7cfb\u7edf\u7528\u4e8e\u5206\u9694\u6587\u672c\u6587\u4ef6\u4e2d\u7684\u884c\u7684\u5e8f\u5217 os.arch \u64cd\u4f5c\u7cfb\u7edf\u67b6\u6784 os.name \u64cd\u4f5c\u7cfb\u7edf\u540d\u79f0 os.version \u64cd\u4f5c\u7cfb\u7edf\u7248\u672c path.separator \u8def\u5f84\u5206\u9694\u7b26\u7528\u4e8ejava.class.path user.dir \u7528\u6237\u5de5\u4f5c\u76ee\u5f55 user.home \u7528\u6237\u4e3b\u76ee\u5f55 user.name \u7528\u6237\u5e10\u6237\u540d\u79f0","title":"\u7cfb\u7edf\u5c5e\u6027"},{"location":"project/advance/setting/#_12","text":"System \u7c7b\u6709\u4e24\u4e2a\u7528\u4e8e\u8bfb\u53d6\u7cfb\u7edf\u5c5e\u6027\u7684\u65b9\u6cd5: getProperty \u548c getProperties \u3002 System \u7c7b\u6709\u4e24\u4e2a\u4e0d\u540c\u7248\u672c\u7684 getProperty \u3002\u4e24\u8005\u90fd\u68c0\u7d22\u53c2\u6570\u5217\u8868\u4e2d\u547d\u540d\u7684\u5c5e\u6027\u7684\u503c\u3002\u4e24\u4e2a getProperty \u65b9\u6cd5\u4e2d\u6bd4\u8f83\u7b80\u5355\u7684\u4e00\u4e2a\u53ea\u6709\u4e00\u4e2a\u53c2\u6570\uff0c\u4e00\u4e2a\u5c5e\u6027\u952e\u4f8b\u5982\uff0c\u8981\u83b7\u5f97 path.separator \u7684\u503c\uff0c\u4f7f\u7528\u4ee5\u4e0b\u8bed\u53e5: // \u8fd4\u56de\u7cfb\u7edf\u53d8\u91cf\uff0c\u5982\u679c\u6ca1\u6709\u8fd4\u56denull System . getProperty ( \"path.separator\" ); // \u8fd4\u56de\u7cfb\u7edf\u53d8\u91cf\uff0c\u5982\u679c\u6ca1\u6709\u5219\u8fd4\u56de \"default\" \u9ed8\u8ba4\u503c System . getProperty ( \"path\" , \"default\" ); System \u7c7b\u63d0\u4f9b\u7684\u8bbf\u95ee\u5c5e\u6027\u503c\u7684\u6700\u540e\u4e00\u4e2a\u65b9\u6cd5\u662f getProperties \u65b9\u6cd5\uff0c\u5b83\u8fd4\u56de\u4e00\u4e2a Properties \u5bf9\u8c61\u3002\u6b64\u5bf9\u8c61\u5305\u542b\u4e00\u7ec4\u5b8c\u6574\u7684\u7cfb\u7edf\u5c5e\u6027\u5b9a\u4e49\u3002","title":"\u8bfb\u53d6"},{"location":"project/advance/setting/#_13","text":"\u82e5\u8981\u4fee\u6539\u73b0\u6709\u7684\u7cfb\u7edf\u5c5e\u6027\u96c6\uff0c\u8bf7\u4f7f\u7528 System.setProperties . Note setProperties \u65b9\u6cd5\u66f4\u6539\u5f53\u524d\u8fd0\u884c\u7684\u5e94\u7528\u7a0b\u5e8f\u7684\u7cfb\u7edf\u5c5e\u6027\u3002\u8fd9\u4e9b\u53d8\u5316\u5e76\u4e0d\u662f\u6301\u4e45\u7684\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u66f4\u6539\u5e94\u7528\u7a0b\u5e8f\u4e2d\u7684\u7cfb\u7edf\u5c5e\u6027\u4e0d\u4f1a\u5f71\u54cd\u5c06\u6765\u5bf9\u8fd9\u4e2a\u5e94\u7528\u7a0b\u5e8f\u6216\u4efb\u4f55\u5176\u4ed6\u5e94\u7528\u7a0b\u5e8f\u7684 Java \u89e3\u91ca\u5668\u8c03\u7528\u3002\u8fd0\u884c\u65f6\u7cfb\u7edf\u5728\u6bcf\u6b21\u542f\u52a8\u65f6\u91cd\u65b0\u521d\u59cb\u5316\u7cfb\u7edf\u5c5e\u6027\u3002\u5982\u679c\u5bf9\u7cfb\u7edf\u5c5e\u6027\u7684\u66f4\u6539\u662f\u6301\u4e45\u7684\uff0c\u90a3\u4e48\u5e94\u7528\u7a0b\u5e8f\u5fc5\u987b\u5728\u9000\u51fa\u524d\u5c06\u503c\u5199\u5165\u67d0\u4e2a\u6587\u4ef6\uff0c\u5e76\u5728\u542f\u52a8\u65f6\u518d\u6b21\u8bfb\u5165\u8fd9\u4e9b\u503c\u3002","title":"\u5199\u5165\u66f4\u65b0"},{"location":"project/advance/setting/#spring-boot","text":"\u57fa\u4e8e Spring \u7684\u5e94\u7528\u7a0b\u5e8f\u6709\u5f88\u591a\u914d\u7f6e\u3002 \u5f53\u6211\u4eec\u4f7f\u7528 Spring MVC \u65f6\uff0c\u6211\u4eec\u9700\u8981\u914d\u7f6e\u7ec4\u4ef6\u626b\u63cf\u3001Dispatcher Servlet\u3001\u89c6\u56fe\u89e3\u6790\u5668\u3001Web jars\uff08\u7528\u4e8e\u4f20\u9012\u9759\u6001\u5185\u5bb9\uff09\u7b49\u7b49\u3002 \u5f53\u6211\u4eec\u4f7f\u7528 Hibernate/JPA \u65f6\uff0c\u6211\u4eec\u9700\u8981\u914d\u7f6e\u4e00\u4e2a\u6570\u636e\u6e90\u3001\u4e00\u4e2a\u5b9e\u4f53\u7ba1\u7406\u5668\u5de5\u5382\u3001\u4e00\u4e2a\u4e8b\u52a1\u7ba1\u7406\u5668\u7b49\u7b49\u3002 ... Question \u5982\u679c Hibernate jar \u5728\u7c7b\u8def\u5f84\u4e0a\uff0c\u5982\u4f55\u81ea\u52a8\u914d\u7f6e\u6570\u636e\u6e90\uff1f \u5982\u679c Spring MVC jar \u5728\u7c7b\u8def\u5f84\u4e0a\uff0c\u5982\u4f55\u81ea\u52a8\u914d\u7f6e Dispatcher Servlet\uff1f \u56e0\u4e3a\u6709\u4e9b\u4e1c\u897f\u662f\u76f8\u540c\u7684\uff0c\u751a\u81f3\u4e8e\u6709\u7684bean \u53ef\u4ee5\u4f7f\u7528 \u590d\u5236-\u7c98\u8d34 \u6765\u641e\u5b9a\u3002 \u6846\u67b6b\u7684\u5df2\u6709\u7684\u914d\u7f6e\u5b8c\u5168\u53ef\u4ee5\u5728a\u5e94\u7528\u6846\u67b6\u4e0a\u5f88\u597d\u7684\u4f7f\u7528\u3002\u57fa\u4e8e\u6b64\uff0cspring boot \u63d0\u4f9b\u6700\u57fa\u7840\u7684\u901a\u7528\u914d\u7f6e\uff0c\u800c\u8fd9\u4e9b\u914d\u7f6e\u53ef\u4ee5\u88ab\u5f88\u65b9\u4fbf\u7684\u88ab\u5ba2\u6237\u5b9a\u5236\u8986\u76d6\u3002\u800c\u8fd9\u901a\u5e38\u88ab\u79f0\u4f5c \"\u81ea\u52a8\u914d\u7f6e\"","title":"spring boot \u81ea\u52a8\u914d\u7f6e\u539f\u7406"},{"location":"project/advance/setting/#_14","text":"\u5f53\u6211\u4eec\u542f\u52a8\u4e00\u4e2a spring boot web \u7a0b\u5e8f\uff0c\u5f80\u5f80\u53ef\u4ee5\u770b\u5230\u4e00\u4e0b\u8f93\u51fa: Mapping servlet: 'dispatcherServlet' to [ / ] Mapped \"{[/error]}\" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error ( javax.servlet.http.HttpServletRequest ) Mapped URL path [ /webjars/** ] onto handler of type [ class org.springframework.web.servlet.resource.ResourceHttpRequestHandler ] \u4e0a\u9762\u7684\u65e5\u5fd7\u8bed\u53e5\u662f Spring Boot Auto Configuration \u5f88\u597d\u7684\u5b9e\u4f8b\u3002 \u4e00\u65e6\u6211\u4eec\u5728\u9879\u76ee\u4e2d\u6dfb\u52a0\u4e86 Spring Boot Starter Web \u4f5c\u4e3a\u4f9d\u8d56\u9879\uff0c Spring Boot Autoconfiguration \u5c31\u4f1a\u53d1\u73b0 Spring MVC \u4f4d\u4e8e\u7c7b\u8def\u5f84\u4e2d\u3002\u5b83\u81ea\u52a8\u914d\u7f6e dispatcherServlet\uff0c\u4e00\u4e2a\u9ed8\u8ba4\u7684\u9519\u8bef\u9875\u9762\u548c webjars\u3002 \u5982\u679c\u6dfb\u52a0 Spring Boot Data JPA Starter \uff0c\u60a8\u5c06\u770b\u5230 Spring Boot Auto Configuration \u81ea\u52a8\u914d\u7f6e\u4e00\u4e2a\u6570\u636e\u6e90\u548c\u4e00\u4e2a\u5b9e\u4f53\u7ba1\u7406\u5668\u3002","title":"\u521d\u6b65\u4e86\u89e3"},{"location":"project/advance/setting/#_15","text":"\u6240\u6709\u7684\u81ea\u52a8\u914d\u7f6e\u903b\u8f91\u90fd\u5728 spring-boot-autoconfigure.jar \u4e2d\u5b9e\u73b0\u3002 Mvc \u3001 data \u3001 jms \u548c\u5176\u4ed6\u6846\u67b6\u7684\u6240\u6709\u81ea\u52a8\u914d\u7f6e\u903b\u8f91\u90fd\u5728\u6b64\u3002 Spring-boot-autoconfigure.jar \u5185\u7684\u5176\u4ed6\u91cd\u8981\u6587\u4ef6\u662f /META-INF/spring.factories \u3002\u6b64\u6587\u4ef6\u5217\u51fa\u4e86 EnableAutoConfiguration \u952e\u4e0b\u5e94\u8be5\u542f\u7528\u7684\u6240\u6709\u81ea\u52a8\u914d\u7f6e\u7c7b\u3002\u4e0b\u9762\u5217\u51fa\u4e86\u4e00\u4e9b\u91cd\u8981\u7684\u914d\u7f6e\u3002 # Auto Configure org.springframework.boot.autoconfigure.EnableAutoConfiguration = \\ org.springframework.boot.autoconfigure.admin.SpringApplicationAdminJmxAutoConfiguration,\\ org.springframework.boot.autoconfigure.aop.AopAutoConfiguration,\\ org.springframework.boot.autoconfigure.amqp.RabbitAutoConfiguration,\\ org.springframework.boot.autoconfigure.batch.BatchAutoConfiguration,\\ org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration,\\ org.springframework.boot.autoconfigure.cassandra.CassandraAutoConfiguration,\\ org.springframework.boot.autoconfigure.cloud.CloudAutoConfiguration,\\ org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration,\\ org.springframework.boot.autoconfigure.context.MessageSourceAutoConfiguration,\\ org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration,\\ org.springframework.boot.autoconfigure.couchbase.CouchbaseAutoConfiguration,\\ org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration,\\ org.springframework.boot.autoconfigure.data.cassandra.CassandraDataAutoConfiguration,\\ org.springframework.boot.autoconfigure.data.cassandra.CassandraReactiveDataAutoConfiguration,\\ org.springframework.boot.autoconfigure.data.cassandra.CassandraReactiveRepositoriesAutoConfiguration,\\ org.springframework.boot.autoconfigure.data.cassandra.CassandraRepositoriesAutoConfiguration,\\ ...","title":"\u5982\u4f55\u5b9e\u73b0"},{"location":"project/advance/setting/#_16","text":"\u6211\u4eec\u6765\u770b\u4e00\u4e0b \u00b7DataSourceAutoConfiguration\u00b7\u3002 \u901a\u5e38\uff0c\u6240\u6709 Auto Configuration \u7c7b\u90fd\u67e5\u770b\u7c7b\u8def\u5f84\u4e2d\u7684\u5176\u4ed6\u53ef\u7528\u7c7b\u3002\u5982\u679c\u5728\u7c7b\u8def\u5f84\u4e2d\u6709\u53ef\u7528\u7684\u7279\u5b9a\u7c7b\uff0c\u5219\u901a\u8fc7\u81ea\u52a8\u914d\u7f6e\u6765\u542f\u7528\u8be5\u529f\u80fd\u7684\u914d\u7f6e\u3002\u50cf @ConditionalOnClass \u3001 @conditionmissingbean \u8fd9\u6837\u7684\u6ce8\u91ca\u53ef\u4ee5\u5e2e\u52a9\u63d0\u4f9b\u8fd9\u4e9b\u7279\u6027\uff01 @conditionalonclass({DataSource.class,EmbeddedDatabaseType.class }) : \u8868\u793a\u53ea\u6709\u5f53\u8fd9\u4e9b\u7c7b\u5728\u7c7b\u8def\u5f84\u4e2d\u53ef\u7528\u65f6\u624d\u542f\u7528\u6b64\u914d\u7f6e\u3002 @Configuration @ConditionalOnClass ({ DataSource . class , EmbeddedDatabaseType . class }) @EnableConfigurationProperties ( DataSourceProperties . class ) @Import ({ Registrar . class , DataSourcePoolMetadataProvidersConfiguration . class }) public class DataSourceAutoConfiguration { } @conditionalonmissingbean : \u53ea\u6709\u5728\u6ca1\u6709\u5176\u4ed6 bean \u914d\u7f6e\u76f8\u540c\u540d\u79f0\u7684\u60c5\u51b5\u4e0b\uff0c\u624d\u914d\u7f6e\u6b64 bean\u3002 @Bean @ConditionalOnMissingBean public DataSourceInitializer dataSourceInitializer () { return new DataSourceInitializer (); } \u4ee5\u4e0b\u4f8b\u5b50\u53ea\u6709\u5728\u6ca1\u6709\u7c7b\u578b\u4e3a DataSource.class \u6216 XADataSource.class \u7684 bean \u65f6\u624d\u914d\u7f6e\u5d4c\u5165\u5f0f\u6570\u636e\u5e93\u3002 @Conditional ( EmbeddedDatabaseCondition . class ) @ConditionalOnMissingBean ({ DataSource . class , XADataSource . class }) @Import ( EmbeddedDataSourceConfiguration . class ) protected static class EmbeddedDatabaseConfiguration { }","title":"\u4f8b\u5b50"},{"location":"project/advance/testing/","text":"\u96c6\u6210\u6d4b\u8bd5 \u00b6 \u6d4b\u8bd5\u7684\u7b2c\u4e00\u90e8\u5206\u662f\u5355\u5143\u6d4b\u8bd5\uff0c\u5b83\u5c06\u6839\u636e\u8bbe\u8ba1\u9636\u6bb5\u5b8c\u6210\u7684\u89c4\u8303\u81ea\u884c\u6d4b\u8bd5\u8be5\u6a21\u5757\u3002\u4e00\u65e6\u5b8c\u6210\uff0c\u6211\u4eec\u5c31\u5f00\u59cb\u8fdb\u884c\u96c6\u6210\u6d4b\u8bd5\uff0c\u5c06\u5404\u79cd\u6a21\u5757\u7ec4\u5408\u5728\u4e00\u8d77\uff0c\u6216\u8005\u6574\u5408\u5230\u6574\u4e2a\u7cfb\u7edf\u4e2d\uff0c\u6216\u8005\u6574\u5408\u5230\u91cd\u8981\u7684\u5b50\u7cfb\u7edf\u4e2d\u3002 \u987e\u540d\u601d\u4e49\uff0c\u96c6\u6210\u6d4b\u8bd5\u7684\u91cd\u70b9\u662f\u6d4b\u8bd5\u8bb8\u591a\u5355\u72ec\u5f00\u53d1\u7684\u6a21\u5757\u662f\u5426\u6309\u9884\u671f\u534f\u540c\u5de5\u4f5c\u3002\u5b83\u662f\u901a\u8fc7\u6fc0\u6d3b\u8bb8\u591a\u6a21\u5757\u5e76\u5bf9\u6240\u6709\u6a21\u5757\u8fd0\u884c\u66f4\u9ad8\u7ea7\u522b\u7684\u6d4b\u8bd5\u6765\u6267\u884c\u7684\uff0c\u4ee5\u786e\u4fdd\u5b83\u4eec\u4e00\u8d77\u8fd0\u884c\u3002\u8fd9\u4e9b\u6a21\u5757\u53ef\u4ee5\u662f\u5355\u4e2a\u53ef\u6267\u884c\u6587\u4ef6\u7684\u4e00\u90e8\u5206\uff0c\u4e5f\u53ef\u4ee5\u662f\u5355\u72ec\u7684\u3002 \u5728\u73b0\u6709\u5b9e\u9645\u9879\u76ee\u4e2d\uff0c\u5f80\u5f80\u5bf9 \u6570\u636e\u5e93\u7684 \u96c6\u6210\u6d4b\u8bd5 \u662f\u4e00\u4e2a\u96be\u70b9\u3002\u4e0b\u9762 \u5c31 mysql \u548c mongodb\u7684\u96c6\u6210\u6d4b\u8bd5\uff0c\u4ecb\u7ecd\u4e24\u79cd\u65b9\u6848 database rider \u548c Embedded MongoDB Database Rider \u00b6 \u73b0\u65b9\u6848\u7531 spring test + database rider + Junit 5 \u7ec4\u6210\uff0c\u56e0\u6b64\u9996\u5148\u5728\u4f9d\u8d56\u4e2d\u6dfb\u52a0\u5982\u4e0b\u4e3b\u8981\u4f9d\u8d56: integrationTestImplementation 'com.h2database:h2' integrationTestImplementation 'com.github.database-rider:rider-core:1.32.0' integrationTestImplementation 'com.github.database-rider:rider-spring:1.32.0' integrationTestImplementation 'org.springframework.boot:spring-boot-starter-test' \u5728\u4ee5\u4e0a\u4f9d\u8d56\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528 h2 \u5185\u5b58\u6570\u636e\u5e93\u4f5c\u4e3a\u96c6\u6210\u6d4b\u8bd5\u7684\u5173\u7cfb\u578b\u6570\u636e\u5e93\uff0c\u4ed6\u65b9\u4fbf\u4e14\u5feb\u901f\uff1b rider-core \u662f\u5176\u4ed6 database rider \u7279\u6027\u7684\u57fa\u7840\uff1b rider-spring \u7528\u4e8e\u5bf9spring \u6d4b\u8bd5\u73af\u5883\u7684\u652f\u6301\uff1b \u65b9\u4fbf\u8d77\u89c1\u590d\u7528 \u521d\u7ea7\u6559\u7a0b \u4e2d\u7684\u9879\u76ee\u4f5c\u4e3a\u96c6\u6210\u6d4b\u8bd5\u9879\u76ee\u73af\u5883\u3002\u7528 databse-rider \u6d4b\u8bd5\u73af\u5883\u6d4b\u8bd5 OwnerServiceImpl \u7684\u96c6\u6210\u903b\u8f91\uff1b \u786e\u8ba4\u4ee5\u4e0a\u4f9d\u8d56\u5df2\u7ecf\u52a0\u5165\uff1b \u5728 src \u521b\u5efa integeration-test \u76ee\u5f55\u7528\u4e8e\u5b58\u653e\u96c6\u6210\u6d4b\u8bd5\u6e90\u4ee3\u7801\u548c\u9759\u6001\u8d44\u6e90\uff1b \u5728 integeration-test \u521b\u5efa OwnerServiceImpl \u540c\u7ea7\u76ee\u5f55\uff1b \u521b\u5efa OwnerServiceImplTest.java \u6d4b\u8bd5\u7c7b\uff0c\u6ce8\u610f\u547d\u540d\uff1b integration-test/java/cn/tendata/jstart/service/ \u2514\u2500\u2500 OwnerServiceImplTest.java \u5728 integration-test/resources \u76ee\u5f55\u521b\u5efa datasets \u7528\u4e8e\u521b\u5efadatabse rider \u5916\u7f6e\u6d4b\u8bd5\u6570\u636e\uff1b \u5728 datasets \u65b0\u5efa owners.yml \u6587\u4ef6\uff0c\u589e\u52a0\u4ee5\u4e0b\u5185\u5bb9: owners: - id: 1 first_name: \u5f20 last_name: \u7fe0\u5c71 address: \u4e25\u4e2d\u8def374\u8def city: \u4e0a\u6d77 telephone: 123456 deleted: 0 - id: 2 first_name: \u674e last_name: \u5143\u9738 address: \u6d66\u4e1c\u5357\u8def58\u53f7 city: \u4e0a\u6d77 telephone: 9999 deleted: 0 \u6309\u7167\u6d4b\u8bd5\u4e00\u822c\u539f\u5219\u7f16\u5199\u6d4b\u8bd5\u4ee3\u7801: @DBRider @SpringBootTest @ExtendWith ({ SpringExtension . class }) @DBUnit ( cacheConnection = false , leakHunter = true ) class OwnerServiceImplTest { @Autowired private OwnerService service ; @DataSet ( \"owners.yml\" ) @Test void getAll () { Page < Owner > actualQuery = service . getAll ( new Owner (), Pageable . ofSize ( 10 )); Assertions . assertAll (() -> { MatcherAssert . assertThat ( actualQuery . getContent (), Matchers . hasSize ( 2 )); MatcherAssert . assertThat ( actualQuery . getContent (). get ( 0 ), Matchers . hasProperty ( \"firstName\" , Is . is ( \"\u5f20\" ))); MatcherAssert . assertThat ( actualQuery . getContent (). get ( 0 ), Matchers . hasProperty ( \"lastName\" , Is . is ( \"\u7fe0\u5c71\" ))); }); } } \u4ee5\u4e0a\u6d4b\u8bd5\u6e90\u7801\u4e2d \u4f7f\u7528 @SpringBootTest \u6ce8\u89e3\u96c6\u6210spring boot \u96c6\u6210\u6d4b\u8bd5\u73af\u5883\u3002 @ExtendWith({SpringExtension.class}) \u652f\u6301 srping5 + junit5\uff1b @DBRider \u53ef\u914d\u7f6e\u591a\u6570\u636e\u6e90\uff0c\u5728\u8fd9\u91cc\u9ed8\u8ba4\u4f7f\u7528\u9ed8\u8ba4\u6570\u636e\u5e93 h2; Flapdoodle's embedded MongoDB \u00b6 \u4e0e\u4efb\u4f55\u5176\u4ed6\u6301\u4e45\u6027\u6280\u672f\u4e00\u6837\uff0c\u80fd\u591f\u8f7b\u677e\u5730\u6d4b\u8bd5\u6570\u636e\u5e93\u4e0e\u5e94\u7528\u7a0b\u5e8f\u7684\u5176\u4f59\u90e8\u5206\u7684\u96c6\u6210\u662f\u81f3\u5173\u91cd\u8981\u7684\u3002\u503c\u5f97\u5e86\u5e78\u7684\u662f\uff0cSpring Boot \u5141\u8bb8\u6211\u4eec\u8f7b\u677e\u5730\u7f16\u5199\u8fd9\u7c7b\u6d4b\u8bd5\u3002 \u6838\u5fc3\u4f9d\u8d56\uff1a <dependency> <groupId> de.flapdoodle.embed </groupId> <artifactId> de.flapdoodle.embed.mongo </artifactId> <scope> test </scope> </dependency> \u5728\u6dfb\u52a0 de.flapdoodle.embed.mongo \u4f9d\u8d56\u9879\u5230 Spring Boot \u4e4b\u540e\uff0c\u5728\u8fd0\u884c\u6d4b\u8bd5\u65f6\u5c06\u81ea\u52a8\u5c1d\u8bd5\u4e0b\u8f7d\u5e76\u542f\u52a8\u5d4c\u5165\u5f0f MongoDB \u5bf9\u4e8e\u6bcf\u4e2a\u7248\u672c\uff0c\u53ea\u4e0b\u8f7d\u5305\u4e00\u6b21\uff0c\u4ee5\u4fbf\u540e\u7eed\u6d4b\u8bd5\u8fd0\u884c\u5f97\u66f4\u5feb\u3002 \u6d4b\u8bd5\u793a\u4f8b\u5982\u4e0b: @DataMongoTest @ExtendWith ( SpringExtension . class ) public class MongoDbSpringIntegrationTest { @DisplayName ( \"given object to save\" + \" when save object using MongoDB template\" + \" then object is saved\" ) @Test public void test ( @Autowired MongoTemplate mongoTemplate ) { // given DBObject objectToSave = BasicDBObjectBuilder . start () . add ( \"key\" , \"value\" ) . get (); // when mongoTemplate . save ( objectToSave , \"collection\" ); // then assertThat ( mongoTemplate . findAll ( DBObject . class , \"collection\" )). extracting ( \"key\" ) . containsOnly ( \"value\" ); } } \u6211\u4eec\u53ef\u4ee5\u5728\u63a7\u5236\u53f0\u53d1\u73b0\u4ee5\u4e0b\u65e5\u5fd7\uff0c\u5d4c\u5165\u5f0f\u6570\u636e\u5e93\u662f\u7531 Spring \u81ea\u52a8\u542f\u52a8\u7684\uff1a ...Starting MongodbExampleApplicationTests on arroyo with PID 10413... Springboot \u4f7f\u5f97\u8fd0\u884c\u6d4b\u8bd5\u4ee5\u9a8c\u8bc1\u6b63\u786e\u7684\u6587\u6863\u6620\u5c04\u548c\u6570\u636e\u5e93\u96c6\u6210\u53d8\u5f97\u975e\u5e38\u7b80\u5355\u3002\u901a\u8fc7\u6dfb\u52a0\u6b63\u786e\u7684 Maven \u4f9d\u8d56\u9879\uff0c\u6211\u4eec\u53ef\u4ee5\u7acb\u5373\u5728 Spring Boot \u96c6\u6210\u6d4b\u8bd5\u4e2d\u4f7f\u7528 MongoDB \u7ec4\u4ef6\u3002 \u6211\u4eec\u9700\u8981\u8bb0\u4f4f\uff0c\u5d4c\u5165\u5f0f MongoDB \u670d\u52a1\u5668\u4e0d\u80fd\u88ab\u8ba4\u4e3a\u662f \"\u771f\u5b9e\" \u670d\u52a1\u5668\u7684\u66ff\u4ee3\u54c1\u3002 mockito \u6846\u67b6 \u00b6 Mockito \u662f\u4e00\u4e2a\u6a21\u62df\u6846\u67b6\uff0c\u57fa\u4e8e JAVA \uff0c\u7528\u4e8e\u5bf9 JAVA \u5e94\u7528\u7a0b\u5e8f\u8fdb\u884c\u6709\u6548\u7684\u5355\u5143\u6d4b\u8bd5\u3002Mockito \u7528\u4e8e\u6a21\u62df\u63a5\u53e3\uff0c\u4ee5\u4fbf\u53ef\u4ee5\u5c06\u865a\u62df\u529f\u80fd\u6dfb\u52a0\u5230\u53ef\u7528\u4e8e\u5355\u5143\u6d4b\u8bd5\u7684\u6a21\u62df\u63a5\u53e3\u4e2d\u3002 Mockito \u6709\u52a9\u4e8e\u65e0\u7f1d\u5730\u521b\u5efa\u6a21\u62df\u5bf9\u8c61\u3002\u5b83\u4f7f\u7528 Java \u53cd\u5c04\u6765\u4e3a\u7ed9\u5b9a\u7684\u63a5\u53e3\u521b\u5efa\u6a21\u62df\u5bf9\u8c61\u3002\u6a21\u62df\u5bf9\u8c61\u53ea\u4e0d\u8fc7\u662f\u5b9e\u9645\u5b9e\u73b0\u7684\u4ee3\u7406 Mockito \u7684\u597d\u5904: No Handwriting - \u65e0\u9700\u81ea\u5df1\u7f16\u5199\u6a21\u62df\u5bf9\u8c61\u3002 Refactoring Safe - \u91cd\u547d\u540d\u63a5\u53e3\u65b9\u6cd5\u540d\u79f0\u6216\u91cd\u65b0\u6392\u5e8f\u53c2\u6570\u4e0d\u4f1a\u7834\u574f\u6d4b\u8bd5\u4ee3\u7801\uff0c\u56e0\u4e3a Mocks \u662f\u5728\u8fd0\u884c\u65f6\u521b\u5efa\u7684\u3002 \u8fd4\u56de\u503c\u652f\u6301- \u652f\u6301\u8fd4\u56de\u503c\u3002 \u652f\u6301\u5f02\u5e38\u3002 \u652f\u6301\u68c0\u67e5\u65b9\u6cd5\u8c03\u7528\u7684\u987a\u5e8f\u3002 \u652f\u6301\u4f7f\u7528\u6ce8\u91ca\u521b\u5efa\u6a21\u62df\u3002 \u6838\u5fc3\u4f9d\u8d56: testImplementation \"org.mockito:mockito-core:3.+\" \u542f\u7528 mockito \u76f8\u5173\u6ce8\u91ca \u00b6 \u542f\u7528\u542f\u7528 mockito \u76f8\u5173\u6ce8\u91ca\u6709\u4e09\u79cd\u65b9\u6cd5: MockitoJUnitRunner.class @RunWith ( MockitoJUnitRunner . class ) public class MockitoAnnotationTest { ... } \u4f7f\u7528\u7f16\u7a0b\u65b9\u5f0f\u6ce8\u5165\uff1a @Before public void init () { MockitoAnnotations . initMocks ( this ); } MockitoJUnit.rule() public class MockitoInitWithMockitoJUnitRuleUnitTest { @Rule public MockitoRule initRule = MockitoJUnit . rule (); ... } @Mock \u00b6 Mockito \u4f7f\u7528\u6700\u5e7f\u6cdb\u7684\u6ce8\u91ca\u662f @Mock \u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 @Mock \u521b\u5efa\u548c\u6ce8\u5165 mock \u5b9e\u4f8b\uff0c\u800c\u4e0d\u5fc5\u624b\u52a8\u8c03\u7528 Mockito.mock \u3002 \u4f8b\u5982: @Mock List < String > mockedList ; @Test public void whenUseMockAnnotation_thenMockIsInjected () { mockedList . add ( \"one\" ); Mockito . verify ( mockedList ). add ( \"one\" ); assertEquals ( 0 , mockedList . size ()); Mockito . when ( mockedList . size ()). thenReturn ( 100 ); assertEquals ( 100 , mockedList . size ()); } \u7b49\u540c\u4e8e @mock : @Test public void whenNotUseMockAnnotation_thenCorrect () { List mockList = Mockito . mock ( ArrayList . class ); mockList . add ( \"one\" ); Mockito . verify ( mockList ). add ( \"one\" ); assertEquals ( 0 , mockList . size ()); Mockito . when ( mockList . size ()). thenReturn ( 100 ); assertEquals ( 100 , mockList . size ()); } @Spy \u00b6 @Spy \u6ce8\u91ca\u7528\u4e8e\u76d1\u89c6\u73b0\u6709\u5b9e\u4f8b\u3002\u5141\u8bb8\u5728\u95f4\u8c0d\u5bf9\u8c61\u4e2d\u5bf9\u5b57\u6bb5\u5b9e\u4f8b\u8fdb\u884c\u5feb\u901f\u5305\u88c5\u3002 @Spy List < String > spiedList = new ArrayList < String > (); @Test public void whenUseSpyAnnotation_thenSpyIsInjectedCorrectly () { spiedList . add ( \"one\" ); spiedList . add ( \"two\" ); Mockito . verify ( spiedList ). add ( \"one\" ); Mockito . verify ( spiedList ). add ( \"two\" ); assertEquals ( 2 , spiedList . size ()); Mockito . doReturn ( 100 ). when ( spiedList ). size (); assertEquals ( 100 , spiedList . size ()); } \u5728\u4ee5\u4e0a\u793a\u4f8b\u4e2d: \u4f7f\u7528 List \u771f\u6b63\u7684 add() \u65b9\u6cd5\u6dfb\u52a0\u5143\u7d20\u5230\u771f\u6b63\u7684 ArrayList \u4e2d\uff1b \u4f7f\u7528 Mockito.doReturn() \u586b\u5145 spiedList.size() \u65b9\u6cd5\u8fd4\u56de 100 \u800c\u4e0d\u662f 2 @Captor \u00b6 ArgumentCaptor \u662f\u4e00\u4e2a\u53c2\u6570\u5339\u914d\u5668\u7684\u7279\u6b8a\u5b9e\u73b0\uff0c\u5b83\u4e3a\u8fdb\u4e00\u6b65\u7684\u65ad\u8a00\u6765\u6355\u83b7\u53c2\u6570\u503c\u3002\u800c @Captor \u662f\u5176\u5efa\u8bae\u505a\u6cd5 @Test public void whenNotUseCaptorAnnotation_thenCorrect () { List mockList = Mockito . mock ( List . class ); ArgumentCaptor < String > arg = ArgumentCaptor . forClass ( String . class ); mockList . add ( \"one\" ); Mockito . verify ( mockList ). add ( arg . capture ()); assertEquals ( \"one\" , arg . getValue ()); } @Captor \u7684\u505a\u6cd5: @Mock List mockedList ; @Captor ArgumentCaptor argCaptor ; @Test public void whenUseCaptorAnnotation_thenTheSam () { mockedList . add ( \"one\" ); Mockito . verify ( mockedList ). add ( argCaptor . capture ()); assertEquals ( \"one\" , argCaptor . getValue ()); } @InjectMocks \u00b6 \u81ea\u52a8\u5411\u6d4b\u8bd5\u5bf9\u8c61\u6ce8\u5165\u6a21\u62df\u6216\u95f4\u8c0d\u5b57\u6bb5 \u6ce8\u610f, @injectmocks \u4e5f\u53ef\u4ee5\u4e0e @Spy \u6ce8\u91ca\u7ed3\u5408\u4f7f\u7528\uff0c\u8fd9\u610f\u5473\u7740 Mockito \u5c06\u628a mock \u6ce8\u5165\u5230\u6d4b\u8bd5\u7684\u90e8\u5206 mock \u4e2d\u3002\u8fd9\u79cd\u590d\u6742\u6027\u662f\u53e6\u4e00\u4e2a\u5f88\u597d\u7684\u7406\u7531\uff0c\u8bf4\u660e\u4e3a\u4ec0\u4e48\u5e94\u8be5\u53ea\u4f7f\u7528\u90e8\u5206\u6a21\u62df\u4f5c\u4e3a\u6700\u540e\u624b\u6bb5 @Mock Map < String , String > wordMap ; @InjectMocks MyDictionary dic = new MyDictionary (); @Test public void whenUseInjectMocksAnnotation_thenCorrect () { Mockito . when ( wordMap . get ( \"aWord\" )). thenReturn ( \"aMeaning\" ); assertEquals ( \"aMeaning\" , dic . getMeaning ( \"aWord\" )); } mock \u9a8c\u8bc1 \u00b6 \u9a8c\u8bc1 mock \u5bf9\u8c61\u662f\u5426\u8c03\u7528 List < String > mockedList = mock ( MyList . class ); mockedList . size (); verify ( mockedList ). size (); \u9a8c\u8bc1\u4e0e mock \u5bf9\u8c61\u8c03\u7528\u6b21\u6570: List < String > mockedList = mock ( MyList . class ); mockedList . size (); verify ( mockedList , times ( 1 )). size (); \u9a8c\u8bc1\u65e0\u8c03\u7528: List < String > mockedList = mock ( MyList . class ); verifyNoInteractions ( mockedList ); \u9a8c\u8bc1\u6ca1\u6709\u5728\u6307\u5b9a\u65b9\u6cd5\u4e0a\u53d1\u751f\u8c03\u7528: List < String > mockedList = mock ( MyList . class ); verify ( mockedList , times ( 0 )). size (); \u9a8c\u8bc1\u9664\u6b64\u4e4b\u5916\u65e0\u5176\u4ed6\u8c03\u7528: List < String > mockedList = mock ( MyList . class ); mockedList . size (); mockedList . clear (); verify ( mockedList ). size (); verifyNoMoreInteractions ( mockedList ); \u9a8c\u8bc1\u8c03\u7528\u987a\u5e8f: List < String > mockedList = mock ( MyList . class ); mockedList . size (); mockedList . add ( \"a parameter\" ); mockedList . clear (); InOrder inOrder = Mockito . inOrder ( mockedList ); inOrder . verify ( mockedList ). size (); inOrder . verify ( mockedList ). add ( \"a parameter\" ); inOrder . verify ( mockedList ). clear (); \u9a8c\u8bc1\u65e0\u8c03\u7528: freesta < String > mockedList = mock ( MyList . class ); mockedList . size (); verify ( mockedList , never ()). clear (); \u9a8c\u8bc1\u4ea4\u4e92\u81f3\u5c11\u53d1\u751f\u4e86\u4e00\u5b9a\u6b21\u6570: List < String > mockedList = mock ( MyList . class ); mockedList . clear (); mockedList . clear (); mockedList . clear (); verify ( mockedList , atLeast ( 1 )). clear (); verify ( mockedList , atMost ( 10 )). clear (); \u9a8c\u8bc1\u4f7f\u7528\u4e86\u6307\u5b9a\u7684\u503c\u53c2\u5165\u4e86\u8c03\u7528 List < String > mockedList = mock ( MyList . class ); mockedList . add ( \"test\" ); verify ( mockedList ). add ( \"test\" ); \u9a8c\u8bc1\u53c2\u6570\u8303\u56f4 List < String > mockedList = mock ( MyList . class ); mockedList . add ( \"test\" ); verify ( mockedList ). add ( anyString ()); \u4f7f\u7528\u53c2\u6570\u6355\u83b7\u6765\u9a8c\u8bc1\u4ea4\u4e92: List < String > mockedList = mock ( MyList . class ); mockedList . addAll ( Lists . < String > newArrayList ( \"someElement\" )); ArgumentCaptor < List > argumentCaptor = ArgumentCaptor . forClass ( List . class ); verify ( mockedList ). addAll ( argumentCaptor . capture ()); List < String > capturedArgument = argumentCaptor . < List < String >> getValue (); assertThat ( capturedArgument , hasItem ( \"someElement\" ));","title":"\u6d4b\u8bd5"},{"location":"project/advance/testing/#_1","text":"\u6d4b\u8bd5\u7684\u7b2c\u4e00\u90e8\u5206\u662f\u5355\u5143\u6d4b\u8bd5\uff0c\u5b83\u5c06\u6839\u636e\u8bbe\u8ba1\u9636\u6bb5\u5b8c\u6210\u7684\u89c4\u8303\u81ea\u884c\u6d4b\u8bd5\u8be5\u6a21\u5757\u3002\u4e00\u65e6\u5b8c\u6210\uff0c\u6211\u4eec\u5c31\u5f00\u59cb\u8fdb\u884c\u96c6\u6210\u6d4b\u8bd5\uff0c\u5c06\u5404\u79cd\u6a21\u5757\u7ec4\u5408\u5728\u4e00\u8d77\uff0c\u6216\u8005\u6574\u5408\u5230\u6574\u4e2a\u7cfb\u7edf\u4e2d\uff0c\u6216\u8005\u6574\u5408\u5230\u91cd\u8981\u7684\u5b50\u7cfb\u7edf\u4e2d\u3002 \u987e\u540d\u601d\u4e49\uff0c\u96c6\u6210\u6d4b\u8bd5\u7684\u91cd\u70b9\u662f\u6d4b\u8bd5\u8bb8\u591a\u5355\u72ec\u5f00\u53d1\u7684\u6a21\u5757\u662f\u5426\u6309\u9884\u671f\u534f\u540c\u5de5\u4f5c\u3002\u5b83\u662f\u901a\u8fc7\u6fc0\u6d3b\u8bb8\u591a\u6a21\u5757\u5e76\u5bf9\u6240\u6709\u6a21\u5757\u8fd0\u884c\u66f4\u9ad8\u7ea7\u522b\u7684\u6d4b\u8bd5\u6765\u6267\u884c\u7684\uff0c\u4ee5\u786e\u4fdd\u5b83\u4eec\u4e00\u8d77\u8fd0\u884c\u3002\u8fd9\u4e9b\u6a21\u5757\u53ef\u4ee5\u662f\u5355\u4e2a\u53ef\u6267\u884c\u6587\u4ef6\u7684\u4e00\u90e8\u5206\uff0c\u4e5f\u53ef\u4ee5\u662f\u5355\u72ec\u7684\u3002 \u5728\u73b0\u6709\u5b9e\u9645\u9879\u76ee\u4e2d\uff0c\u5f80\u5f80\u5bf9 \u6570\u636e\u5e93\u7684 \u96c6\u6210\u6d4b\u8bd5 \u662f\u4e00\u4e2a\u96be\u70b9\u3002\u4e0b\u9762 \u5c31 mysql \u548c mongodb\u7684\u96c6\u6210\u6d4b\u8bd5\uff0c\u4ecb\u7ecd\u4e24\u79cd\u65b9\u6848 database rider \u548c Embedded MongoDB","title":"\u96c6\u6210\u6d4b\u8bd5"},{"location":"project/advance/testing/#database-rider","text":"\u73b0\u65b9\u6848\u7531 spring test + database rider + Junit 5 \u7ec4\u6210\uff0c\u56e0\u6b64\u9996\u5148\u5728\u4f9d\u8d56\u4e2d\u6dfb\u52a0\u5982\u4e0b\u4e3b\u8981\u4f9d\u8d56: integrationTestImplementation 'com.h2database:h2' integrationTestImplementation 'com.github.database-rider:rider-core:1.32.0' integrationTestImplementation 'com.github.database-rider:rider-spring:1.32.0' integrationTestImplementation 'org.springframework.boot:spring-boot-starter-test' \u5728\u4ee5\u4e0a\u4f9d\u8d56\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528 h2 \u5185\u5b58\u6570\u636e\u5e93\u4f5c\u4e3a\u96c6\u6210\u6d4b\u8bd5\u7684\u5173\u7cfb\u578b\u6570\u636e\u5e93\uff0c\u4ed6\u65b9\u4fbf\u4e14\u5feb\u901f\uff1b rider-core \u662f\u5176\u4ed6 database rider \u7279\u6027\u7684\u57fa\u7840\uff1b rider-spring \u7528\u4e8e\u5bf9spring \u6d4b\u8bd5\u73af\u5883\u7684\u652f\u6301\uff1b \u65b9\u4fbf\u8d77\u89c1\u590d\u7528 \u521d\u7ea7\u6559\u7a0b \u4e2d\u7684\u9879\u76ee\u4f5c\u4e3a\u96c6\u6210\u6d4b\u8bd5\u9879\u76ee\u73af\u5883\u3002\u7528 databse-rider \u6d4b\u8bd5\u73af\u5883\u6d4b\u8bd5 OwnerServiceImpl \u7684\u96c6\u6210\u903b\u8f91\uff1b \u786e\u8ba4\u4ee5\u4e0a\u4f9d\u8d56\u5df2\u7ecf\u52a0\u5165\uff1b \u5728 src \u521b\u5efa integeration-test \u76ee\u5f55\u7528\u4e8e\u5b58\u653e\u96c6\u6210\u6d4b\u8bd5\u6e90\u4ee3\u7801\u548c\u9759\u6001\u8d44\u6e90\uff1b \u5728 integeration-test \u521b\u5efa OwnerServiceImpl \u540c\u7ea7\u76ee\u5f55\uff1b \u521b\u5efa OwnerServiceImplTest.java \u6d4b\u8bd5\u7c7b\uff0c\u6ce8\u610f\u547d\u540d\uff1b integration-test/java/cn/tendata/jstart/service/ \u2514\u2500\u2500 OwnerServiceImplTest.java \u5728 integration-test/resources \u76ee\u5f55\u521b\u5efa datasets \u7528\u4e8e\u521b\u5efadatabse rider \u5916\u7f6e\u6d4b\u8bd5\u6570\u636e\uff1b \u5728 datasets \u65b0\u5efa owners.yml \u6587\u4ef6\uff0c\u589e\u52a0\u4ee5\u4e0b\u5185\u5bb9: owners: - id: 1 first_name: \u5f20 last_name: \u7fe0\u5c71 address: \u4e25\u4e2d\u8def374\u8def city: \u4e0a\u6d77 telephone: 123456 deleted: 0 - id: 2 first_name: \u674e last_name: \u5143\u9738 address: \u6d66\u4e1c\u5357\u8def58\u53f7 city: \u4e0a\u6d77 telephone: 9999 deleted: 0 \u6309\u7167\u6d4b\u8bd5\u4e00\u822c\u539f\u5219\u7f16\u5199\u6d4b\u8bd5\u4ee3\u7801: @DBRider @SpringBootTest @ExtendWith ({ SpringExtension . class }) @DBUnit ( cacheConnection = false , leakHunter = true ) class OwnerServiceImplTest { @Autowired private OwnerService service ; @DataSet ( \"owners.yml\" ) @Test void getAll () { Page < Owner > actualQuery = service . getAll ( new Owner (), Pageable . ofSize ( 10 )); Assertions . assertAll (() -> { MatcherAssert . assertThat ( actualQuery . getContent (), Matchers . hasSize ( 2 )); MatcherAssert . assertThat ( actualQuery . getContent (). get ( 0 ), Matchers . hasProperty ( \"firstName\" , Is . is ( \"\u5f20\" ))); MatcherAssert . assertThat ( actualQuery . getContent (). get ( 0 ), Matchers . hasProperty ( \"lastName\" , Is . is ( \"\u7fe0\u5c71\" ))); }); } } \u4ee5\u4e0a\u6d4b\u8bd5\u6e90\u7801\u4e2d \u4f7f\u7528 @SpringBootTest \u6ce8\u89e3\u96c6\u6210spring boot \u96c6\u6210\u6d4b\u8bd5\u73af\u5883\u3002 @ExtendWith({SpringExtension.class}) \u652f\u6301 srping5 + junit5\uff1b @DBRider \u53ef\u914d\u7f6e\u591a\u6570\u636e\u6e90\uff0c\u5728\u8fd9\u91cc\u9ed8\u8ba4\u4f7f\u7528\u9ed8\u8ba4\u6570\u636e\u5e93 h2;","title":"Database Rider"},{"location":"project/advance/testing/#flapdoodles-embedded-mongodb","text":"\u4e0e\u4efb\u4f55\u5176\u4ed6\u6301\u4e45\u6027\u6280\u672f\u4e00\u6837\uff0c\u80fd\u591f\u8f7b\u677e\u5730\u6d4b\u8bd5\u6570\u636e\u5e93\u4e0e\u5e94\u7528\u7a0b\u5e8f\u7684\u5176\u4f59\u90e8\u5206\u7684\u96c6\u6210\u662f\u81f3\u5173\u91cd\u8981\u7684\u3002\u503c\u5f97\u5e86\u5e78\u7684\u662f\uff0cSpring Boot \u5141\u8bb8\u6211\u4eec\u8f7b\u677e\u5730\u7f16\u5199\u8fd9\u7c7b\u6d4b\u8bd5\u3002 \u6838\u5fc3\u4f9d\u8d56\uff1a <dependency> <groupId> de.flapdoodle.embed </groupId> <artifactId> de.flapdoodle.embed.mongo </artifactId> <scope> test </scope> </dependency> \u5728\u6dfb\u52a0 de.flapdoodle.embed.mongo \u4f9d\u8d56\u9879\u5230 Spring Boot \u4e4b\u540e\uff0c\u5728\u8fd0\u884c\u6d4b\u8bd5\u65f6\u5c06\u81ea\u52a8\u5c1d\u8bd5\u4e0b\u8f7d\u5e76\u542f\u52a8\u5d4c\u5165\u5f0f MongoDB \u5bf9\u4e8e\u6bcf\u4e2a\u7248\u672c\uff0c\u53ea\u4e0b\u8f7d\u5305\u4e00\u6b21\uff0c\u4ee5\u4fbf\u540e\u7eed\u6d4b\u8bd5\u8fd0\u884c\u5f97\u66f4\u5feb\u3002 \u6d4b\u8bd5\u793a\u4f8b\u5982\u4e0b: @DataMongoTest @ExtendWith ( SpringExtension . class ) public class MongoDbSpringIntegrationTest { @DisplayName ( \"given object to save\" + \" when save object using MongoDB template\" + \" then object is saved\" ) @Test public void test ( @Autowired MongoTemplate mongoTemplate ) { // given DBObject objectToSave = BasicDBObjectBuilder . start () . add ( \"key\" , \"value\" ) . get (); // when mongoTemplate . save ( objectToSave , \"collection\" ); // then assertThat ( mongoTemplate . findAll ( DBObject . class , \"collection\" )). extracting ( \"key\" ) . containsOnly ( \"value\" ); } } \u6211\u4eec\u53ef\u4ee5\u5728\u63a7\u5236\u53f0\u53d1\u73b0\u4ee5\u4e0b\u65e5\u5fd7\uff0c\u5d4c\u5165\u5f0f\u6570\u636e\u5e93\u662f\u7531 Spring \u81ea\u52a8\u542f\u52a8\u7684\uff1a ...Starting MongodbExampleApplicationTests on arroyo with PID 10413... Springboot \u4f7f\u5f97\u8fd0\u884c\u6d4b\u8bd5\u4ee5\u9a8c\u8bc1\u6b63\u786e\u7684\u6587\u6863\u6620\u5c04\u548c\u6570\u636e\u5e93\u96c6\u6210\u53d8\u5f97\u975e\u5e38\u7b80\u5355\u3002\u901a\u8fc7\u6dfb\u52a0\u6b63\u786e\u7684 Maven \u4f9d\u8d56\u9879\uff0c\u6211\u4eec\u53ef\u4ee5\u7acb\u5373\u5728 Spring Boot \u96c6\u6210\u6d4b\u8bd5\u4e2d\u4f7f\u7528 MongoDB \u7ec4\u4ef6\u3002 \u6211\u4eec\u9700\u8981\u8bb0\u4f4f\uff0c\u5d4c\u5165\u5f0f MongoDB \u670d\u52a1\u5668\u4e0d\u80fd\u88ab\u8ba4\u4e3a\u662f \"\u771f\u5b9e\" \u670d\u52a1\u5668\u7684\u66ff\u4ee3\u54c1\u3002","title":"Flapdoodle's embedded MongoDB"},{"location":"project/advance/testing/#mockito","text":"Mockito \u662f\u4e00\u4e2a\u6a21\u62df\u6846\u67b6\uff0c\u57fa\u4e8e JAVA \uff0c\u7528\u4e8e\u5bf9 JAVA \u5e94\u7528\u7a0b\u5e8f\u8fdb\u884c\u6709\u6548\u7684\u5355\u5143\u6d4b\u8bd5\u3002Mockito \u7528\u4e8e\u6a21\u62df\u63a5\u53e3\uff0c\u4ee5\u4fbf\u53ef\u4ee5\u5c06\u865a\u62df\u529f\u80fd\u6dfb\u52a0\u5230\u53ef\u7528\u4e8e\u5355\u5143\u6d4b\u8bd5\u7684\u6a21\u62df\u63a5\u53e3\u4e2d\u3002 Mockito \u6709\u52a9\u4e8e\u65e0\u7f1d\u5730\u521b\u5efa\u6a21\u62df\u5bf9\u8c61\u3002\u5b83\u4f7f\u7528 Java \u53cd\u5c04\u6765\u4e3a\u7ed9\u5b9a\u7684\u63a5\u53e3\u521b\u5efa\u6a21\u62df\u5bf9\u8c61\u3002\u6a21\u62df\u5bf9\u8c61\u53ea\u4e0d\u8fc7\u662f\u5b9e\u9645\u5b9e\u73b0\u7684\u4ee3\u7406 Mockito \u7684\u597d\u5904: No Handwriting - \u65e0\u9700\u81ea\u5df1\u7f16\u5199\u6a21\u62df\u5bf9\u8c61\u3002 Refactoring Safe - \u91cd\u547d\u540d\u63a5\u53e3\u65b9\u6cd5\u540d\u79f0\u6216\u91cd\u65b0\u6392\u5e8f\u53c2\u6570\u4e0d\u4f1a\u7834\u574f\u6d4b\u8bd5\u4ee3\u7801\uff0c\u56e0\u4e3a Mocks \u662f\u5728\u8fd0\u884c\u65f6\u521b\u5efa\u7684\u3002 \u8fd4\u56de\u503c\u652f\u6301- \u652f\u6301\u8fd4\u56de\u503c\u3002 \u652f\u6301\u5f02\u5e38\u3002 \u652f\u6301\u68c0\u67e5\u65b9\u6cd5\u8c03\u7528\u7684\u987a\u5e8f\u3002 \u652f\u6301\u4f7f\u7528\u6ce8\u91ca\u521b\u5efa\u6a21\u62df\u3002 \u6838\u5fc3\u4f9d\u8d56: testImplementation \"org.mockito:mockito-core:3.+\"","title":"mockito \u6846\u67b6"},{"location":"project/advance/testing/#mockito_1","text":"\u542f\u7528\u542f\u7528 mockito \u76f8\u5173\u6ce8\u91ca\u6709\u4e09\u79cd\u65b9\u6cd5: MockitoJUnitRunner.class @RunWith ( MockitoJUnitRunner . class ) public class MockitoAnnotationTest { ... } \u4f7f\u7528\u7f16\u7a0b\u65b9\u5f0f\u6ce8\u5165\uff1a @Before public void init () { MockitoAnnotations . initMocks ( this ); } MockitoJUnit.rule() public class MockitoInitWithMockitoJUnitRuleUnitTest { @Rule public MockitoRule initRule = MockitoJUnit . rule (); ... }","title":"\u542f\u7528 mockito \u76f8\u5173\u6ce8\u91ca"},{"location":"project/advance/testing/#mock","text":"Mockito \u4f7f\u7528\u6700\u5e7f\u6cdb\u7684\u6ce8\u91ca\u662f @Mock \u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 @Mock \u521b\u5efa\u548c\u6ce8\u5165 mock \u5b9e\u4f8b\uff0c\u800c\u4e0d\u5fc5\u624b\u52a8\u8c03\u7528 Mockito.mock \u3002 \u4f8b\u5982: @Mock List < String > mockedList ; @Test public void whenUseMockAnnotation_thenMockIsInjected () { mockedList . add ( \"one\" ); Mockito . verify ( mockedList ). add ( \"one\" ); assertEquals ( 0 , mockedList . size ()); Mockito . when ( mockedList . size ()). thenReturn ( 100 ); assertEquals ( 100 , mockedList . size ()); } \u7b49\u540c\u4e8e @mock : @Test public void whenNotUseMockAnnotation_thenCorrect () { List mockList = Mockito . mock ( ArrayList . class ); mockList . add ( \"one\" ); Mockito . verify ( mockList ). add ( \"one\" ); assertEquals ( 0 , mockList . size ()); Mockito . when ( mockList . size ()). thenReturn ( 100 ); assertEquals ( 100 , mockList . size ()); }","title":"@Mock"},{"location":"project/advance/testing/#spy","text":"@Spy \u6ce8\u91ca\u7528\u4e8e\u76d1\u89c6\u73b0\u6709\u5b9e\u4f8b\u3002\u5141\u8bb8\u5728\u95f4\u8c0d\u5bf9\u8c61\u4e2d\u5bf9\u5b57\u6bb5\u5b9e\u4f8b\u8fdb\u884c\u5feb\u901f\u5305\u88c5\u3002 @Spy List < String > spiedList = new ArrayList < String > (); @Test public void whenUseSpyAnnotation_thenSpyIsInjectedCorrectly () { spiedList . add ( \"one\" ); spiedList . add ( \"two\" ); Mockito . verify ( spiedList ). add ( \"one\" ); Mockito . verify ( spiedList ). add ( \"two\" ); assertEquals ( 2 , spiedList . size ()); Mockito . doReturn ( 100 ). when ( spiedList ). size (); assertEquals ( 100 , spiedList . size ()); } \u5728\u4ee5\u4e0a\u793a\u4f8b\u4e2d: \u4f7f\u7528 List \u771f\u6b63\u7684 add() \u65b9\u6cd5\u6dfb\u52a0\u5143\u7d20\u5230\u771f\u6b63\u7684 ArrayList \u4e2d\uff1b \u4f7f\u7528 Mockito.doReturn() \u586b\u5145 spiedList.size() \u65b9\u6cd5\u8fd4\u56de 100 \u800c\u4e0d\u662f 2","title":"@Spy"},{"location":"project/advance/testing/#captor","text":"ArgumentCaptor \u662f\u4e00\u4e2a\u53c2\u6570\u5339\u914d\u5668\u7684\u7279\u6b8a\u5b9e\u73b0\uff0c\u5b83\u4e3a\u8fdb\u4e00\u6b65\u7684\u65ad\u8a00\u6765\u6355\u83b7\u53c2\u6570\u503c\u3002\u800c @Captor \u662f\u5176\u5efa\u8bae\u505a\u6cd5 @Test public void whenNotUseCaptorAnnotation_thenCorrect () { List mockList = Mockito . mock ( List . class ); ArgumentCaptor < String > arg = ArgumentCaptor . forClass ( String . class ); mockList . add ( \"one\" ); Mockito . verify ( mockList ). add ( arg . capture ()); assertEquals ( \"one\" , arg . getValue ()); } @Captor \u7684\u505a\u6cd5: @Mock List mockedList ; @Captor ArgumentCaptor argCaptor ; @Test public void whenUseCaptorAnnotation_thenTheSam () { mockedList . add ( \"one\" ); Mockito . verify ( mockedList ). add ( argCaptor . capture ()); assertEquals ( \"one\" , argCaptor . getValue ()); }","title":"@Captor"},{"location":"project/advance/testing/#injectmocks","text":"\u81ea\u52a8\u5411\u6d4b\u8bd5\u5bf9\u8c61\u6ce8\u5165\u6a21\u62df\u6216\u95f4\u8c0d\u5b57\u6bb5 \u6ce8\u610f, @injectmocks \u4e5f\u53ef\u4ee5\u4e0e @Spy \u6ce8\u91ca\u7ed3\u5408\u4f7f\u7528\uff0c\u8fd9\u610f\u5473\u7740 Mockito \u5c06\u628a mock \u6ce8\u5165\u5230\u6d4b\u8bd5\u7684\u90e8\u5206 mock \u4e2d\u3002\u8fd9\u79cd\u590d\u6742\u6027\u662f\u53e6\u4e00\u4e2a\u5f88\u597d\u7684\u7406\u7531\uff0c\u8bf4\u660e\u4e3a\u4ec0\u4e48\u5e94\u8be5\u53ea\u4f7f\u7528\u90e8\u5206\u6a21\u62df\u4f5c\u4e3a\u6700\u540e\u624b\u6bb5 @Mock Map < String , String > wordMap ; @InjectMocks MyDictionary dic = new MyDictionary (); @Test public void whenUseInjectMocksAnnotation_thenCorrect () { Mockito . when ( wordMap . get ( \"aWord\" )). thenReturn ( \"aMeaning\" ); assertEquals ( \"aMeaning\" , dic . getMeaning ( \"aWord\" )); }","title":"@InjectMocks"},{"location":"project/advance/testing/#mock_1","text":"\u9a8c\u8bc1 mock \u5bf9\u8c61\u662f\u5426\u8c03\u7528 List < String > mockedList = mock ( MyList . class ); mockedList . size (); verify ( mockedList ). size (); \u9a8c\u8bc1\u4e0e mock \u5bf9\u8c61\u8c03\u7528\u6b21\u6570: List < String > mockedList = mock ( MyList . class ); mockedList . size (); verify ( mockedList , times ( 1 )). size (); \u9a8c\u8bc1\u65e0\u8c03\u7528: List < String > mockedList = mock ( MyList . class ); verifyNoInteractions ( mockedList ); \u9a8c\u8bc1\u6ca1\u6709\u5728\u6307\u5b9a\u65b9\u6cd5\u4e0a\u53d1\u751f\u8c03\u7528: List < String > mockedList = mock ( MyList . class ); verify ( mockedList , times ( 0 )). size (); \u9a8c\u8bc1\u9664\u6b64\u4e4b\u5916\u65e0\u5176\u4ed6\u8c03\u7528: List < String > mockedList = mock ( MyList . class ); mockedList . size (); mockedList . clear (); verify ( mockedList ). size (); verifyNoMoreInteractions ( mockedList ); \u9a8c\u8bc1\u8c03\u7528\u987a\u5e8f: List < String > mockedList = mock ( MyList . class ); mockedList . size (); mockedList . add ( \"a parameter\" ); mockedList . clear (); InOrder inOrder = Mockito . inOrder ( mockedList ); inOrder . verify ( mockedList ). size (); inOrder . verify ( mockedList ). add ( \"a parameter\" ); inOrder . verify ( mockedList ). clear (); \u9a8c\u8bc1\u65e0\u8c03\u7528: freesta < String > mockedList = mock ( MyList . class ); mockedList . size (); verify ( mockedList , never ()). clear (); \u9a8c\u8bc1\u4ea4\u4e92\u81f3\u5c11\u53d1\u751f\u4e86\u4e00\u5b9a\u6b21\u6570: List < String > mockedList = mock ( MyList . class ); mockedList . clear (); mockedList . clear (); mockedList . clear (); verify ( mockedList , atLeast ( 1 )). clear (); verify ( mockedList , atMost ( 10 )). clear (); \u9a8c\u8bc1\u4f7f\u7528\u4e86\u6307\u5b9a\u7684\u503c\u53c2\u5165\u4e86\u8c03\u7528 List < String > mockedList = mock ( MyList . class ); mockedList . add ( \"test\" ); verify ( mockedList ). add ( \"test\" ); \u9a8c\u8bc1\u53c2\u6570\u8303\u56f4 List < String > mockedList = mock ( MyList . class ); mockedList . add ( \"test\" ); verify ( mockedList ). add ( anyString ()); \u4f7f\u7528\u53c2\u6570\u6355\u83b7\u6765\u9a8c\u8bc1\u4ea4\u4e92: List < String > mockedList = mock ( MyList . class ); mockedList . addAll ( Lists . < String > newArrayList ( \"someElement\" )); ArgumentCaptor < List > argumentCaptor = ArgumentCaptor . forClass ( List . class ); verify ( mockedList ). addAll ( argumentCaptor . capture ()); List < String > capturedArgument = argumentCaptor . < List < String >> getValue (); assertThat ( capturedArgument , hasItem ( \"someElement\" ));","title":"mock \u9a8c\u8bc1"},{"location":"project/basic/developments/","text":"\u76ee\u6807 \u00b6 \u4f7f\u7528 spring boot + gradle \u6846\u67b6\u548c\u5de5\u5177\u521b\u5efa\u4e00\u4e2a\u7b80\u5355\u7684 curd \u529f\u80fd\u6a21\u5757\uff1b \u91c7\u7528 \"\u5ba0\u7269\u533b\u9662\" \u9879\u76ee\u4e2d\u7684\u4e3b\u4eba\u7ba1\u7406\u529f\u80fd\u6765\u793a\u4f8b\uff1b \u672c\u7ae0\u8282\u8fd8\u5305\u542b\u57fa\u672c\u7684 spring boot \u5b9e\u73b0 \u548c\u6570\u636e\u6e90\u914d\u7f6e\u7b49\uff1b \u5728\u672c\u7ae0\u8282\uff0c\u91c7\u7528 \"\u4e3b\u4eba\" \u4e5f\u5c31\u662f \"owner\" \u57df \u6765\u5f00\u59cb\u4e00\u4e2a\u7b80\u5355\u7684\u5f00\u53d1\u3002 \u9700\u6c42: \u53ef\u4f7f\u7528 \"\u59d3\u540d\",\"\u5730\u5740\"\u5b57\u6bb5\u8fdb\u884c\u6a21\u7cca\u641c\u7d22\u4e3b\u4eba\u5217\u8868\uff1b \u9700\u8981\u65b0\u589e\u4e3b\u4eba\u529f\u80fd\uff1b \u9700\u8981\u4fee\u6539\u4e3b\u4eba\u4fe1\u606f\u529f\u80fd\uff1b \u9700\u8981\u5220\u9664\u4e3b\u4eba\u529f\u80fd\uff1b \u539f\u5219 \u00b6 \u6784\u5efaAPI \u00b6 \u6784\u5efaAPI \u5f80\u5f80\u6709\u4e09\u79cd\u8bbe\u8ba1\u98ce\u683c\uff1a code-first , api-first , design-first ; \u5728\u5f80\u540e\u7684\u5f00\u53d1\u4e2d\uff0c\u540e\u7aef\u5f00\u53d1\u4f1a\u4ee5 api-first \u4f5c\u4e3a\u4e3b\u8981\u98ce\u683c\u3002\u5f15\u5bfc\u5176\u4ed6\u804c\u80fd\u7ec4 \u5e76\u5411 design-first \u6a21\u5f0f\u770b\u9f50. code-first \u4ee3\u7801\u4f18\u5148\u7684\u65b9\u6cd5\u5f80\u5f80\u662f\u6839\u636e\u4e1a\u52a1\u9700\u6c42\u6765\u7f16\u5199 API\u3002\u4ed6\u901a\u8fc7\u7f16\u7801\uff0c\u6839\u636e\u9700\u6c42\u5b9e\u73b0API\uff0c\u7136\u540e\u4f7f\u7528\u6ce8\u91ca\u521b\u5efa API \u63cf\u8ff0\uff0c\u6216\u8005\u624b\u52a8\u4ece\u5934\u5f00\u59cb\u7f16\u5199\u63cf\u8ff0\u3002\u4ee3\u7801\u4f18\u5148\u7684\u65b9\u6cd5\u5e76\u4e0d\u610f\u5473\u7740\u4e0d\u4f1a\u6709 API \u8bbe\u8ba1,\u4ed6\u4f1a\u5c06\u8bbe\u8ba1\u8fc7\u7a0b\u5206\u5e03\u5728\u6ce8\u91ca\u7684\u5404\u4e2a\u5730\u65b9\u3002 api-first API-first \u65b9\u6cd5\u610f\u5473\u7740\u5c06 api \u89c6\u4e3a\u7ec4\u7ec7\u4f9d\u8d56\u7684\u6700\u91cd\u8981\u7684\u5173\u952e\u4e1a\u52a1\u8d44\u4ea7\u3002 \u8fd9\u79cd\u65b9\u6cd5\u5305\u62ec\u56f4\u7ed5\u4e00\u4e2a\u7528\u7c7b\u4f3c OpenAPI \u7684 API \u63cf\u8ff0\u8bed\u8a00\u7f16\u5199\u7684\u5951\u7ea6\u6765\u8bbe\u8ba1\u6bcf\u4e2a API\u3002\u4ece\u4e00\u4e2a API \u5951\u7ea6\u5f00\u59cb\uff0c\u53ef\u4ee5\u786e\u4fdd\u4ea7\u751f\u7684 API \u7684\u4e00\u81f4\u6027\u3001\u53ef\u91cd\u7528\u6027\u548c\u5e7f\u6cdb\u7684\u4e92\u64cd\u4f5c\u6027\u3002 design-first \u8bbe\u8ba1\u4f18\u5148\uff0c\u9996\u5148\u610f\u5473\u7740\u5728\u7f16\u5199\u4efb\u4f55\u4ee3\u7801\u4e4b\u524d\uff0c\u7528\u4eba\u7c7b\u548c\u8ba1\u7b97\u673a\u90fd\u80fd\u7406\u89e3\u7684\u8fed\u4ee3\u65b9\u5f0f\u63cf\u8ff0\u6bcf\u4e2a API \u8bbe\u8ba1\u3002\u4f7f\u7528 API \u8bbe\u8ba1\u4f18\u5148\u7684\u65b9\u6cd5\uff0c\u6bcf\u4e2a\u56e2\u961f\u4f7f\u7528\u76f8\u540c\u7684\u8bbe\u8ba1\u8bed\u8a00\uff0c\u751a\u81f3\u4e8e\u4ed6\u4eec\u7684\u8bbe\u8ba1\u5de5\u5177\u4e5f\u8d8b\u4e8e\u76f8\u540c\u3002 Tip desgin-first \u5f80\u5f80\u88ab\u79f0\u4e3a \"\u9886\u57df\u9a71\u52a8\u8bbe\u8ba1\"\uff0c\u4f46\u5f80\u5f80\u9700\u8981\u5404\u804c\u80fd\u90e8\u95e8\u7edf\u4e00\u7684\u8bbe\u8ba1\u8bed\u8a00\u548c\u5de5\u5177\uff0c\u96be\u5ea6\u5f80\u5f80\u6bd4\u8f83\u5927\u3002 code \u00b6 \u6dfb\u52a0\u4f9d\u8d56\u9879 \u00b6 \u5728 \u9879\u76ee\u6784\u5efa\u5efa\u811a\u672c\u6587\u4ef6\u6dfb\u52a0\u5982\u4e0b \u4f9d\u8d56\u9879,\u7ed3\u679c\u5982\u4e0b: dependencies { implementation 'org.springframework.boot:spring-boot-starter-data-jpa' implementation 'com.h2database:h2' implementation 'org.springframework.boot:spring-boot-starter-web' implementation 'org.springframework.boot:spring-boot-starter-validation' implementation \"com.fasterxml.jackson.datatype:jackson-datatype-hibernate5\" implementation \"com.fasterxml.jackson.datatype:jackson-datatype-jsr310\" } \u5728\u4ee5\u4e0a\u4f9d\u8d56\u5e93\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u4e86\u5982\u4e0b\u4f9d\u8d56: spring web \uff08webmvc\uff09 web\u9879\u76ee\u5f00\u53d1 \u4f9d\u8d56\uff1b H2 \u5185\u5b58\u6570\u636e\u5e93\uff1b spring data jpa orm \u6846\u67b6\uff1b \u6570\u636e\u9a8c\u8bc1\u6846\u67b6\uff1b jsr310 \u7684 jackson \u65f6\u95f4\u6807\u51c6\u5e8f\u5217\u5316\u652f\u6301\uff1b \u589e\u52a0\u542f\u52a8\u5165\u53e3 \u00b6 \u5728 src\\main\\java\\cn\\tendata\\jstart \u65b0\u589e\u7a0b\u5e8f\u5165\u53e3\u7c7b\u6587\u4ef6 Application.java \uff08\u6ce8\u610f\u9996\u5148\u521b\u5efa cn/tendata/jstart \u76ee\u5f55\uff09\uff1a package cn.tendata.jstart ; import org.springframework.boot.SpringApplication ; import org.springframework.boot.autoconfigure.SpringBootApplication ; @SpringBootApplication public class Application { public static void main ( String [] args ) { SpringApplication . run ( Application . class , args ); } } \u5728 src\\main\\resources \u76ee\u5f55\u4e2d\u65b0\u5efa application.yml \u9879\u76ee\u5916\u90e8\u914d\u7f6e\u6587\u4ef6, \u5e76\u589e\u52a0\u5982\u4e0b\u5185\u5bb9: server: port: 8080 logging: file: path: logs/ level: root: INFO \u5728\u4ee5\u4e0a\u914d\u7f6e\u4e2d: \u5b9a\u4e49\u670d\u52a1\u7aef\u53e3\u4e3a 8080 ; \u65e5\u5fd7\u6587\u4ef6\u4f4d\u4e8e\u8fd0\u884c\u670d\u52a1\u6839\u76ee\u5f55\u7684 logs \u6587\u4ef6\u5939; \u5168\u5c40\u65e5\u5fd7\u7ea7\u522b \u4e3a info ; \u9a8c\u8bc1\uff1b \u5728\u7ec8\u7aef \u4f7f\u7528 ./gradlew bootRun ,\u67e5\u770b\u9879\u76ee\u662f\u5426\u53ef\u4ee5\u6b63\u5e38\u542f\u52a8\uff1b $ ./gradlew bootRun Starting a Gradle Daemon, 1 incompatible and 3 stopped Daemons could not be reused, use --status for details > Task :bootRun . ____ _ __ _ _ / \\\\ / ___ '_ __ _ _(_)_ __ __ _ \\ \\ \\ \\ ( ( )\\___ | ' _ | '_| | ' _ \\/ _ ` | \\ \\ \\ \\ \\\\ / ___ ) | | _ ) | | | | | || ( _ | | ) ) ) ) ' |____| .__|_| |_|_| |_\\__, | / / / / =========|_|==============|___/=/_/_/_/ :: Spring Boot :: (v2.6.7) 2022-05-16 13:41:36.332 INFO 12968 --- [ main] cn.tendata.jstart.Application : Starting Application using Java 11.0.10 on DESKTOP-TDFJPJJ with PID 12968 (C:\\Users\\luwei\\Desktop\\tendata\\kpi\\documents\\tendata-jst art\\build\\classes\\java\\main started by luwei in C:\\Users\\luwei\\Desktop\\tendata\\kpi\\documents\\tendata-jstart) 2022-05-16 13:41:36.337 INFO 12968 --- [ main] cn.tendata.jstart.Application : No active profile set, falling back to 1 default profile: \"default\" 2022-05-16 13:41:37.084 INFO 12968 --- [ main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode. 2022-05-16 13:41:37.104 INFO 12968 --- [ main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 7 ms. Found 0 JPA repository interfaces. 2022-05-16 13:41:37.977 INFO 12968 --- [ main] o.s.b.w.embedded.tomcat.TomcatWebServer : Tomcat initialized with port(s): 8080 (http) 2022-05-16 13:41:37.991 INFO 12968 --- [ main] o.apache.catalina.core.StandardService : Starting service [Tomcat] 2022-05-16 13:41:37.991 INFO 12968 --- [ main] org.apache.catalina.core.StandardEngine : Starting Servlet engine: [Apache Tomcat/9.0.62] 2022-05-16 13:41:38.137 INFO 12968 --- [ main] o.a.c.c.C.[Tomcat].[localhost].[/] : Initializing Spring embedded WebApplicationContext 2022-05-16 13:41:38.138 INFO 12968 --- [ main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1751 ms 2022-05-16 13:41:38.255 INFO 12968 --- [ main] com.zaxxer.hikari.HikariDataSource : HikariPool-1 - Starting... 2022-05-16 13:41:38.353 INFO 12968 --- [ main] com.zaxxer.hikari.HikariDataSource : HikariPool-1 - Start completed. 2022-05-16 13:41:38.396 INFO 12968 --- [ main] o.hibernate.jpa.internal.util.LogHelper : HHH000204: Processing PersistenceUnitInfo [name: default] 2022-05-16 13:41:38.439 INFO 12968 --- [ main] org.hibernate.Version : HHH000412: Hibernate ORM core version 5.6.8.Final 2022-05-16 13:41:38.603 INFO 12968 --- [ main] o.hibernate.annotations.common.Version : HCANN000001: Hibernate Commons Annotations {5.1.2.Final} 2022-05-16 13:41:38.717 INFO 12968 --- [ main] org.hibernate.dialect.Dialect : HHH000400: Using dialect: org.hibernate.dialect.H2Dialect 2022-05-16 13:41:38.939 INFO 12968 --- [ main] o.h.e.t.j.p.i.JtaPlatformInitiator : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform] 2022-05-16 13:41:38.947 INFO 12968 --- [ main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit ' default ' 2022-05-16 13:41:38.997 WARN 12968 --- [ main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly confi gure spring.jpa.open-in-view to disable this warning 2022-05-16 13:41:39.346 INFO 12968 --- [ main] o.s.b.w.embedded.tomcat.TomcatWebServer : Tomcat started on port(s): 8080 (http) with context path ' ' 2022 -05-16 13 :41:39.357 INFO 12968 --- [ main ] cn.tendata.jstart.Application : Started Application in 3 .742 seconds ( JVM running for 3 .994 ) 2022 -05-16 14 :09:11.548 WARN 12968 --- [ l-1 housekeeper ] com.zaxxer.hikari.pool.HikariPool : HikariPool-1 - Thread starvation or clock leap detected ( housekeeper delta = 16m32s918ms584?s900ns ) . < ========== ---> 80 % EXECUTING [ 41m 40s ] > :bootRun \u5982\u679c\u8fd0\u884c\u6b63\u5e38\u5219 Tip windows \u4f7f\u7528linux \u7ec8\u7aef\u6267\u884c gradle wrapper \u4efb\u52a1\u65f6\uff0c\u6709\u53ef\u80fd\u51fa\u73b0 \u7248\u672c\u4e0d\u5339\u914d\u7684\u95ee\u9898\uff1b Note windows \u4fee\u6539 \u73af\u5883\u53d8\u91cf\u540e\u6700\u597d\u91cd\u542f\u4e00\u4e0b\uff0c\u514d\u5f97\u6d6a\u8d39\u5927\u91cf\u7684\u65f6\u95f4\u82b1\u8d39\u5728\u672a\u77e5\u5f02\u5e38\u4e0a\u9762\uff1b API-first \u00b6 \u521b\u5efa openApi \u8bbe\u8ba1\u6587\u6863\u7ec4\u7ec7\u67b6\u6784\u76ee\u5f55\uff1b \u5728 src/main/resources \u76ee\u5f55\u4e0b\u521b\u5efa swagger/parameters , swagger/resources , swagger/schemas \u7b49\u76ee\u5f55\u3002 $ cd cd src/main/resources $ mkdir -p swagger/parameters swagger/resources swagger/schemas \u521b\u5efa api.yml api \u6587\u6863\u5165\u53e3\u6587\u4ef6\uff1b $ cd cd src/main/resources/swagger $ touch api.yml Tip open api \u5165\u53e3\u6587\u4ef6\u63a8\u8350\u7edf\u4e00\u4f7f\u7528 api.yml \u547d\u540d\uff1b api \u8bbe\u8ba1\uff1b \u5728 api.yml \u58f0\u660e\u5982\u4e0b\u5fc5\u8981\u5c5e\u6027: openapi : '3.0.1' info : title : 'tendata \u5ba0\u7269\u533b\u9662' version : 1.0.0 servers : - url : https://localhost:8080/api description : Development server with TLS Profile tags : - name : pet description : \u5ba0\u7269api - name : owner description : \u5ba0\u7269\u4e3b\u4ebaapi paths : openapi : \u58f0\u660e\u4e86\u672c api \u8bbe\u8ba1\u6587\u6863\u9075\u5faa\u7684 open api \u89c4\u8303\u7248\u672c\uff1b info : \u672c api \u7684\u6ce8\u91ca\u8bf4\u660e\uff1b servers : \u53ef\u7528\u7684 \u8fd0\u884c\u670d\u52a1\u5668\uff0c\u4e00\u822c\u505amock \u670d\u52a1\u5668\u4f7f\u7528\uff1b tags : \u58f0\u660e api \u5305\u542b\u51e0\u4e2a\u7ec4\uff1b paths : api \u8def\u7531\u914d\u7f6e; \u8bbe\u8ba1 domain. \u6309\u7167\u9700\u6c42\u8bbe\u8ba1 \"\u4e3b\u4eba\" \u57df\u5404\u79cd\u5c5e\u6027\u3002\u5728 swagger/schemas \u4e2d\u6dfb\u52a0 component.yml \u6587\u4ef6\u3002\u6dfb\u52a0\u5982\u4e0b\u5185\u5bb9: PageOwner : type : object properties : number : type : number numberOfElements : type : number totalElements : description : \u603b\u5171\u6570\u636e type : number totalPages : type : number description : \u603b\u5171\u9875\u6570 size : type : number description : \u6bcf\u9875\u6761\u6570 content : type : array items : $ref : '#/Owner' Owner : type : object description : \u5ba0\u7269\u4e3b\u4eba required : - firstName - lastName - address properties : firstName : description : \u59d3 type : string lastName : type : string description : \u540d\u5b57 address : type : string description : \u8be6\u7ec6\u5730\u5740 city : type : string telephone : type : string description : \u7535\u8bdd PageOwner : \"\u4e3b\u4eba\"\u5206\u9875\u5bf9\u8c61\uff1b owner : \"\u4e3b\u4eba\" \u5bf9\u8c61\uff1b \"\u5ba0\u7269\u4e3b\u4eba\" api \u6309\u7167 restfull \u98ce\u683c\u5206\u6210 /owners , /owners/{id} \u4e24\u79cd\uff0c\u90a3\u4e48\u5c06onwer\u57df\u4e2d\u7684api\u5c06\u88ab\u5206\u5272\u6210\u4e24\u90e8\u5206\u3002\u6dfb\u52a0\u5982\u4e0b\u914d\u7f6e\u5230 api.yml \u6587\u4ef6\u7684 paths \u8282\u70b9\u4e2d\u3002\u5e76\u5728 swagger/resources \u76ee\u5f55\u4e2d\u521b\u5efa\u5bf9\u5e94\u7684\u8def\u7531\u6587\u4ef6 onwers.yml , owner.yml ; openapi : '3.0.1' ... paths : /owners : $ref : './resources/owners.yml' /owners/{id} : $ref : './resources/owner.yml' owners.yml : \u914d\u7f6e \"\u5206\u9875\"\uff0c\"\u65b0\u589e\" api\uff0c \u5bf9\u5e94 path GET /owners , POST /owners ; owners.yml : \u914d\u7f6e \"\u67e5\u770b\u5355\u4e2a\u4e3b\u4eba\"\uff0c\"\u4fee\u6539\u4e3b\u4eba\"\uff0c \"\u5220\u9664\u4e3b\u4eba\" api\uff0c \u5bf9\u5e94 path GET /owners/{id} , PUT /owners/{id} , DELETE /owners/{id} ; \u8bbe\u8ba1\u63a5\u53e3\u3002 path: /owners : \u65b0\u589e\u548c\u5206\u9875\u63a5\u53e3 open api \u6587\u4ef6\uff0c owners.yml \u6dfb\u52a0\u5982\u4e0b\u914d\u7f6e: post : post : tags : - owner summary : \u6dfb\u52a0\u4e3b\u4eba description : \u6761\u4ef6\u4e3b\u4eba operationId : addOwner responses : requestBody : content : application/json : schema : $ref : '../schemas/component.yml#/Owner' get : tags : - owner summary : \u4e3b\u4eba\u5206\u9875 description : \u4e3b\u4eba\u5206\u9875 operationId : pageOwner parameters : - name : firstName in : query description : \u59d3 required : false explode : true schema : type : string - name : lastName in : query description : \u540d\u5b57 required : false explode : true schema : type : string responses : '200' : description : \u4e3b\u4eba\u5206\u9875\u8fd4\u56de\u5206\u9875\u5bf9\u8c61 content : application/json : schema : $ref : '../schemas/component.yml#/PageOwner' '400' : description : \u53c2\u6570\u4f20\u5165\u9519\u8bef '500' : description : \u670d\u52a1\u5668\u5185\u90e8\u9519\u8bef tags : path: /owners/{id} : \u67e5\u770b\uff0c\u4fee\u6539\uff0c\u5220\u9664 open api \uff0c owner.yml \u6587\u4ef6\u6dfb\u52a0\u5982\u4e0b\u914d\u7f6e: get : tags : - owner summary : \u67e5\u770b\u5355\u4e2a\u4e3b\u4eba description : \u6839\u636eid\u83b7\u53d6\u5355\u4e2a\u4e3b\u4eba\u4fe1\u606f operationId : fetchOwner parameters : - $ref : '../parameters/_index.yml#/ownerId' responses : '200' : description : \u6839\u636eid\u83b7\u53d6\u4e3b\u4eba\u5bf9\u8c61\u6b63\u786e\u8fd4\u56de content : application/json : schema : $ref : '../schemas/component.yml#/Owner' examples : successExample : summary : '\u8c03\u7528\u6210\u529f' description : '\u8c03\u7528\u6210\u529f,\u8fd4\u56de\u5355\u4e2a\u5bf9\u8c61' value : { \"name\" : \"\u738b\u4e8c\u72d7\" } '400' : description : \u53c2\u6570\u4f20\u5165\u9519\u8bef '500' : description : \u670d\u52a1\u5668\u5185\u90e8\u9519\u8bef put : tags : - owner summary : \u66f4\u65b0\u4fee\u6539\u5355\u4e2a\u4e3b\u4eba description : \u6839\u636eid\u4fee\u6539\u5355\u4e2a\u4e3b\u4eba\u4fe1\u606f operationId : updateOwner parameters : - $ref : '../parameters/_index.yml#/ownerId' requestBody : content : application/json : schema : $ref : '../schemas/component.yml#/Owner' responses : '200' : description : \u6839\u636eid\u4fee\u6539\u4e3b\u4eba\u5bf9\u8c61\u6b63\u786e\u8fd4\u56de\u4fee\u6539\u540e\u7684\u4e3b\u4eba\u5bf9\u8c61 content : application/json : schema : $ref : '../schemas/component.yml#/Owner' '400' : description : \u53c2\u6570\u4f20\u5165\u9519\u8bef '500' : description : \u670d\u52a1\u5668\u5185\u90e8\u9519\u8bef delete : tags : - owner summary : \u5220\u9664\u5355\u4e2a\u4e3b\u4eba description : \u6839\u636eid\u5220\u9664\u5355\u4e2a\u4e3b\u4eba\u4fe1\u606f operationId : deleteOwner parameters : - $ref : '../parameters/_index.yml#/ownerId' responses : '204' : description : \u6839\u636eid\u5220\u9664\u5355\u4e2a\u4e3b\u4eba\u540e\u6b63\u786e\u8fd4\u56de '500' : description : \u670d\u52a1\u5668\u5185\u90e8\u9519\u8bef Tip \u5728 open api \u8bbe\u8ba1\u4e2d\uff0c\u5c3d\u91cf\u5c06\u76f8\u540c\u7684\u5143\u7d20\u62bd\u8c61\u51fa\u6765\uff0c\u901a\u8fc7 $ref \u6807\u8bb0\u6765\u5f15\u7528; Info swagger api \u5b98\u65b9\u6587\u6863 swagger api \u6700\u4f73\u5b9e\u8df5 api \u8bbe\u8ba1\u540e\u6700\u7ec8\u6587\u4ef6\u76ee\u5f55\u7ed3\u6784\u5982\u4e0b: swagger \u251c\u2500\u2500 api.yml \u251c\u2500\u2500 parameters \u2502 \u251c\u2500\u2500 _index.yml \u2502 \u2514\u2500\u2500 path \u2502 \u2514\u2500\u2500 ownerId.yml \u251c\u2500\u2500 resources \u2502 \u251c\u2500\u2500 owner.yml \u2502 \u2514\u2500\u2500 owners.yml \u2514\u2500\u2500 schemas \u251c\u2500\u2500 Error.yaml \u2514\u2500\u2500 component.yml \u7f16\u5199\u903b\u8f91 \u00b6 \u5728 src/main/java/cn/tendata/jstart \u76ee\u5f55\u4e0b \u5206\u522b\u521b\u5efa service , data , controller \u76ee\u5f55\uff1b data \u5c42 \u00b6 \u6f14\u793a\u9879\u76ee\u91c7\u7528 spring-data-jpa ,\u5b83\u57fa\u4e8e JPA \uff0c\u5bf9\u6570\u636e\u8bbf\u95ee\u5c42\u589e\u5f3a\u652f\u6301\u3002\u5b83\u4f7f\u5f97\u6784\u5efa\u4f7f\u7528\u6570\u636e\u8bbf\u95ee\u6280\u672f\u7684 spring \u9a71\u52a8\u7684\u5e94\u7528\u7a0b\u5e8f,\u66f4\u52a0\u5bb9\u6613\u5b9e\u73b0\u3002 \u5728 data \u76ee\u5f55\u521b\u5efa domain , repository \u76ee\u5f55\uff1b \u5c06 AbstractEntity.java , AbstractEntityAuditable.java \u4e24\u4e2a model \u57fa\u7c7b \u653e\u5165 domain \u76ee\u5f55 Model \u5c42 - \u6839\u636e api \u6587\u6863, \u8bbe\u8ba1 \"\u5ba0\u7269\u4e3b\u4eba\" \u57df\u7684entity \u7c7b - Owner.java \uff0c\u653e\u5165 model \u76ee\u5f55\uff0c\u5982\u4e0b: package cn.tendata.jstart.data.domain ; package cn.tendata.jstart.data.domain ; import org.hibernate.annotations.SQLDelete ; import org.hibernate.annotations.Where ; import javax.persistence.GeneratedValue ; import javax.persistence.Id ; @Entity @Where ( clause = \"deleted=false\" ) @SQLDelete ( sql = \"update owners set deleted=true where id =?\" ) public class Owner extends AbstractEntity < Integer > { private Integer id ; private String firstName ; private String lastName ; private String address ; private String city ; private String telephone ; private Boolean deleted ; // get set method @Id @GeneratedValue public Integer getId () { return id ; } ... Note @Where Repository \u5c42 - \u5728 repository \u76ee\u5f55\u65b0\u5efa OwnerRepository.java \u6587\u4ef6\uff0c\u6dfb\u52a0\u5982\u4e0b\u5185\u5bb9: package cn.tendata.jstart.data.repository ; import cn.tendata.jstart.data.domain.Owner ; import org.springframework.data.jpa.repository.JpaRepository ; public interface OwnerRepository extends JpaRepository < Owner , Integer > { } \u5728 \u9879\u76ee\u542f\u52a8\u5165\u53e3\u7c7b Application.java \u589e\u52a0spring data jpa \u7684\u81ea\u52a8\u5305\u626b\u63cf\u914d\u7f6e; public class PetClinicApplication { public static void main ( String [] args ) { SpringApplication . run ( PetClinicApplication . class , args ); } @Configuration @EnableTransactionManagement @EnableJpaRepositories ( basePackages = \"cn.tendata.jstart.data.repository\" ) @EntityScan ( basePackages = \"cn.tendata.jstart.data.domain\" ) static class JpaConfig { } } \u6700\u540e\u7684data\u5c42 \u76ee\u5f55\u6587\u4ef6\u7ed3\u6784\u5982\u4e0b: data \u251c\u2500\u2500 domain \u2502 \u251c\u2500\u2500 AbstractEntity.java \u2502 \u251c\u2500\u2500 AbstractEntityAuditable.java \u2502 \u2514\u2500\u2500 Owner.java \u2514\u2500\u2500 repository \u2514\u2500\u2500 OwnerRepository.java service \u5c42 \u00b6 service\u5c42\u4f5c\u4e3a\u7ec4\u5408\u903b\u8f91\u7684\u80f6\u6c34\u5c42\uff0c\u662f\u4e1a\u52a1\u903b\u8f91\u6bd4\u8f83\u590d\u6742\u7684\u5730\u65b9.\u8be5\u5c42\u5305\u542b\u9a71\u52a8\u5e94\u7528\u7a0b\u5e8f\u6838\u5fc3\u529f\u80fd\u7684\u4e1a\u52a1\u903b\u8f91\u3002\u6bd4\u5982\u505a\u51b3\u7b56\u3001\u8ba1\u7b97\u3001\u8bc4\u4f30\u548c\u5904\u7406\u5728\u5176\u4ed6\u4e24\u5c42\u4e4b\u95f4\u4f20\u9012\u7684\u6570\u636e. \u5c06 EntityService.java , EntityServiceSupport.java \u4e24\u4e2a service \u5c42\u57fa\u7c7b\u6587\u4ef6\u653e\u5165 service \u6587\u4ef6\u76ee\u5f55\u3002 Tip service \u57fa\u7c7b\u63d0\u4f9b\u57fa\u672c\u7684 curd \u62bd\u8c61\u529f\u80fd\uff0c\u53ef\u4ee5\u7701\u53bb\u5199\u8be5\u90e8\u5206\u903b\u8f91\u7684\u65f6\u95f4\uff1b \u5728 service \u76ee\u5f55\u521b\u5efa OwnerService (service \u63a5\u53e3)\u6587\u4ef6\uff0c OwnerServiceImpl (service \u63a5\u53e3\u5b9e\u73b0\u7c7b)\u6587\u4ef6\uff0c\u5982\u4e0b: OwnerService.java: package cn.tendata.jstart.service ; import cn.tendata.jstart.data.domain.Owner ; public interface OwnerService extends EntityService < Owner , Integer > { Page < Owner > getAll ( Owner query , Pageable pageable ); } OwnerServiceImpl.java\uff1a package cn.tendata.jstart.service ; import cn.tendata.jstart.data.domain.Owner ; import cn.tendata.jstart.data.repository.OwnerRepository ; import org.springframework.data.domain.Example ; import org.springframework.data.domain.ExampleMatcher ; import org.springframework.data.domain.Page ; import org.springframework.data.domain.Pageable ; import org.springframework.stereotype.Service ; @Service public class OwnerServiceImpl extends EntityServiceSupport < Owner , Integer , OwnerRepository > implements OwnerService { protected OwnerServiceImpl ( OwnerRepository repository ) { super ( repository ); } @Override public Page < Owner > getAll ( Owner query , Pageable pageable ) { ExampleMatcher matcher = ExampleMatcher . matching () . withStringMatcher ( ExampleMatcher . StringMatcher . CONTAINING ) . withIgnoreNullValues (); Example < Owner > example = Example . of ( query , matcher ); return getRepository (). findAll ( example , pageable ); } } service \u5c42\u6700\u7ec8\u76ee\u5f55\u6587\u4ef6\u7ed3\u6784\u5982\u4e0b: service \u251c\u2500\u2500 EntityService.java \u251c\u2500\u2500 EntityServiceSupport.java \u251c\u2500\u2500 OwnerService.java \u2514\u2500\u2500 OwnerServiceImpl.java controller \u5c42 \u00b6 controller\u5c42 \u8d1f\u8d23\u63a5\u6536\u5ba2\u6237\u7aef\u7684\u8bf7\u6c42\uff0c\u7136\u540e\u8c03\u7528Service\u5c42\u63a5\u53e3\u63a7\u5236\u4e1a\u52a1\u903b\u8f91\uff0c\u83b7\u53d6\u5230\u6570\u636e\uff0c\u4f20\u9012\u6570\u636e\u7ed9\u9875\u9762 controller \u76ee\u5f55\u589e\u52a0 WebUtil \u5de5\u5177\u7c7b\uff0c\u4e3b\u8981\u5904\u7406 controller \u8fd4\u56de: package cn.tendata.jstart.controller ; import cn.tendata.jstart.data.domain.AbstractEntity ; import org.springframework.data.domain.Page ; import org.springframework.http.HttpStatus ; import org.springframework.http.ResponseEntity ; import org.springframework.util.Assert ; import org.springframework.web.servlet.support.ServletUriComponentsBuilder ; import java.io.Serializable ; import java.net.URI ; public abstract class WebUtils { public static < T extends AbstractEntity <?>> ResponseEntity < Page < T >> pageResponse ( Page < T > page ) { return ResponseEntity . ok ( page ); } public static < T extends AbstractEntity <?>> ResponseEntity < T > fetchResponse ( T entity ) { return ResponseEntity . ok ( entity ); } public static < T extends AbstractEntity <?>> ResponseEntity < T > createdResponse ( T entity ) { if ( entity != null ) { Serializable id = entity . getId (); Assert . notNull ( id , \"id can't be null\" ); return ResponseEntity . created ( toLocation ( id )). body ( entity ); } return new ResponseEntity <> ( HttpStatus . CREATED ); } public static < T extends AbstractEntity <?>> ResponseEntity < T > updateResponse ( T entity ) { Serializable id = entity . getId (); Assert . notNull ( id , \"id can't be null\" ); return ResponseEntity . ok ( entity ); } public static ResponseEntity < Void > deletedResponse () { return ResponseEntity . noContent (). build (); } /** * @param id persistence entity id * @return URI location */ public static URI toLocation ( Object id ) { Assert . notNull ( id , \"id can't be null\" ); return ServletUriComponentsBuilder . fromCurrentRequest () . path ( \"/{id}\" ) . buildAndExpand ( id ) . toUri (); } } \u5728 Owner entity \u7c7b\u589e\u52a0\u5982\u4e0b\u4ee3\u7801\uff0c\u5b9e\u73b0 Owner \u5bf9\u8c61\u7684 \u5b9e\u4f8b\u5316\u548c \u66f4\u65b0\u529f\u80fd: Owner.java\uff1a public static Owner of ( String firstName , String lastName ){ Owner owner = new Owner (); owner . setFirstName ( firstName ); owner . setLastName ( lastName ); return owner ; } public static Owner mergeField ( Owner update , Owner exists ){ Assert . notNull ( exists , \"exists Owner can't be null\" ); mergeField ( update . getAddress (), o -> exists . setAddress (( String ) o )); mergeField ( update . getCity (), o -> exists . setCity (( String ) o )); mergeField ( update . getFirstName (), o -> exists . setFirstName (( String ) o )); mergeField ( update . getLastName (), o -> exists . setLastName (( String ) o )); mergeField ( update . getTelephone (), o -> exists . setTelephone (( String ) o )); return exists ; } private static void mergeField ( Object field , Consumer < Object > mergeFun ){ if ( field != null ){ mergeFun . accept ( field ); } } controller \u76ee\u5f55\u589e\u52a0 OwnerController.java \u6587\u4ef6\uff0c\u5e76\u589e\u52a0\u5982\u4e0b\u5185\u5bb9\uff0c\u5904\u7406 \u524d\u7aef\u8bf7\u6c42\u5e76\u8fd4\u56de: package cn.tendata.jstart.controller ; import cn.tendata.jstart.data.domain.Owner ; import cn.tendata.jstart.service.OwnerService ; import org.springframework.beans.factory.annotation.Autowired ; import org.springframework.data.domain.Page ; import org.springframework.data.domain.Pageable ; import org.springframework.data.web.PageableDefault ; import org.springframework.http.ResponseEntity ; import org.springframework.validation.annotation.Validated ; import org.springframework.web.bind.annotation.* ; @RestController @RequestMapping ( \"/owners\" ) public class OwnerController { private final OwnerService service ; @Autowired public OwnerController ( OwnerService service ) { this . service = service ; } @GetMapping public ResponseEntity < Page < Owner >> pageOwner ( @RequestParam ( required = false ) String firstName , @RequestParam ( required = false ) String lastName , @PageableDefault Pageable page ) { return WebUtils . pageResponse ( this . service . getAll ( Owner . of ( firstName , lastName ), page )); } @PostMapping public ResponseEntity < Owner > createOwner ( @RequestBody @Validated Owner owner ) { service . save ( owner ); return WebUtils . createdResponse ( owner ); } @GetMapping ( \"/{id}\" ) public ResponseEntity < Owner > getOwner ( @PathVariable ( \"id\" ) Owner owner ) { return WebUtils . fetchResponse ( owner ); } /** * update \u5982\u679c\u5c40\u90e8\u66f4\u65b0\u4e0d\u5efa\u8bae\u4f7f\u7528 {@link Validated}\u6ce8\u89e3 */ @PutMapping ( \"/{id}\" ) public ResponseEntity < Owner > updateOwner ( @RequestBody Owner update , @PathVariable ( \"id\" ) Owner owner ) { Owner . mergeField ( update , owner ); service . save ( owner ); return WebUtils . updateResponse ( owner ); } @DeleteMapping ( \"/{id}\" ) public ResponseEntity < Void > deleteOwner ( @PathVariable ( \"id\" ) Owner owner ) { service . delete ( owner ); return WebUtils . deletedResponse (); } } controller \u5c42\u6587\u4ef6\u76ee\u5f55\u7ed3\u679c\u5982\u4e0b: controller \u251c\u2500\u2500 OwnerController.java \u2514\u2500\u2500 WebUtils.java \u9a8c\u8bc1 \u00b6 \u5728\u7ec8\u7aef\u8fd0\u884c ./gradlw bootRun \u547d\u4ee4\uff0c\u68c0\u67e5\u66f4\u65b0\u540e\u7684\u9879\u76ee\u662f\u5426\u6709\u4f9d\u8d56\u548c\u5176\u4ed6\u95ee\u9898\u3002","title":"\u5f00\u53d1"},{"location":"project/basic/developments/#_1","text":"\u4f7f\u7528 spring boot + gradle \u6846\u67b6\u548c\u5de5\u5177\u521b\u5efa\u4e00\u4e2a\u7b80\u5355\u7684 curd \u529f\u80fd\u6a21\u5757\uff1b \u91c7\u7528 \"\u5ba0\u7269\u533b\u9662\" \u9879\u76ee\u4e2d\u7684\u4e3b\u4eba\u7ba1\u7406\u529f\u80fd\u6765\u793a\u4f8b\uff1b \u672c\u7ae0\u8282\u8fd8\u5305\u542b\u57fa\u672c\u7684 spring boot \u5b9e\u73b0 \u548c\u6570\u636e\u6e90\u914d\u7f6e\u7b49\uff1b \u5728\u672c\u7ae0\u8282\uff0c\u91c7\u7528 \"\u4e3b\u4eba\" \u4e5f\u5c31\u662f \"owner\" \u57df \u6765\u5f00\u59cb\u4e00\u4e2a\u7b80\u5355\u7684\u5f00\u53d1\u3002 \u9700\u6c42: \u53ef\u4f7f\u7528 \"\u59d3\u540d\",\"\u5730\u5740\"\u5b57\u6bb5\u8fdb\u884c\u6a21\u7cca\u641c\u7d22\u4e3b\u4eba\u5217\u8868\uff1b \u9700\u8981\u65b0\u589e\u4e3b\u4eba\u529f\u80fd\uff1b \u9700\u8981\u4fee\u6539\u4e3b\u4eba\u4fe1\u606f\u529f\u80fd\uff1b \u9700\u8981\u5220\u9664\u4e3b\u4eba\u529f\u80fd\uff1b","title":"\u76ee\u6807"},{"location":"project/basic/developments/#_2","text":"","title":"\u539f\u5219"},{"location":"project/basic/developments/#api","text":"\u6784\u5efaAPI \u5f80\u5f80\u6709\u4e09\u79cd\u8bbe\u8ba1\u98ce\u683c\uff1a code-first , api-first , design-first ; \u5728\u5f80\u540e\u7684\u5f00\u53d1\u4e2d\uff0c\u540e\u7aef\u5f00\u53d1\u4f1a\u4ee5 api-first \u4f5c\u4e3a\u4e3b\u8981\u98ce\u683c\u3002\u5f15\u5bfc\u5176\u4ed6\u804c\u80fd\u7ec4 \u5e76\u5411 design-first \u6a21\u5f0f\u770b\u9f50. code-first \u4ee3\u7801\u4f18\u5148\u7684\u65b9\u6cd5\u5f80\u5f80\u662f\u6839\u636e\u4e1a\u52a1\u9700\u6c42\u6765\u7f16\u5199 API\u3002\u4ed6\u901a\u8fc7\u7f16\u7801\uff0c\u6839\u636e\u9700\u6c42\u5b9e\u73b0API\uff0c\u7136\u540e\u4f7f\u7528\u6ce8\u91ca\u521b\u5efa API \u63cf\u8ff0\uff0c\u6216\u8005\u624b\u52a8\u4ece\u5934\u5f00\u59cb\u7f16\u5199\u63cf\u8ff0\u3002\u4ee3\u7801\u4f18\u5148\u7684\u65b9\u6cd5\u5e76\u4e0d\u610f\u5473\u7740\u4e0d\u4f1a\u6709 API \u8bbe\u8ba1,\u4ed6\u4f1a\u5c06\u8bbe\u8ba1\u8fc7\u7a0b\u5206\u5e03\u5728\u6ce8\u91ca\u7684\u5404\u4e2a\u5730\u65b9\u3002 api-first API-first \u65b9\u6cd5\u610f\u5473\u7740\u5c06 api \u89c6\u4e3a\u7ec4\u7ec7\u4f9d\u8d56\u7684\u6700\u91cd\u8981\u7684\u5173\u952e\u4e1a\u52a1\u8d44\u4ea7\u3002 \u8fd9\u79cd\u65b9\u6cd5\u5305\u62ec\u56f4\u7ed5\u4e00\u4e2a\u7528\u7c7b\u4f3c OpenAPI \u7684 API \u63cf\u8ff0\u8bed\u8a00\u7f16\u5199\u7684\u5951\u7ea6\u6765\u8bbe\u8ba1\u6bcf\u4e2a API\u3002\u4ece\u4e00\u4e2a API \u5951\u7ea6\u5f00\u59cb\uff0c\u53ef\u4ee5\u786e\u4fdd\u4ea7\u751f\u7684 API \u7684\u4e00\u81f4\u6027\u3001\u53ef\u91cd\u7528\u6027\u548c\u5e7f\u6cdb\u7684\u4e92\u64cd\u4f5c\u6027\u3002 design-first \u8bbe\u8ba1\u4f18\u5148\uff0c\u9996\u5148\u610f\u5473\u7740\u5728\u7f16\u5199\u4efb\u4f55\u4ee3\u7801\u4e4b\u524d\uff0c\u7528\u4eba\u7c7b\u548c\u8ba1\u7b97\u673a\u90fd\u80fd\u7406\u89e3\u7684\u8fed\u4ee3\u65b9\u5f0f\u63cf\u8ff0\u6bcf\u4e2a API \u8bbe\u8ba1\u3002\u4f7f\u7528 API \u8bbe\u8ba1\u4f18\u5148\u7684\u65b9\u6cd5\uff0c\u6bcf\u4e2a\u56e2\u961f\u4f7f\u7528\u76f8\u540c\u7684\u8bbe\u8ba1\u8bed\u8a00\uff0c\u751a\u81f3\u4e8e\u4ed6\u4eec\u7684\u8bbe\u8ba1\u5de5\u5177\u4e5f\u8d8b\u4e8e\u76f8\u540c\u3002 Tip desgin-first \u5f80\u5f80\u88ab\u79f0\u4e3a \"\u9886\u57df\u9a71\u52a8\u8bbe\u8ba1\"\uff0c\u4f46\u5f80\u5f80\u9700\u8981\u5404\u804c\u80fd\u90e8\u95e8\u7edf\u4e00\u7684\u8bbe\u8ba1\u8bed\u8a00\u548c\u5de5\u5177\uff0c\u96be\u5ea6\u5f80\u5f80\u6bd4\u8f83\u5927\u3002","title":"\u6784\u5efaAPI"},{"location":"project/basic/developments/#code","text":"","title":"code"},{"location":"project/basic/developments/#_3","text":"\u5728 \u9879\u76ee\u6784\u5efa\u5efa\u811a\u672c\u6587\u4ef6\u6dfb\u52a0\u5982\u4e0b \u4f9d\u8d56\u9879,\u7ed3\u679c\u5982\u4e0b: dependencies { implementation 'org.springframework.boot:spring-boot-starter-data-jpa' implementation 'com.h2database:h2' implementation 'org.springframework.boot:spring-boot-starter-web' implementation 'org.springframework.boot:spring-boot-starter-validation' implementation \"com.fasterxml.jackson.datatype:jackson-datatype-hibernate5\" implementation \"com.fasterxml.jackson.datatype:jackson-datatype-jsr310\" } \u5728\u4ee5\u4e0a\u4f9d\u8d56\u5e93\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u4e86\u5982\u4e0b\u4f9d\u8d56: spring web \uff08webmvc\uff09 web\u9879\u76ee\u5f00\u53d1 \u4f9d\u8d56\uff1b H2 \u5185\u5b58\u6570\u636e\u5e93\uff1b spring data jpa orm \u6846\u67b6\uff1b \u6570\u636e\u9a8c\u8bc1\u6846\u67b6\uff1b jsr310 \u7684 jackson \u65f6\u95f4\u6807\u51c6\u5e8f\u5217\u5316\u652f\u6301\uff1b","title":"\u6dfb\u52a0\u4f9d\u8d56\u9879"},{"location":"project/basic/developments/#_4","text":"\u5728 src\\main\\java\\cn\\tendata\\jstart \u65b0\u589e\u7a0b\u5e8f\u5165\u53e3\u7c7b\u6587\u4ef6 Application.java \uff08\u6ce8\u610f\u9996\u5148\u521b\u5efa cn/tendata/jstart \u76ee\u5f55\uff09\uff1a package cn.tendata.jstart ; import org.springframework.boot.SpringApplication ; import org.springframework.boot.autoconfigure.SpringBootApplication ; @SpringBootApplication public class Application { public static void main ( String [] args ) { SpringApplication . run ( Application . class , args ); } } \u5728 src\\main\\resources \u76ee\u5f55\u4e2d\u65b0\u5efa application.yml \u9879\u76ee\u5916\u90e8\u914d\u7f6e\u6587\u4ef6, \u5e76\u589e\u52a0\u5982\u4e0b\u5185\u5bb9: server: port: 8080 logging: file: path: logs/ level: root: INFO \u5728\u4ee5\u4e0a\u914d\u7f6e\u4e2d: \u5b9a\u4e49\u670d\u52a1\u7aef\u53e3\u4e3a 8080 ; \u65e5\u5fd7\u6587\u4ef6\u4f4d\u4e8e\u8fd0\u884c\u670d\u52a1\u6839\u76ee\u5f55\u7684 logs \u6587\u4ef6\u5939; \u5168\u5c40\u65e5\u5fd7\u7ea7\u522b \u4e3a info ; \u9a8c\u8bc1\uff1b \u5728\u7ec8\u7aef \u4f7f\u7528 ./gradlew bootRun ,\u67e5\u770b\u9879\u76ee\u662f\u5426\u53ef\u4ee5\u6b63\u5e38\u542f\u52a8\uff1b $ ./gradlew bootRun Starting a Gradle Daemon, 1 incompatible and 3 stopped Daemons could not be reused, use --status for details > Task :bootRun . ____ _ __ _ _ / \\\\ / ___ '_ __ _ _(_)_ __ __ _ \\ \\ \\ \\ ( ( )\\___ | ' _ | '_| | ' _ \\/ _ ` | \\ \\ \\ \\ \\\\ / ___ ) | | _ ) | | | | | || ( _ | | ) ) ) ) ' |____| .__|_| |_|_| |_\\__, | / / / / =========|_|==============|___/=/_/_/_/ :: Spring Boot :: (v2.6.7) 2022-05-16 13:41:36.332 INFO 12968 --- [ main] cn.tendata.jstart.Application : Starting Application using Java 11.0.10 on DESKTOP-TDFJPJJ with PID 12968 (C:\\Users\\luwei\\Desktop\\tendata\\kpi\\documents\\tendata-jst art\\build\\classes\\java\\main started by luwei in C:\\Users\\luwei\\Desktop\\tendata\\kpi\\documents\\tendata-jstart) 2022-05-16 13:41:36.337 INFO 12968 --- [ main] cn.tendata.jstart.Application : No active profile set, falling back to 1 default profile: \"default\" 2022-05-16 13:41:37.084 INFO 12968 --- [ main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode. 2022-05-16 13:41:37.104 INFO 12968 --- [ main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 7 ms. Found 0 JPA repository interfaces. 2022-05-16 13:41:37.977 INFO 12968 --- [ main] o.s.b.w.embedded.tomcat.TomcatWebServer : Tomcat initialized with port(s): 8080 (http) 2022-05-16 13:41:37.991 INFO 12968 --- [ main] o.apache.catalina.core.StandardService : Starting service [Tomcat] 2022-05-16 13:41:37.991 INFO 12968 --- [ main] org.apache.catalina.core.StandardEngine : Starting Servlet engine: [Apache Tomcat/9.0.62] 2022-05-16 13:41:38.137 INFO 12968 --- [ main] o.a.c.c.C.[Tomcat].[localhost].[/] : Initializing Spring embedded WebApplicationContext 2022-05-16 13:41:38.138 INFO 12968 --- [ main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1751 ms 2022-05-16 13:41:38.255 INFO 12968 --- [ main] com.zaxxer.hikari.HikariDataSource : HikariPool-1 - Starting... 2022-05-16 13:41:38.353 INFO 12968 --- [ main] com.zaxxer.hikari.HikariDataSource : HikariPool-1 - Start completed. 2022-05-16 13:41:38.396 INFO 12968 --- [ main] o.hibernate.jpa.internal.util.LogHelper : HHH000204: Processing PersistenceUnitInfo [name: default] 2022-05-16 13:41:38.439 INFO 12968 --- [ main] org.hibernate.Version : HHH000412: Hibernate ORM core version 5.6.8.Final 2022-05-16 13:41:38.603 INFO 12968 --- [ main] o.hibernate.annotations.common.Version : HCANN000001: Hibernate Commons Annotations {5.1.2.Final} 2022-05-16 13:41:38.717 INFO 12968 --- [ main] org.hibernate.dialect.Dialect : HHH000400: Using dialect: org.hibernate.dialect.H2Dialect 2022-05-16 13:41:38.939 INFO 12968 --- [ main] o.h.e.t.j.p.i.JtaPlatformInitiator : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform] 2022-05-16 13:41:38.947 INFO 12968 --- [ main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit ' default ' 2022-05-16 13:41:38.997 WARN 12968 --- [ main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly confi gure spring.jpa.open-in-view to disable this warning 2022-05-16 13:41:39.346 INFO 12968 --- [ main] o.s.b.w.embedded.tomcat.TomcatWebServer : Tomcat started on port(s): 8080 (http) with context path ' ' 2022 -05-16 13 :41:39.357 INFO 12968 --- [ main ] cn.tendata.jstart.Application : Started Application in 3 .742 seconds ( JVM running for 3 .994 ) 2022 -05-16 14 :09:11.548 WARN 12968 --- [ l-1 housekeeper ] com.zaxxer.hikari.pool.HikariPool : HikariPool-1 - Thread starvation or clock leap detected ( housekeeper delta = 16m32s918ms584?s900ns ) . < ========== ---> 80 % EXECUTING [ 41m 40s ] > :bootRun \u5982\u679c\u8fd0\u884c\u6b63\u5e38\u5219 Tip windows \u4f7f\u7528linux \u7ec8\u7aef\u6267\u884c gradle wrapper \u4efb\u52a1\u65f6\uff0c\u6709\u53ef\u80fd\u51fa\u73b0 \u7248\u672c\u4e0d\u5339\u914d\u7684\u95ee\u9898\uff1b Note windows \u4fee\u6539 \u73af\u5883\u53d8\u91cf\u540e\u6700\u597d\u91cd\u542f\u4e00\u4e0b\uff0c\u514d\u5f97\u6d6a\u8d39\u5927\u91cf\u7684\u65f6\u95f4\u82b1\u8d39\u5728\u672a\u77e5\u5f02\u5e38\u4e0a\u9762\uff1b","title":"\u589e\u52a0\u542f\u52a8\u5165\u53e3"},{"location":"project/basic/developments/#api-first","text":"\u521b\u5efa openApi \u8bbe\u8ba1\u6587\u6863\u7ec4\u7ec7\u67b6\u6784\u76ee\u5f55\uff1b \u5728 src/main/resources \u76ee\u5f55\u4e0b\u521b\u5efa swagger/parameters , swagger/resources , swagger/schemas \u7b49\u76ee\u5f55\u3002 $ cd cd src/main/resources $ mkdir -p swagger/parameters swagger/resources swagger/schemas \u521b\u5efa api.yml api \u6587\u6863\u5165\u53e3\u6587\u4ef6\uff1b $ cd cd src/main/resources/swagger $ touch api.yml Tip open api \u5165\u53e3\u6587\u4ef6\u63a8\u8350\u7edf\u4e00\u4f7f\u7528 api.yml \u547d\u540d\uff1b api \u8bbe\u8ba1\uff1b \u5728 api.yml \u58f0\u660e\u5982\u4e0b\u5fc5\u8981\u5c5e\u6027: openapi : '3.0.1' info : title : 'tendata \u5ba0\u7269\u533b\u9662' version : 1.0.0 servers : - url : https://localhost:8080/api description : Development server with TLS Profile tags : - name : pet description : \u5ba0\u7269api - name : owner description : \u5ba0\u7269\u4e3b\u4ebaapi paths : openapi : \u58f0\u660e\u4e86\u672c api \u8bbe\u8ba1\u6587\u6863\u9075\u5faa\u7684 open api \u89c4\u8303\u7248\u672c\uff1b info : \u672c api \u7684\u6ce8\u91ca\u8bf4\u660e\uff1b servers : \u53ef\u7528\u7684 \u8fd0\u884c\u670d\u52a1\u5668\uff0c\u4e00\u822c\u505amock \u670d\u52a1\u5668\u4f7f\u7528\uff1b tags : \u58f0\u660e api \u5305\u542b\u51e0\u4e2a\u7ec4\uff1b paths : api \u8def\u7531\u914d\u7f6e; \u8bbe\u8ba1 domain. \u6309\u7167\u9700\u6c42\u8bbe\u8ba1 \"\u4e3b\u4eba\" \u57df\u5404\u79cd\u5c5e\u6027\u3002\u5728 swagger/schemas \u4e2d\u6dfb\u52a0 component.yml \u6587\u4ef6\u3002\u6dfb\u52a0\u5982\u4e0b\u5185\u5bb9: PageOwner : type : object properties : number : type : number numberOfElements : type : number totalElements : description : \u603b\u5171\u6570\u636e type : number totalPages : type : number description : \u603b\u5171\u9875\u6570 size : type : number description : \u6bcf\u9875\u6761\u6570 content : type : array items : $ref : '#/Owner' Owner : type : object description : \u5ba0\u7269\u4e3b\u4eba required : - firstName - lastName - address properties : firstName : description : \u59d3 type : string lastName : type : string description : \u540d\u5b57 address : type : string description : \u8be6\u7ec6\u5730\u5740 city : type : string telephone : type : string description : \u7535\u8bdd PageOwner : \"\u4e3b\u4eba\"\u5206\u9875\u5bf9\u8c61\uff1b owner : \"\u4e3b\u4eba\" \u5bf9\u8c61\uff1b \"\u5ba0\u7269\u4e3b\u4eba\" api \u6309\u7167 restfull \u98ce\u683c\u5206\u6210 /owners , /owners/{id} \u4e24\u79cd\uff0c\u90a3\u4e48\u5c06onwer\u57df\u4e2d\u7684api\u5c06\u88ab\u5206\u5272\u6210\u4e24\u90e8\u5206\u3002\u6dfb\u52a0\u5982\u4e0b\u914d\u7f6e\u5230 api.yml \u6587\u4ef6\u7684 paths \u8282\u70b9\u4e2d\u3002\u5e76\u5728 swagger/resources \u76ee\u5f55\u4e2d\u521b\u5efa\u5bf9\u5e94\u7684\u8def\u7531\u6587\u4ef6 onwers.yml , owner.yml ; openapi : '3.0.1' ... paths : /owners : $ref : './resources/owners.yml' /owners/{id} : $ref : './resources/owner.yml' owners.yml : \u914d\u7f6e \"\u5206\u9875\"\uff0c\"\u65b0\u589e\" api\uff0c \u5bf9\u5e94 path GET /owners , POST /owners ; owners.yml : \u914d\u7f6e \"\u67e5\u770b\u5355\u4e2a\u4e3b\u4eba\"\uff0c\"\u4fee\u6539\u4e3b\u4eba\"\uff0c \"\u5220\u9664\u4e3b\u4eba\" api\uff0c \u5bf9\u5e94 path GET /owners/{id} , PUT /owners/{id} , DELETE /owners/{id} ; \u8bbe\u8ba1\u63a5\u53e3\u3002 path: /owners : \u65b0\u589e\u548c\u5206\u9875\u63a5\u53e3 open api \u6587\u4ef6\uff0c owners.yml \u6dfb\u52a0\u5982\u4e0b\u914d\u7f6e: post : post : tags : - owner summary : \u6dfb\u52a0\u4e3b\u4eba description : \u6761\u4ef6\u4e3b\u4eba operationId : addOwner responses : requestBody : content : application/json : schema : $ref : '../schemas/component.yml#/Owner' get : tags : - owner summary : \u4e3b\u4eba\u5206\u9875 description : \u4e3b\u4eba\u5206\u9875 operationId : pageOwner parameters : - name : firstName in : query description : \u59d3 required : false explode : true schema : type : string - name : lastName in : query description : \u540d\u5b57 required : false explode : true schema : type : string responses : '200' : description : \u4e3b\u4eba\u5206\u9875\u8fd4\u56de\u5206\u9875\u5bf9\u8c61 content : application/json : schema : $ref : '../schemas/component.yml#/PageOwner' '400' : description : \u53c2\u6570\u4f20\u5165\u9519\u8bef '500' : description : \u670d\u52a1\u5668\u5185\u90e8\u9519\u8bef tags : path: /owners/{id} : \u67e5\u770b\uff0c\u4fee\u6539\uff0c\u5220\u9664 open api \uff0c owner.yml \u6587\u4ef6\u6dfb\u52a0\u5982\u4e0b\u914d\u7f6e: get : tags : - owner summary : \u67e5\u770b\u5355\u4e2a\u4e3b\u4eba description : \u6839\u636eid\u83b7\u53d6\u5355\u4e2a\u4e3b\u4eba\u4fe1\u606f operationId : fetchOwner parameters : - $ref : '../parameters/_index.yml#/ownerId' responses : '200' : description : \u6839\u636eid\u83b7\u53d6\u4e3b\u4eba\u5bf9\u8c61\u6b63\u786e\u8fd4\u56de content : application/json : schema : $ref : '../schemas/component.yml#/Owner' examples : successExample : summary : '\u8c03\u7528\u6210\u529f' description : '\u8c03\u7528\u6210\u529f,\u8fd4\u56de\u5355\u4e2a\u5bf9\u8c61' value : { \"name\" : \"\u738b\u4e8c\u72d7\" } '400' : description : \u53c2\u6570\u4f20\u5165\u9519\u8bef '500' : description : \u670d\u52a1\u5668\u5185\u90e8\u9519\u8bef put : tags : - owner summary : \u66f4\u65b0\u4fee\u6539\u5355\u4e2a\u4e3b\u4eba description : \u6839\u636eid\u4fee\u6539\u5355\u4e2a\u4e3b\u4eba\u4fe1\u606f operationId : updateOwner parameters : - $ref : '../parameters/_index.yml#/ownerId' requestBody : content : application/json : schema : $ref : '../schemas/component.yml#/Owner' responses : '200' : description : \u6839\u636eid\u4fee\u6539\u4e3b\u4eba\u5bf9\u8c61\u6b63\u786e\u8fd4\u56de\u4fee\u6539\u540e\u7684\u4e3b\u4eba\u5bf9\u8c61 content : application/json : schema : $ref : '../schemas/component.yml#/Owner' '400' : description : \u53c2\u6570\u4f20\u5165\u9519\u8bef '500' : description : \u670d\u52a1\u5668\u5185\u90e8\u9519\u8bef delete : tags : - owner summary : \u5220\u9664\u5355\u4e2a\u4e3b\u4eba description : \u6839\u636eid\u5220\u9664\u5355\u4e2a\u4e3b\u4eba\u4fe1\u606f operationId : deleteOwner parameters : - $ref : '../parameters/_index.yml#/ownerId' responses : '204' : description : \u6839\u636eid\u5220\u9664\u5355\u4e2a\u4e3b\u4eba\u540e\u6b63\u786e\u8fd4\u56de '500' : description : \u670d\u52a1\u5668\u5185\u90e8\u9519\u8bef Tip \u5728 open api \u8bbe\u8ba1\u4e2d\uff0c\u5c3d\u91cf\u5c06\u76f8\u540c\u7684\u5143\u7d20\u62bd\u8c61\u51fa\u6765\uff0c\u901a\u8fc7 $ref \u6807\u8bb0\u6765\u5f15\u7528; Info swagger api \u5b98\u65b9\u6587\u6863 swagger api \u6700\u4f73\u5b9e\u8df5 api \u8bbe\u8ba1\u540e\u6700\u7ec8\u6587\u4ef6\u76ee\u5f55\u7ed3\u6784\u5982\u4e0b: swagger \u251c\u2500\u2500 api.yml \u251c\u2500\u2500 parameters \u2502 \u251c\u2500\u2500 _index.yml \u2502 \u2514\u2500\u2500 path \u2502 \u2514\u2500\u2500 ownerId.yml \u251c\u2500\u2500 resources \u2502 \u251c\u2500\u2500 owner.yml \u2502 \u2514\u2500\u2500 owners.yml \u2514\u2500\u2500 schemas \u251c\u2500\u2500 Error.yaml \u2514\u2500\u2500 component.yml","title":"API-first"},{"location":"project/basic/developments/#_5","text":"\u5728 src/main/java/cn/tendata/jstart \u76ee\u5f55\u4e0b \u5206\u522b\u521b\u5efa service , data , controller \u76ee\u5f55\uff1b","title":"\u7f16\u5199\u903b\u8f91"},{"location":"project/basic/developments/#data","text":"\u6f14\u793a\u9879\u76ee\u91c7\u7528 spring-data-jpa ,\u5b83\u57fa\u4e8e JPA \uff0c\u5bf9\u6570\u636e\u8bbf\u95ee\u5c42\u589e\u5f3a\u652f\u6301\u3002\u5b83\u4f7f\u5f97\u6784\u5efa\u4f7f\u7528\u6570\u636e\u8bbf\u95ee\u6280\u672f\u7684 spring \u9a71\u52a8\u7684\u5e94\u7528\u7a0b\u5e8f,\u66f4\u52a0\u5bb9\u6613\u5b9e\u73b0\u3002 \u5728 data \u76ee\u5f55\u521b\u5efa domain , repository \u76ee\u5f55\uff1b \u5c06 AbstractEntity.java , AbstractEntityAuditable.java \u4e24\u4e2a model \u57fa\u7c7b \u653e\u5165 domain \u76ee\u5f55 Model \u5c42 - \u6839\u636e api \u6587\u6863, \u8bbe\u8ba1 \"\u5ba0\u7269\u4e3b\u4eba\" \u57df\u7684entity \u7c7b - Owner.java \uff0c\u653e\u5165 model \u76ee\u5f55\uff0c\u5982\u4e0b: package cn.tendata.jstart.data.domain ; package cn.tendata.jstart.data.domain ; import org.hibernate.annotations.SQLDelete ; import org.hibernate.annotations.Where ; import javax.persistence.GeneratedValue ; import javax.persistence.Id ; @Entity @Where ( clause = \"deleted=false\" ) @SQLDelete ( sql = \"update owners set deleted=true where id =?\" ) public class Owner extends AbstractEntity < Integer > { private Integer id ; private String firstName ; private String lastName ; private String address ; private String city ; private String telephone ; private Boolean deleted ; // get set method @Id @GeneratedValue public Integer getId () { return id ; } ... Note @Where Repository \u5c42 - \u5728 repository \u76ee\u5f55\u65b0\u5efa OwnerRepository.java \u6587\u4ef6\uff0c\u6dfb\u52a0\u5982\u4e0b\u5185\u5bb9: package cn.tendata.jstart.data.repository ; import cn.tendata.jstart.data.domain.Owner ; import org.springframework.data.jpa.repository.JpaRepository ; public interface OwnerRepository extends JpaRepository < Owner , Integer > { } \u5728 \u9879\u76ee\u542f\u52a8\u5165\u53e3\u7c7b Application.java \u589e\u52a0spring data jpa \u7684\u81ea\u52a8\u5305\u626b\u63cf\u914d\u7f6e; public class PetClinicApplication { public static void main ( String [] args ) { SpringApplication . run ( PetClinicApplication . class , args ); } @Configuration @EnableTransactionManagement @EnableJpaRepositories ( basePackages = \"cn.tendata.jstart.data.repository\" ) @EntityScan ( basePackages = \"cn.tendata.jstart.data.domain\" ) static class JpaConfig { } } \u6700\u540e\u7684data\u5c42 \u76ee\u5f55\u6587\u4ef6\u7ed3\u6784\u5982\u4e0b: data \u251c\u2500\u2500 domain \u2502 \u251c\u2500\u2500 AbstractEntity.java \u2502 \u251c\u2500\u2500 AbstractEntityAuditable.java \u2502 \u2514\u2500\u2500 Owner.java \u2514\u2500\u2500 repository \u2514\u2500\u2500 OwnerRepository.java","title":"data \u5c42"},{"location":"project/basic/developments/#service","text":"service\u5c42\u4f5c\u4e3a\u7ec4\u5408\u903b\u8f91\u7684\u80f6\u6c34\u5c42\uff0c\u662f\u4e1a\u52a1\u903b\u8f91\u6bd4\u8f83\u590d\u6742\u7684\u5730\u65b9.\u8be5\u5c42\u5305\u542b\u9a71\u52a8\u5e94\u7528\u7a0b\u5e8f\u6838\u5fc3\u529f\u80fd\u7684\u4e1a\u52a1\u903b\u8f91\u3002\u6bd4\u5982\u505a\u51b3\u7b56\u3001\u8ba1\u7b97\u3001\u8bc4\u4f30\u548c\u5904\u7406\u5728\u5176\u4ed6\u4e24\u5c42\u4e4b\u95f4\u4f20\u9012\u7684\u6570\u636e. \u5c06 EntityService.java , EntityServiceSupport.java \u4e24\u4e2a service \u5c42\u57fa\u7c7b\u6587\u4ef6\u653e\u5165 service \u6587\u4ef6\u76ee\u5f55\u3002 Tip service \u57fa\u7c7b\u63d0\u4f9b\u57fa\u672c\u7684 curd \u62bd\u8c61\u529f\u80fd\uff0c\u53ef\u4ee5\u7701\u53bb\u5199\u8be5\u90e8\u5206\u903b\u8f91\u7684\u65f6\u95f4\uff1b \u5728 service \u76ee\u5f55\u521b\u5efa OwnerService (service \u63a5\u53e3)\u6587\u4ef6\uff0c OwnerServiceImpl (service \u63a5\u53e3\u5b9e\u73b0\u7c7b)\u6587\u4ef6\uff0c\u5982\u4e0b: OwnerService.java: package cn.tendata.jstart.service ; import cn.tendata.jstart.data.domain.Owner ; public interface OwnerService extends EntityService < Owner , Integer > { Page < Owner > getAll ( Owner query , Pageable pageable ); } OwnerServiceImpl.java\uff1a package cn.tendata.jstart.service ; import cn.tendata.jstart.data.domain.Owner ; import cn.tendata.jstart.data.repository.OwnerRepository ; import org.springframework.data.domain.Example ; import org.springframework.data.domain.ExampleMatcher ; import org.springframework.data.domain.Page ; import org.springframework.data.domain.Pageable ; import org.springframework.stereotype.Service ; @Service public class OwnerServiceImpl extends EntityServiceSupport < Owner , Integer , OwnerRepository > implements OwnerService { protected OwnerServiceImpl ( OwnerRepository repository ) { super ( repository ); } @Override public Page < Owner > getAll ( Owner query , Pageable pageable ) { ExampleMatcher matcher = ExampleMatcher . matching () . withStringMatcher ( ExampleMatcher . StringMatcher . CONTAINING ) . withIgnoreNullValues (); Example < Owner > example = Example . of ( query , matcher ); return getRepository (). findAll ( example , pageable ); } } service \u5c42\u6700\u7ec8\u76ee\u5f55\u6587\u4ef6\u7ed3\u6784\u5982\u4e0b: service \u251c\u2500\u2500 EntityService.java \u251c\u2500\u2500 EntityServiceSupport.java \u251c\u2500\u2500 OwnerService.java \u2514\u2500\u2500 OwnerServiceImpl.java","title":"service \u5c42"},{"location":"project/basic/developments/#controller","text":"controller\u5c42 \u8d1f\u8d23\u63a5\u6536\u5ba2\u6237\u7aef\u7684\u8bf7\u6c42\uff0c\u7136\u540e\u8c03\u7528Service\u5c42\u63a5\u53e3\u63a7\u5236\u4e1a\u52a1\u903b\u8f91\uff0c\u83b7\u53d6\u5230\u6570\u636e\uff0c\u4f20\u9012\u6570\u636e\u7ed9\u9875\u9762 controller \u76ee\u5f55\u589e\u52a0 WebUtil \u5de5\u5177\u7c7b\uff0c\u4e3b\u8981\u5904\u7406 controller \u8fd4\u56de: package cn.tendata.jstart.controller ; import cn.tendata.jstart.data.domain.AbstractEntity ; import org.springframework.data.domain.Page ; import org.springframework.http.HttpStatus ; import org.springframework.http.ResponseEntity ; import org.springframework.util.Assert ; import org.springframework.web.servlet.support.ServletUriComponentsBuilder ; import java.io.Serializable ; import java.net.URI ; public abstract class WebUtils { public static < T extends AbstractEntity <?>> ResponseEntity < Page < T >> pageResponse ( Page < T > page ) { return ResponseEntity . ok ( page ); } public static < T extends AbstractEntity <?>> ResponseEntity < T > fetchResponse ( T entity ) { return ResponseEntity . ok ( entity ); } public static < T extends AbstractEntity <?>> ResponseEntity < T > createdResponse ( T entity ) { if ( entity != null ) { Serializable id = entity . getId (); Assert . notNull ( id , \"id can't be null\" ); return ResponseEntity . created ( toLocation ( id )). body ( entity ); } return new ResponseEntity <> ( HttpStatus . CREATED ); } public static < T extends AbstractEntity <?>> ResponseEntity < T > updateResponse ( T entity ) { Serializable id = entity . getId (); Assert . notNull ( id , \"id can't be null\" ); return ResponseEntity . ok ( entity ); } public static ResponseEntity < Void > deletedResponse () { return ResponseEntity . noContent (). build (); } /** * @param id persistence entity id * @return URI location */ public static URI toLocation ( Object id ) { Assert . notNull ( id , \"id can't be null\" ); return ServletUriComponentsBuilder . fromCurrentRequest () . path ( \"/{id}\" ) . buildAndExpand ( id ) . toUri (); } } \u5728 Owner entity \u7c7b\u589e\u52a0\u5982\u4e0b\u4ee3\u7801\uff0c\u5b9e\u73b0 Owner \u5bf9\u8c61\u7684 \u5b9e\u4f8b\u5316\u548c \u66f4\u65b0\u529f\u80fd: Owner.java\uff1a public static Owner of ( String firstName , String lastName ){ Owner owner = new Owner (); owner . setFirstName ( firstName ); owner . setLastName ( lastName ); return owner ; } public static Owner mergeField ( Owner update , Owner exists ){ Assert . notNull ( exists , \"exists Owner can't be null\" ); mergeField ( update . getAddress (), o -> exists . setAddress (( String ) o )); mergeField ( update . getCity (), o -> exists . setCity (( String ) o )); mergeField ( update . getFirstName (), o -> exists . setFirstName (( String ) o )); mergeField ( update . getLastName (), o -> exists . setLastName (( String ) o )); mergeField ( update . getTelephone (), o -> exists . setTelephone (( String ) o )); return exists ; } private static void mergeField ( Object field , Consumer < Object > mergeFun ){ if ( field != null ){ mergeFun . accept ( field ); } } controller \u76ee\u5f55\u589e\u52a0 OwnerController.java \u6587\u4ef6\uff0c\u5e76\u589e\u52a0\u5982\u4e0b\u5185\u5bb9\uff0c\u5904\u7406 \u524d\u7aef\u8bf7\u6c42\u5e76\u8fd4\u56de: package cn.tendata.jstart.controller ; import cn.tendata.jstart.data.domain.Owner ; import cn.tendata.jstart.service.OwnerService ; import org.springframework.beans.factory.annotation.Autowired ; import org.springframework.data.domain.Page ; import org.springframework.data.domain.Pageable ; import org.springframework.data.web.PageableDefault ; import org.springframework.http.ResponseEntity ; import org.springframework.validation.annotation.Validated ; import org.springframework.web.bind.annotation.* ; @RestController @RequestMapping ( \"/owners\" ) public class OwnerController { private final OwnerService service ; @Autowired public OwnerController ( OwnerService service ) { this . service = service ; } @GetMapping public ResponseEntity < Page < Owner >> pageOwner ( @RequestParam ( required = false ) String firstName , @RequestParam ( required = false ) String lastName , @PageableDefault Pageable page ) { return WebUtils . pageResponse ( this . service . getAll ( Owner . of ( firstName , lastName ), page )); } @PostMapping public ResponseEntity < Owner > createOwner ( @RequestBody @Validated Owner owner ) { service . save ( owner ); return WebUtils . createdResponse ( owner ); } @GetMapping ( \"/{id}\" ) public ResponseEntity < Owner > getOwner ( @PathVariable ( \"id\" ) Owner owner ) { return WebUtils . fetchResponse ( owner ); } /** * update \u5982\u679c\u5c40\u90e8\u66f4\u65b0\u4e0d\u5efa\u8bae\u4f7f\u7528 {@link Validated}\u6ce8\u89e3 */ @PutMapping ( \"/{id}\" ) public ResponseEntity < Owner > updateOwner ( @RequestBody Owner update , @PathVariable ( \"id\" ) Owner owner ) { Owner . mergeField ( update , owner ); service . save ( owner ); return WebUtils . updateResponse ( owner ); } @DeleteMapping ( \"/{id}\" ) public ResponseEntity < Void > deleteOwner ( @PathVariable ( \"id\" ) Owner owner ) { service . delete ( owner ); return WebUtils . deletedResponse (); } } controller \u5c42\u6587\u4ef6\u76ee\u5f55\u7ed3\u679c\u5982\u4e0b: controller \u251c\u2500\u2500 OwnerController.java \u2514\u2500\u2500 WebUtils.java","title":"controller \u5c42"},{"location":"project/basic/developments/#_6","text":"\u5728\u7ec8\u7aef\u8fd0\u884c ./gradlw bootRun \u547d\u4ee4\uff0c\u68c0\u67e5\u66f4\u65b0\u540e\u7684\u9879\u76ee\u662f\u5426\u6709\u4f9d\u8d56\u548c\u5176\u4ed6\u95ee\u9898\u3002","title":"\u9a8c\u8bc1"},{"location":"project/basic/init/","text":"\u521b\u5efa\u9879\u76ee\u6587\u4ef6\u76ee\u5f55 \u00b6 Gradle \u5185\u7f6e\u4e00\u4e2a init \u4efb\u52a1 \uff0c\u5b83\u5728\u4e00\u4e2a\u7a7a\u6587\u4ef6\u5939\u4e2d\u521d\u59cb\u5316\u4e00\u4e2a\u65b0\u7684 Gradle \u9879\u76ee\u3002 Init \u4efb\u52a1 \u4f7f\u7528(\u4e5f\u662f\u5185\u7f6e\u7684) wrapper \u4efb\u52a1 \u521b\u5efa Gradle wrapper \u811a\u672c - gradlew \u6587\u4ef6\u3002 \u521b\u5efa\u65b0\u9879\u76ee\u6587\u4ef6\u5939 tendata-jstart \uff1b mkdir tendata-jstart \u8fdb\u5165 \u65b0\u9879\u76ee\u6587\u4ef6\u5939\uff1b cd tendata-jstart \u8fd0\u884c gradle \u521d\u59cb\u5316\u4efb\u52a1 \u00b6 \u5728\u65b0\u9879\u76ee\u76ee\u5f55\u4e2d\uff0c\u5728\u7ec8\u7aef\u4e2d\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u8fd0\u884c init \u4efb\u52a1: gradle init \uff0c\u6839\u636e\u63d0\u793a\u9009\u62e9\u76f8\u5e94\u7684\u9009\u9879\u3002 \u7531\u4e8egradle init \u521d\u59cb\u5316\u7684\u6e90\u7801\u76ee\u5f55\u7ed3\u6784\u548c\u73b0\u6709\u76ee\u5f55\u7ed3\u6784 \u4e0d\u76f8\u5339\u914d\uff0c\u9009\u62e9 \u9879\u76ee\u7c7b\u578b\u65f6\uff0c\u9009\u62e9 1 - basic \u7c7b\u578b\u5373\u53ef\uff1b\u6784\u5efa\u811a\u672c\u9009\u62e9 groovy ;\u5176\u4ed6\u9009\u62e9\u9ed8\u8ba4\u5373\u53ef\u3002 \u8f93\u51fa\u5982\u4e0b\uff1a $ gradle init Starting a Gradle Daemon (subsequent builds will be faster) Select type of project to generate: 1: basic 2: application 3: library 4: Gradle plugin Enter selection (default: basic) [1..4] 1 Select build script DSL: 1: Groovy 2: Kotlin Enter selection (default: Groovy) [1..2] 1 Generate build using new APIs and behavior (some features may change in the next minor release)? (default: no) [yes, no] Project name (default: tendata-jstart): > Task :init Get more help with your project: Learn more about Gradle by exploring our samples at https://docs.gradle.org/7.4.2/samples BUILD SUCCESSFUL in 4m 26s 2 actionable tasks: 2 executed init \u4efb\u52a1\u8f93\u51fa\u5982\u4e0b\u9879\u76ee\u7ed3\u6784 . \u251c\u2500\u2500 .gitattributes \u251c\u2500\u2500 .gitignore # (1) \u251c\u2500\u2500 .gradle \u251c\u2500\u2500 build.gradle # (2) \u251c\u2500\u2500 gradle # (3) \u2502 \u2514\u2500\u2500 wrapper \u2502 \u251c\u2500\u2500 gradle-wrapper.jar \u2502 \u2514\u2500\u2500 gradle-wrapper.properties \u251c\u2500\u2500 gradlew # (4) \u251c\u2500\u2500 gradlew.bat \u2514\u2500\u2500 settings.gradle # (5) 3 directories, 8 files git \u63d0\u4ea4\u5ffd\u7565 \u914d\u7f6e\u6587\u4ef6\uff1b \u9879\u76ee\u6784\u5efa\u6587\u4ef6\uff1b gradle wrapper \u6587\u4ef6\u5305\uff1b gradle wrapper \u811a\u672c\u6587\u4ef6, windows \u4f7f\u7528 gradlew.bat \u6587\u4ef6 \uff1b gradle \u5b9a\u4e49\u751f\u6210\u540d\u79f0\u548c\u5b50\u9879\u76ee\u7684\u914d\u7f6e\u6587\u4ef6\uff1b settings.gradle \u00b6 settings.gradle \u4e3b\u8981\u5305\u542b\u4e24\u4e2a\u65b9\u9762\u7684\u4f5c\u7528: \u8bbe\u7f6e\u9876\u5c42\u9879\u76ee\u540d\u79f0\uff0c\u4f7f\u7528 rootProject.name \uff1b \u7ec4\u7ec7\u5b50\u9879\u76ee\u6a21\u5757\uff0c \u4f7f\u7528 include \u65b9\u6cd5\uff1b \u5e38\u89c1\u7684\u5c5e\u6027\u914d\u7f6e\u6709: rootProject . name = 'demo' include ( 'app1' ) include ( 'app2' ) \u8be5\u6bb5\u914d\u7f6e\u8868\u793a \u4e00\u4e2ademo\u540d\u79f0\u7684\u9879\u76ee\u5305\u542b app1 , app2 \u4e24\u4e2a\u529f\u80fd\u6a21\u5757\uff1a rootProject.name - \u4e3a\u6784\u5efa\u5206\u914d\u4e00\u4e2a\u540d\u79f0\uff0c\u8fd9\u5c06\u8986\u76d6\u4ee5\u5176\u6240\u5728\u76ee\u5f55\u547d\u540d\u6784\u5efa\u7684\u9ed8\u8ba4\u884c\u4e3a\u3002\u5efa\u8bae\u8bbe\u7f6e\u4e00\u4e2a\u56fa\u5b9a\u7684\u540d\u79f0\uff0c\u56e0\u4e3a\u5982\u679c\u9879\u76ee\u662f\u5171\u4eab\u7684\uff0c\u90a3\u4e48\u6587\u4ef6\u5939\u53ef\u80fd\u4f1a\u53d1\u751f\u53d8\u5316\u2014\u2014\u4f8b\u5982\u4f5c\u4e3a Git \u5b58\u50a8\u5e93\u7684\u6839\u76ee\u5f55 include : \u5b9a\u4e49\u4e00\u4e2a\u5b50\u9879\u76ee\u6a21\u5757 \u4f8b\u5982 app1 \u5305\u542b\u5728\u9876\u5c42\u9879\u76ee\u4e2d\uff1b build.gradle \u00b6 build.gradle \u4f5c\u4e3a\u9879\u76ee\u7684\u6784\u5efa\u811a\u672c\uff0c\u5b9a\u4e49\u4e86\u9879\u76ee\u7684\u6784\u5efa\uff0c\u8fd0\u884c\u73af\u5883\uff0c\u5305\u4f9d\u8d56\uff0c\u4ee5\u53ca\u6253\u5305\u89c4\u5219\u7b49\u3002\u76f8\u8f83\u4ee5\u524d\u7684maven\uff0cant \u6784\u5efa\u6765\u8bf4\uff0c\u4f9d\u6258\u4e8e \u7075\u6d3b\u7684 groovy \u811a\u672c\u8bed\u8a00\u548c\u5f3a\u5927\u7684\u63d2\u4ef6\u529f\u80fd\uff0c\u4f7f\u5f97gradle \u5728\u9879\u76ee\u6784\u5efa\u65b9\u9762\u66f4\u52a0\u7075\u6d3b\uff0c\u4f46\u662f\u4e5f\u63d0\u9ad8\u5f00\u53d1\u4eba\u5458\u7684\u5b66\u4e60\u95e8\u69db\u3002 \u5e38\u89c1\u7684\u914d\u7f6e\u5982\u4e0b\uff1a apply plugin: 'java' // (1) apply plugin: 'eclipse' apply plugin: 'application' mainClassName = 'hello.HelloWorld' // (2) repositories { // (3) mavenCentral () } jar { // (4) archiveBaseName = 'gs-gradle' archiveVersion = '0.1.0' } sourceCompatibility = 1.8 //(5) targetCompatibility = 1.8 dependencies { // (6) implementation \"joda-time:joda-time:2.2\" testImplementation \"junit:junit:4.12\" } \u4f7f\u7528 \u63d2\u4ef6\uff1b \u9879\u76ee\u5165\u53e3\u7c7b\uff1b \u4f9d\u8d56\u5e93\u4ed3\u5e93\u6e90\uff1b \u6253\u5305\u65b9\u5f0f\u7c7b\u578b\uff1b \u4f9d\u8d56jdk \u7248\u672c\uff1b \u4f9d\u8d56\u5e93\u58f0\u660e\uff1b gradle wrapper \u76f8\u5173 \u00b6 \u5728\u4ee5gradle \u4f5c\u4e3a\u6784\u5efa\u9879\u76ee\u7684\u6700\u4f73\u5b9e\u8df5\u4e2d\uff0c\u5efa\u8bae\u4ee5gradle wrapper \u4f5c\u4e3a\u6784\u5efa\u4efb\u4f55\u4efb\u52a1\u7684\u505a\u6cd5\u3002gradle wrapper \u811a\u672c\u4f1a\u68c0\u6d4b GRADLE_USER_HOME \u4e2d \u662f\u5426\u5305\u542b \u9879\u76ee\u9884\u5148\u5236\u5b9a\u7684gradle \u7248\u672c \uff0c\u5982\u679c\u6ca1\u6709\u4f1a\u4e0b\u8f7d\u6307\u5b9a\u7248\u672c\u7684gradle \u5230 GRADLE_USER_HOME \u4e2d\u3002\u56e0\u6b64\u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u5feb\u901f\u542f\u52a8\u9879\u76ee\uff0c\u800c\u4e0d\u9700\u8981\u914d\u7f6e\u5b89\u88c5\u590d\u6742\u7684gradle \u73af\u5883\u3002 gradle-wrapper.jar - \u7528\u4e8e\u8fd0\u884c wrapper \u529f\u80fd\u7684 api \u529f\u80fd\u4ee3\u7801 jar \u5305\u3002 gradle-wrapper.properties \u8d1f\u8d23\u914d\u7f6e Wrapper \u8fd0\u884c\u65f6\u884c\u4e3a\u7684\u5c5e\u6027\u6587\u4ef6\uff0c\u4f8b\u5982\u4e0e\u6b64\u7248\u672c\u517c\u5bb9\u7684 Gradle \u7248\u672c\uff0c\u4e0b\u8f7d\u5730\u5740\u7b49 gradlew , gradlew.bat \u7528\u4e8e\u4f7f\u7528 Wrapper \u6267\u884c\u6784\u5efa\u7684 shell \u811a\u672c\u548c Windows \u6279\u5904\u7406\u811a\u672c\u3002 .gitignore \u00b6 gitignore \u6587\u4ef6\u7684\u76ee\u7684\u662f\u786e\u4fdd\u67d0\u4e9b\u672a\u88ab Git \u8ddf\u8e2a\u7684\u6587\u4ef6 \u4fdd\u6301\u4e0d\u88abGit \u8ddf\u8e2a,\u4e0b\u6b21\u63d0\u4ea4\u7684\u65f6\u5019\u4e0d\u4f1a\u51fa\u73b0\u5728 git commit \u7684\u5217\u8868\u4e2d\u3002 \u8981\u505c\u6b62\u8ddf\u8e2a\u5f53\u524d\u8ddf\u8e2a\u7684\u6587\u4ef6\uff0c\u8bf7\u4f7f\u7528 git rm --cached xxx.txt \u3002 \u5e38\u89c1\u7684 .gitignore \u6587\u4ef6\u53c2\u8003\u5982\u4e0b\uff1a HELP.md .gradle build/ !gradle/wrapper/gradle-wrapper.jar !**/src/main/**/build/ !**/src/test/**/build/ ### STS ### .apt_generated .classpath .factorypath .project .settings .springBeans .sts4-cache bin/ !**/src/main/**/bin/ !**/src/test/**/bin/ ### IntelliJ IDEA ### .idea *.iws *.iml *.ipr out/ !**/src/main/**/out/ !**/src/test/**/out/ ### NetBeans ### /nbproject/private/ /nbbuild/ /dist/ /nbdist/ /.nb-gradle/ ### VS Code ### .vscode/ \u914d\u7f6e \u00b6 \u521b\u5efa\u6e90\u7801\u76ee\u5f55\u7ed3\u6784 \u00b6 \u5728\u9879\u76ee\u6839\u76ee\u5f55\u521b\u5efa\u4ee5\u4e0b\u76ee\u5f55,\u6216\u8005\u5728 Linux \u7ec8\u7aef\u4f7f\u7528 \u547d\u4ee4 \u521b\u5efa mkdir -p src/main/java src/main/resources src/test/java src/test/resources src/main/java : java \u6e90\u7801\u76ee\u5f55\uff1b src/main/resources : \u9879\u76ee\u9759\u6001\u8d44\u6e90\u914d\u7f6e\u6587\u4ef6\u76ee\u5f55\uff1b src/test/java : \u5355\u5143\u6d4b\u8bd5\u6e90\u7801\u76ee\u5f55\uff1b src/test/resources : \u5355\u5143\u6d4b\u8bd5\u914d\u7f6e\u6587\u4ef6\u76ee\u5f55\uff1b \u6784\u5efa\u540e\u7684\u9879\u76ee\u7ed3\u6784\u5982\u4e0b: . \u251c\u2500\u2500 .gitattributes \u251c\u2500\u2500 .gitignore \u251c\u2500\u2500 .gradle \u251c\u2500\u2500 build.gradle \u251c\u2500\u2500 gradle \u2502 \u2514\u2500\u2500 wrapper \u2502 \u251c\u2500\u2500 gradle-wrapper.jar \u2502 \u2514\u2500\u2500 gradle-wrapper.properties \u251c\u2500\u2500 gradlew \u251c\u2500\u2500 gradlew.bat \u251c\u2500\u2500 settings.gradle \u2514\u2500\u2500 src \u251c\u2500\u2500 main \u2502 \u251c\u2500\u2500 java # (1) \u2502 \u2514\u2500\u2500 resources # (2) \u2514\u2500\u2500 test \u251c\u2500\u2500 java # (3) \u2514\u2500\u2500 resources # (4) java \u6e90\u7801\u76ee\u5f55\uff1b \u9879\u76ee\u9759\u6001\u8d44\u6e90\u914d\u7f6e\u6587\u4ef6\u76ee\u5f55\uff1b \u5355\u5143\u6d4b\u8bd5\u6e90\u7801\u76ee\u5f55\uff1b \u5355\u5143\u6d4b\u8bd5\u914d\u7f6e\u6587\u4ef6\u76ee\u5f55\uff1b \u914d\u7f6e\u6784\u5efa\u811a\u672c \u00b6 \u4e00\u822c\u7684\u4e00\u4e2a\u57fa\u672c\u7684gradle \u9879\u76ee\u6784\u5efa\u5305\u542b \u63d2\u4ef6\uff0c\u4f9d\u8d56\u914d\u7f6e\uff0c\u4f9d\u8d56\u914d\u7f6e\u4ed3\u5e93\uff0c\u6253\u5305\uff0c\u4efb\u52a1\u7b49\u7ec4\u6210\u3002\u5982\u679c\u9700\u8981\u66f4\u52a0\u590d\u6742\u7684\u9879\u76ee\u6784\u5efa\uff0c\u53ef\u4ee5\u53c2\u8003 gradle\u5b98\u65b9\u6587\u6863 . \u4e00\u4e2a\u6700\u7b80\u5355\u7684\u9879\u76ee\u6784\u5efa\u811a\u672c\u5982\u4e0b\u53ef\u4ee5\u53c2\u8003 build.gradle \u6587\u4ef6 \u7ae0\u8282 \u672c\u7ae0\u8282\uff0c\u6211\u4eec\u53ef\u4ee5\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u66f4\u6539\u6211\u4eec\u7684\u914d\u7f6e: \u4f7f\u7528 idea \uff0c java , spring-boot \u7b49 \u63d2\u4ef6\uff1b \u5c06\u4ed3\u5e93\u6e90\u8bbe\u7f6e\u4e3a mavenLocal() -> aliyun -> mavenCentern() ; \u6dfb\u52a0 spring web \u5f00\u53d1\u4f9d\u8d56\u5305\uff1b \u6700\u7ec8\u914d\u7f6e\u5982\u4e0b: plugins { id 'org.springframework.boot' version '2.6.7' id 'io.spring.dependency-management' version '1.0.11.RELEASE' id 'java' } apply plugin: 'idea' apply plugin: 'eclipse' apply plugin: 'java' apply plugin: 'io.spring.dependency-management' group = 'cn.tendata.jstart' version = '0.0.1-SNAPSHOT' sourceCompatibility = 1.8 targetCompatibility = 1.8 bootJar { launchScript () } repositories { mavenCentral () } dependencies { } tasks . named ( 'test' ) { useJUnitPlatform () } \u8fd0\u884c Spring Boot \u5e94\u7528\u7a0b\u5e8f\u9664\u4e86 java -jar \u547d\u4ee4\u5916\uff0cboot plugin \u8fd8\u4e3a Unix \u7cfb\u7edf\u5236\u4f5c\u5b8c\u5168\u53ef\u6267\u884c\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\u5b8c\u5168\u53ef\u6267\u884c\u7684 jar \u53ef\u4ee5\u50cf\u4efb\u4f55\u5176\u4ed6\u53ef\u6267\u884c\u4e8c\u8fdb\u5236\u6587\u4ef6\u4e00\u6837\u6267\u884c\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u6216\u6ce8\u518cinit.dsystemd\u3002\u8fd9\u4f7f\u5f97\u5728\u5e38\u89c1\u7684\u751f\u4ea7\u73af\u5883\u4e2d\u5b89\u88c5\u548c\u7ba1\u7406 Spring Boot \u5e94\u7528\u7a0b\u5e8f\u53d8\u5f97\u975e\u5e38\u5bb9\u6613\u3002 \u5bf9\u4e8egradle \u914d\u7f6e bootJar { launchScript () } \u9a8c\u8bc1 \u00b6 \u9a8c\u8bc1\u521d\u59cb\u5316\u73af\u5883\u4ece\u4ee5\u4e0b\u51e0\u4e2a \u65b9\u6cd5\u6765\u9a8c\u8bc1\uff1a \u9a8c\u8bc1 gradle wrapper H\u73af\u5883\u662f\u5426\u5b89\u88c5\u6b63\u786e: linux windows ./gradlew --version ./gradlew.bat --version \u663e\u793a\u5982\u4e0b\u7ed3\u679c\uff0c\u8868\u793a\u5b89\u88c5\u6210\u529f: ------------------------------------------------------------ Gradle 7 .4.2 ------------------------------------------------------------ Build time: 2022 -03-31 15 :25:29 UTC Revision: 540473b8118064efcc264694cbcaa4b677f61041 Kotlin: 1 .5.31 Groovy: 3 .0.9 Ant: Apache Ant ( TM ) version 1 .10.11 compiled on July 10 2021 JVM: 1 .8.0_282 ( Eclipse OpenJ9 openj9-0.24.0 ) OS: Windows 8 .1 6 .3 amd64 2. \u67e5\u770bgradle \u4efb\u52a1: ./gradlew tasks \u663e\u793a\u5982\u4e0b\u7ed3\u679c: \ue0b0 luwei@DESKTOP-TDFJPJJ \ue0b0 \uf7db \ue0b1 \uf115 \ue0b1 \uf115 \ue0b1 \uf115 \ue0b1 \uf115 \ue0b1 tendata-jstart \ue0b0 . \\g radlew.bat tasks > Task :tasks ------------------------------------------------------------ Tasks runnable from root project 'tendata-jstart' ------------------------------------------------------------ Application tasks ----------------- bootRun - Runs this project as a Spring Boot application. Build tasks ----------- assemble - Assembles the outputs of this project. bootBuildImage - Builds an OCI image of the application using the output of the bootJar task bootJar - Assembles an executable jar archive containing the main classes and their dependencies. bootJarMainClassName - Resolves the name of the application 's main class for the bootJar task. bootRunMainClassName - Resolves the name of the application' s main class for the bootRun task. build - Assembles and tests this project. buildDependents - Assembles and tests this project and all projects that depend on it. buildNeeded - Assembles and tests this project and all projects it depends on. classes - Assembles main classes. clean - Deletes the build directory. jar - Assembles a jar archive containing the main classes. testClasses - Assembles test classes. Build Setup tasks ----------------- init - Initializes a new Gradle build. wrapper - Generates Gradle wrapper files. Documentation tasks ------------------- javadoc - Generates Javadoc API documentation for the main source code. Help tasks ---------- buildEnvironment - Displays all buildscript dependencies declared in root project 'tendata-jstart' . dependencies - Displays all dependencies declared in root project 'tendata-jstart' . dependencyInsight - Displays the insight into a specific dependency in root project 'tendata-jstart' . dependencyManagement - Displays the dependency management declared in root project 'tendata-jstart' . help - Displays a help message. javaToolchains - Displays the detected java toolchains. outgoingVariants - Displays the outgoing variants of root project 'tendata-jstart' . projects - Displays the sub-projects of root project 'tendata-jstart' . properties - Displays the properties of root project 'tendata-jstart' . tasks - Displays the tasks runnable from root project 'tendata-jstart' . IDE tasks --------- cleanEclipse - Cleans all Eclipse files. cleanIdea - Cleans IDEA project files ( IML, IPR ) eclipse - Generates all Eclipse files. idea - Generates IDEA project files ( IML, IPR, IWS ) openIdea - Opens the IDEA project Verification tasks ------------------ check - Runs all checks. test - Runs the test suite. Rules ----- Pattern: clean<TaskName>: Cleans the output files of a task. Pattern: build<ConfigurationName>: Assembles the artifacts of a configuration. To see all tasks and more detail, run gradlew tasks --all To see more detail about a task, run gradlew help --task <task> BUILD SUCCESSFUL in 2s 1 actionable task: 1 executed","title":"\u521d\u59cb\u5316"},{"location":"project/basic/init/#_1","text":"Gradle \u5185\u7f6e\u4e00\u4e2a init \u4efb\u52a1 \uff0c\u5b83\u5728\u4e00\u4e2a\u7a7a\u6587\u4ef6\u5939\u4e2d\u521d\u59cb\u5316\u4e00\u4e2a\u65b0\u7684 Gradle \u9879\u76ee\u3002 Init \u4efb\u52a1 \u4f7f\u7528(\u4e5f\u662f\u5185\u7f6e\u7684) wrapper \u4efb\u52a1 \u521b\u5efa Gradle wrapper \u811a\u672c - gradlew \u6587\u4ef6\u3002 \u521b\u5efa\u65b0\u9879\u76ee\u6587\u4ef6\u5939 tendata-jstart \uff1b mkdir tendata-jstart \u8fdb\u5165 \u65b0\u9879\u76ee\u6587\u4ef6\u5939\uff1b cd tendata-jstart","title":"\u521b\u5efa\u9879\u76ee\u6587\u4ef6\u76ee\u5f55"},{"location":"project/basic/init/#gradle","text":"\u5728\u65b0\u9879\u76ee\u76ee\u5f55\u4e2d\uff0c\u5728\u7ec8\u7aef\u4e2d\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u8fd0\u884c init \u4efb\u52a1: gradle init \uff0c\u6839\u636e\u63d0\u793a\u9009\u62e9\u76f8\u5e94\u7684\u9009\u9879\u3002 \u7531\u4e8egradle init \u521d\u59cb\u5316\u7684\u6e90\u7801\u76ee\u5f55\u7ed3\u6784\u548c\u73b0\u6709\u76ee\u5f55\u7ed3\u6784 \u4e0d\u76f8\u5339\u914d\uff0c\u9009\u62e9 \u9879\u76ee\u7c7b\u578b\u65f6\uff0c\u9009\u62e9 1 - basic \u7c7b\u578b\u5373\u53ef\uff1b\u6784\u5efa\u811a\u672c\u9009\u62e9 groovy ;\u5176\u4ed6\u9009\u62e9\u9ed8\u8ba4\u5373\u53ef\u3002 \u8f93\u51fa\u5982\u4e0b\uff1a $ gradle init Starting a Gradle Daemon (subsequent builds will be faster) Select type of project to generate: 1: basic 2: application 3: library 4: Gradle plugin Enter selection (default: basic) [1..4] 1 Select build script DSL: 1: Groovy 2: Kotlin Enter selection (default: Groovy) [1..2] 1 Generate build using new APIs and behavior (some features may change in the next minor release)? (default: no) [yes, no] Project name (default: tendata-jstart): > Task :init Get more help with your project: Learn more about Gradle by exploring our samples at https://docs.gradle.org/7.4.2/samples BUILD SUCCESSFUL in 4m 26s 2 actionable tasks: 2 executed init \u4efb\u52a1\u8f93\u51fa\u5982\u4e0b\u9879\u76ee\u7ed3\u6784 . \u251c\u2500\u2500 .gitattributes \u251c\u2500\u2500 .gitignore # (1) \u251c\u2500\u2500 .gradle \u251c\u2500\u2500 build.gradle # (2) \u251c\u2500\u2500 gradle # (3) \u2502 \u2514\u2500\u2500 wrapper \u2502 \u251c\u2500\u2500 gradle-wrapper.jar \u2502 \u2514\u2500\u2500 gradle-wrapper.properties \u251c\u2500\u2500 gradlew # (4) \u251c\u2500\u2500 gradlew.bat \u2514\u2500\u2500 settings.gradle # (5) 3 directories, 8 files git \u63d0\u4ea4\u5ffd\u7565 \u914d\u7f6e\u6587\u4ef6\uff1b \u9879\u76ee\u6784\u5efa\u6587\u4ef6\uff1b gradle wrapper \u6587\u4ef6\u5305\uff1b gradle wrapper \u811a\u672c\u6587\u4ef6, windows \u4f7f\u7528 gradlew.bat \u6587\u4ef6 \uff1b gradle \u5b9a\u4e49\u751f\u6210\u540d\u79f0\u548c\u5b50\u9879\u76ee\u7684\u914d\u7f6e\u6587\u4ef6\uff1b","title":"\u8fd0\u884c gradle  \u521d\u59cb\u5316\u4efb\u52a1"},{"location":"project/basic/init/#settingsgradle","text":"settings.gradle \u4e3b\u8981\u5305\u542b\u4e24\u4e2a\u65b9\u9762\u7684\u4f5c\u7528: \u8bbe\u7f6e\u9876\u5c42\u9879\u76ee\u540d\u79f0\uff0c\u4f7f\u7528 rootProject.name \uff1b \u7ec4\u7ec7\u5b50\u9879\u76ee\u6a21\u5757\uff0c \u4f7f\u7528 include \u65b9\u6cd5\uff1b \u5e38\u89c1\u7684\u5c5e\u6027\u914d\u7f6e\u6709: rootProject . name = 'demo' include ( 'app1' ) include ( 'app2' ) \u8be5\u6bb5\u914d\u7f6e\u8868\u793a \u4e00\u4e2ademo\u540d\u79f0\u7684\u9879\u76ee\u5305\u542b app1 , app2 \u4e24\u4e2a\u529f\u80fd\u6a21\u5757\uff1a rootProject.name - \u4e3a\u6784\u5efa\u5206\u914d\u4e00\u4e2a\u540d\u79f0\uff0c\u8fd9\u5c06\u8986\u76d6\u4ee5\u5176\u6240\u5728\u76ee\u5f55\u547d\u540d\u6784\u5efa\u7684\u9ed8\u8ba4\u884c\u4e3a\u3002\u5efa\u8bae\u8bbe\u7f6e\u4e00\u4e2a\u56fa\u5b9a\u7684\u540d\u79f0\uff0c\u56e0\u4e3a\u5982\u679c\u9879\u76ee\u662f\u5171\u4eab\u7684\uff0c\u90a3\u4e48\u6587\u4ef6\u5939\u53ef\u80fd\u4f1a\u53d1\u751f\u53d8\u5316\u2014\u2014\u4f8b\u5982\u4f5c\u4e3a Git \u5b58\u50a8\u5e93\u7684\u6839\u76ee\u5f55 include : \u5b9a\u4e49\u4e00\u4e2a\u5b50\u9879\u76ee\u6a21\u5757 \u4f8b\u5982 app1 \u5305\u542b\u5728\u9876\u5c42\u9879\u76ee\u4e2d\uff1b","title":"settings.gradle"},{"location":"project/basic/init/#buildgradle","text":"build.gradle \u4f5c\u4e3a\u9879\u76ee\u7684\u6784\u5efa\u811a\u672c\uff0c\u5b9a\u4e49\u4e86\u9879\u76ee\u7684\u6784\u5efa\uff0c\u8fd0\u884c\u73af\u5883\uff0c\u5305\u4f9d\u8d56\uff0c\u4ee5\u53ca\u6253\u5305\u89c4\u5219\u7b49\u3002\u76f8\u8f83\u4ee5\u524d\u7684maven\uff0cant \u6784\u5efa\u6765\u8bf4\uff0c\u4f9d\u6258\u4e8e \u7075\u6d3b\u7684 groovy \u811a\u672c\u8bed\u8a00\u548c\u5f3a\u5927\u7684\u63d2\u4ef6\u529f\u80fd\uff0c\u4f7f\u5f97gradle \u5728\u9879\u76ee\u6784\u5efa\u65b9\u9762\u66f4\u52a0\u7075\u6d3b\uff0c\u4f46\u662f\u4e5f\u63d0\u9ad8\u5f00\u53d1\u4eba\u5458\u7684\u5b66\u4e60\u95e8\u69db\u3002 \u5e38\u89c1\u7684\u914d\u7f6e\u5982\u4e0b\uff1a apply plugin: 'java' // (1) apply plugin: 'eclipse' apply plugin: 'application' mainClassName = 'hello.HelloWorld' // (2) repositories { // (3) mavenCentral () } jar { // (4) archiveBaseName = 'gs-gradle' archiveVersion = '0.1.0' } sourceCompatibility = 1.8 //(5) targetCompatibility = 1.8 dependencies { // (6) implementation \"joda-time:joda-time:2.2\" testImplementation \"junit:junit:4.12\" } \u4f7f\u7528 \u63d2\u4ef6\uff1b \u9879\u76ee\u5165\u53e3\u7c7b\uff1b \u4f9d\u8d56\u5e93\u4ed3\u5e93\u6e90\uff1b \u6253\u5305\u65b9\u5f0f\u7c7b\u578b\uff1b \u4f9d\u8d56jdk \u7248\u672c\uff1b \u4f9d\u8d56\u5e93\u58f0\u660e\uff1b","title":"build.gradle"},{"location":"project/basic/init/#gradle-wrapper","text":"\u5728\u4ee5gradle \u4f5c\u4e3a\u6784\u5efa\u9879\u76ee\u7684\u6700\u4f73\u5b9e\u8df5\u4e2d\uff0c\u5efa\u8bae\u4ee5gradle wrapper \u4f5c\u4e3a\u6784\u5efa\u4efb\u4f55\u4efb\u52a1\u7684\u505a\u6cd5\u3002gradle wrapper \u811a\u672c\u4f1a\u68c0\u6d4b GRADLE_USER_HOME \u4e2d \u662f\u5426\u5305\u542b \u9879\u76ee\u9884\u5148\u5236\u5b9a\u7684gradle \u7248\u672c \uff0c\u5982\u679c\u6ca1\u6709\u4f1a\u4e0b\u8f7d\u6307\u5b9a\u7248\u672c\u7684gradle \u5230 GRADLE_USER_HOME \u4e2d\u3002\u56e0\u6b64\u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u5feb\u901f\u542f\u52a8\u9879\u76ee\uff0c\u800c\u4e0d\u9700\u8981\u914d\u7f6e\u5b89\u88c5\u590d\u6742\u7684gradle \u73af\u5883\u3002 gradle-wrapper.jar - \u7528\u4e8e\u8fd0\u884c wrapper \u529f\u80fd\u7684 api \u529f\u80fd\u4ee3\u7801 jar \u5305\u3002 gradle-wrapper.properties \u8d1f\u8d23\u914d\u7f6e Wrapper \u8fd0\u884c\u65f6\u884c\u4e3a\u7684\u5c5e\u6027\u6587\u4ef6\uff0c\u4f8b\u5982\u4e0e\u6b64\u7248\u672c\u517c\u5bb9\u7684 Gradle \u7248\u672c\uff0c\u4e0b\u8f7d\u5730\u5740\u7b49 gradlew , gradlew.bat \u7528\u4e8e\u4f7f\u7528 Wrapper \u6267\u884c\u6784\u5efa\u7684 shell \u811a\u672c\u548c Windows \u6279\u5904\u7406\u811a\u672c\u3002","title":"gradle wrapper \u76f8\u5173"},{"location":"project/basic/init/#gitignore","text":"gitignore \u6587\u4ef6\u7684\u76ee\u7684\u662f\u786e\u4fdd\u67d0\u4e9b\u672a\u88ab Git \u8ddf\u8e2a\u7684\u6587\u4ef6 \u4fdd\u6301\u4e0d\u88abGit \u8ddf\u8e2a,\u4e0b\u6b21\u63d0\u4ea4\u7684\u65f6\u5019\u4e0d\u4f1a\u51fa\u73b0\u5728 git commit \u7684\u5217\u8868\u4e2d\u3002 \u8981\u505c\u6b62\u8ddf\u8e2a\u5f53\u524d\u8ddf\u8e2a\u7684\u6587\u4ef6\uff0c\u8bf7\u4f7f\u7528 git rm --cached xxx.txt \u3002 \u5e38\u89c1\u7684 .gitignore \u6587\u4ef6\u53c2\u8003\u5982\u4e0b\uff1a HELP.md .gradle build/ !gradle/wrapper/gradle-wrapper.jar !**/src/main/**/build/ !**/src/test/**/build/ ### STS ### .apt_generated .classpath .factorypath .project .settings .springBeans .sts4-cache bin/ !**/src/main/**/bin/ !**/src/test/**/bin/ ### IntelliJ IDEA ### .idea *.iws *.iml *.ipr out/ !**/src/main/**/out/ !**/src/test/**/out/ ### NetBeans ### /nbproject/private/ /nbbuild/ /dist/ /nbdist/ /.nb-gradle/ ### VS Code ### .vscode/","title":".gitignore"},{"location":"project/basic/init/#_2","text":"","title":"\u914d\u7f6e"},{"location":"project/basic/init/#_3","text":"\u5728\u9879\u76ee\u6839\u76ee\u5f55\u521b\u5efa\u4ee5\u4e0b\u76ee\u5f55,\u6216\u8005\u5728 Linux \u7ec8\u7aef\u4f7f\u7528 \u547d\u4ee4 \u521b\u5efa mkdir -p src/main/java src/main/resources src/test/java src/test/resources src/main/java : java \u6e90\u7801\u76ee\u5f55\uff1b src/main/resources : \u9879\u76ee\u9759\u6001\u8d44\u6e90\u914d\u7f6e\u6587\u4ef6\u76ee\u5f55\uff1b src/test/java : \u5355\u5143\u6d4b\u8bd5\u6e90\u7801\u76ee\u5f55\uff1b src/test/resources : \u5355\u5143\u6d4b\u8bd5\u914d\u7f6e\u6587\u4ef6\u76ee\u5f55\uff1b \u6784\u5efa\u540e\u7684\u9879\u76ee\u7ed3\u6784\u5982\u4e0b: . \u251c\u2500\u2500 .gitattributes \u251c\u2500\u2500 .gitignore \u251c\u2500\u2500 .gradle \u251c\u2500\u2500 build.gradle \u251c\u2500\u2500 gradle \u2502 \u2514\u2500\u2500 wrapper \u2502 \u251c\u2500\u2500 gradle-wrapper.jar \u2502 \u2514\u2500\u2500 gradle-wrapper.properties \u251c\u2500\u2500 gradlew \u251c\u2500\u2500 gradlew.bat \u251c\u2500\u2500 settings.gradle \u2514\u2500\u2500 src \u251c\u2500\u2500 main \u2502 \u251c\u2500\u2500 java # (1) \u2502 \u2514\u2500\u2500 resources # (2) \u2514\u2500\u2500 test \u251c\u2500\u2500 java # (3) \u2514\u2500\u2500 resources # (4) java \u6e90\u7801\u76ee\u5f55\uff1b \u9879\u76ee\u9759\u6001\u8d44\u6e90\u914d\u7f6e\u6587\u4ef6\u76ee\u5f55\uff1b \u5355\u5143\u6d4b\u8bd5\u6e90\u7801\u76ee\u5f55\uff1b \u5355\u5143\u6d4b\u8bd5\u914d\u7f6e\u6587\u4ef6\u76ee\u5f55\uff1b","title":"\u521b\u5efa\u6e90\u7801\u76ee\u5f55\u7ed3\u6784"},{"location":"project/basic/init/#_4","text":"\u4e00\u822c\u7684\u4e00\u4e2a\u57fa\u672c\u7684gradle \u9879\u76ee\u6784\u5efa\u5305\u542b \u63d2\u4ef6\uff0c\u4f9d\u8d56\u914d\u7f6e\uff0c\u4f9d\u8d56\u914d\u7f6e\u4ed3\u5e93\uff0c\u6253\u5305\uff0c\u4efb\u52a1\u7b49\u7ec4\u6210\u3002\u5982\u679c\u9700\u8981\u66f4\u52a0\u590d\u6742\u7684\u9879\u76ee\u6784\u5efa\uff0c\u53ef\u4ee5\u53c2\u8003 gradle\u5b98\u65b9\u6587\u6863 . \u4e00\u4e2a\u6700\u7b80\u5355\u7684\u9879\u76ee\u6784\u5efa\u811a\u672c\u5982\u4e0b\u53ef\u4ee5\u53c2\u8003 build.gradle \u6587\u4ef6 \u7ae0\u8282 \u672c\u7ae0\u8282\uff0c\u6211\u4eec\u53ef\u4ee5\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u66f4\u6539\u6211\u4eec\u7684\u914d\u7f6e: \u4f7f\u7528 idea \uff0c java , spring-boot \u7b49 \u63d2\u4ef6\uff1b \u5c06\u4ed3\u5e93\u6e90\u8bbe\u7f6e\u4e3a mavenLocal() -> aliyun -> mavenCentern() ; \u6dfb\u52a0 spring web \u5f00\u53d1\u4f9d\u8d56\u5305\uff1b \u6700\u7ec8\u914d\u7f6e\u5982\u4e0b: plugins { id 'org.springframework.boot' version '2.6.7' id 'io.spring.dependency-management' version '1.0.11.RELEASE' id 'java' } apply plugin: 'idea' apply plugin: 'eclipse' apply plugin: 'java' apply plugin: 'io.spring.dependency-management' group = 'cn.tendata.jstart' version = '0.0.1-SNAPSHOT' sourceCompatibility = 1.8 targetCompatibility = 1.8 bootJar { launchScript () } repositories { mavenCentral () } dependencies { } tasks . named ( 'test' ) { useJUnitPlatform () } \u8fd0\u884c Spring Boot \u5e94\u7528\u7a0b\u5e8f\u9664\u4e86 java -jar \u547d\u4ee4\u5916\uff0cboot plugin \u8fd8\u4e3a Unix \u7cfb\u7edf\u5236\u4f5c\u5b8c\u5168\u53ef\u6267\u884c\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\u5b8c\u5168\u53ef\u6267\u884c\u7684 jar \u53ef\u4ee5\u50cf\u4efb\u4f55\u5176\u4ed6\u53ef\u6267\u884c\u4e8c\u8fdb\u5236\u6587\u4ef6\u4e00\u6837\u6267\u884c\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u6216\u6ce8\u518cinit.dsystemd\u3002\u8fd9\u4f7f\u5f97\u5728\u5e38\u89c1\u7684\u751f\u4ea7\u73af\u5883\u4e2d\u5b89\u88c5\u548c\u7ba1\u7406 Spring Boot \u5e94\u7528\u7a0b\u5e8f\u53d8\u5f97\u975e\u5e38\u5bb9\u6613\u3002 \u5bf9\u4e8egradle \u914d\u7f6e bootJar { launchScript () }","title":"\u914d\u7f6e\u6784\u5efa\u811a\u672c"},{"location":"project/basic/init/#_5","text":"\u9a8c\u8bc1\u521d\u59cb\u5316\u73af\u5883\u4ece\u4ee5\u4e0b\u51e0\u4e2a \u65b9\u6cd5\u6765\u9a8c\u8bc1\uff1a \u9a8c\u8bc1 gradle wrapper H\u73af\u5883\u662f\u5426\u5b89\u88c5\u6b63\u786e: linux windows ./gradlew --version ./gradlew.bat --version \u663e\u793a\u5982\u4e0b\u7ed3\u679c\uff0c\u8868\u793a\u5b89\u88c5\u6210\u529f: ------------------------------------------------------------ Gradle 7 .4.2 ------------------------------------------------------------ Build time: 2022 -03-31 15 :25:29 UTC Revision: 540473b8118064efcc264694cbcaa4b677f61041 Kotlin: 1 .5.31 Groovy: 3 .0.9 Ant: Apache Ant ( TM ) version 1 .10.11 compiled on July 10 2021 JVM: 1 .8.0_282 ( Eclipse OpenJ9 openj9-0.24.0 ) OS: Windows 8 .1 6 .3 amd64 2. \u67e5\u770bgradle \u4efb\u52a1: ./gradlew tasks \u663e\u793a\u5982\u4e0b\u7ed3\u679c: \ue0b0 luwei@DESKTOP-TDFJPJJ \ue0b0 \uf7db \ue0b1 \uf115 \ue0b1 \uf115 \ue0b1 \uf115 \ue0b1 \uf115 \ue0b1 tendata-jstart \ue0b0 . \\g radlew.bat tasks > Task :tasks ------------------------------------------------------------ Tasks runnable from root project 'tendata-jstart' ------------------------------------------------------------ Application tasks ----------------- bootRun - Runs this project as a Spring Boot application. Build tasks ----------- assemble - Assembles the outputs of this project. bootBuildImage - Builds an OCI image of the application using the output of the bootJar task bootJar - Assembles an executable jar archive containing the main classes and their dependencies. bootJarMainClassName - Resolves the name of the application 's main class for the bootJar task. bootRunMainClassName - Resolves the name of the application' s main class for the bootRun task. build - Assembles and tests this project. buildDependents - Assembles and tests this project and all projects that depend on it. buildNeeded - Assembles and tests this project and all projects it depends on. classes - Assembles main classes. clean - Deletes the build directory. jar - Assembles a jar archive containing the main classes. testClasses - Assembles test classes. Build Setup tasks ----------------- init - Initializes a new Gradle build. wrapper - Generates Gradle wrapper files. Documentation tasks ------------------- javadoc - Generates Javadoc API documentation for the main source code. Help tasks ---------- buildEnvironment - Displays all buildscript dependencies declared in root project 'tendata-jstart' . dependencies - Displays all dependencies declared in root project 'tendata-jstart' . dependencyInsight - Displays the insight into a specific dependency in root project 'tendata-jstart' . dependencyManagement - Displays the dependency management declared in root project 'tendata-jstart' . help - Displays a help message. javaToolchains - Displays the detected java toolchains. outgoingVariants - Displays the outgoing variants of root project 'tendata-jstart' . projects - Displays the sub-projects of root project 'tendata-jstart' . properties - Displays the properties of root project 'tendata-jstart' . tasks - Displays the tasks runnable from root project 'tendata-jstart' . IDE tasks --------- cleanEclipse - Cleans all Eclipse files. cleanIdea - Cleans IDEA project files ( IML, IPR ) eclipse - Generates all Eclipse files. idea - Generates IDEA project files ( IML, IPR, IWS ) openIdea - Opens the IDEA project Verification tasks ------------------ check - Runs all checks. test - Runs the test suite. Rules ----- Pattern: clean<TaskName>: Cleans the output files of a task. Pattern: build<ConfigurationName>: Assembles the artifacts of a configuration. To see all tasks and more detail, run gradlew tasks --all To see more detail about a task, run gradlew help --task <task> BUILD SUCCESSFUL in 2s 1 actionable task: 1 executed","title":"\u9a8c\u8bc1"},{"location":"project/basic/publish/","text":"\u76ee\u6807 \u00b6 \u76ee\u6807\uff1a \u5728\u73b0\u6709\u6d4b\u8bd5\u73af\u5883\u4f7f\u7528 jekins pipline \u811a\u672c\u90e8\u7f72\u4e0a\u8ff0\u5f00\u53d1\u7684\u5f00\u59cb\u9879\u76ee\u3002 \u524d\u63d0: jekins \u670d\u52a1\u5668\u3002 web \u8fd0\u884c\u670d\u52a1\u5668\uff1b Gitlab \u4ee3\u7801\u7248\u672c\u63a7\u5236\u670d\u52a1\uff1b \u6784\u5efa \u00b6 \u8fd0\u884c\u547d\u4ee4 gradlew clean build Starting a Gradle Daemon, 1 incompatible Daemon could not be reused, use --status for details > Task :test 16 :10:59.572 [ SpringContextShutdownHook ] DEBUG org.springframework.web.context.support.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@958c9bcb, started on Wed May 18 16 : 10 :57 CST 2022 BUILD SUCCESSFUL in 19s 4 actionable tasks: 2 executed, 2 up-to-date C: \\U sers \\l uwei \\D esktop \\t endata \\k pi \\d ocuments \\t endata-jstart>gradlew.bat build BUILD SUCCESSFUL in 3s 7 actionable tasks: 7 up-to-date Info \u7b2c\u4e00\u6b21\u8fd0\u884c\u6784\u5efa\u65f6\uff0cGradle \u5c06\u68c0\u67e5\u60a8\u7684 ~/.gradle \u4e0b\u7684\u7f13\u5b58\u4e2d\u662f\u5426\u5df2\u7ecf\u5177\u6709\u6240\u9700\u7684\u4f9d\u8d56\u9879\u3002\u5982\u679c\u6ca1\u6709\uff0c\u4f9d\u8d56\u5305\u5c06\u88ab\u4e0b\u8f7d\u5e76\u5b58\u50a8\u5728\u8fd9\u91cc\u3002\u4e0b\u6b21\u8fd0\u884c\u6784\u5efa\u65f6\uff0c\u5c06\u4f7f\u7528\u7f13\u5b58\u7684\u7248\u672c\u3002\u751f\u6210\u4efb\u52a1\u7f16\u8bd1\u7c7b\u3001\u8fd0\u884c\u6d4b\u8bd5\u5e76\u751f\u6210\u6d4b\u8bd5\u62a5\u544a\u3002 \u60a8\u53ef\u4ee5\u901a\u8fc7\u6253\u5f00\u4f4d\u4e8e build/reports/tests/test/index.html \u4e2d\u7684 HTML \u6587\u4ef6\u6765\u67e5\u770b\u6d4b\u8bd5\u62a5\u544a\u3002 \u60a8\u53ef\u4ee5\u5728\u540d\u4e3as build/libs \u76ee\u5f55\u4e2d\u627e\u5230\u65b0\u6253\u5305\u7684 JAR \u6587\u4ef6\u3002\u901a\u8fc7\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u9a8c\u8bc1\u5b58\u6863\u662f\u5426\u6709\u6548: $ jar tf build/libs/tendata-jstart-0.0.1-SNAPSHOT.jar META-INF/ META-INF/MANIFEST.MF org/ org/springframework/ org/springframework/boot/ org/springframework/boot/loader/ org/springframework/boot/loader/ClassPathIndexFile.class org/springframework/boot/loader/ExecutableArchiveLauncher.class org/springframework/boot/loader/JarLauncher.class org/springframework/boot/loader/LaunchedURLClassLoader $DefinePackageCallType .class org/springframework/boot/loader/LaunchedURLClassLoader $UseFastConnectionExceptionsEnumeration .class org/springframework/boot/loader/LaunchedURLClassLoader.class org/springframework/boot/loader/Launcher.class org/springframework/boot/loader/MainMethodRunner.class org/springframework/boot/loader/PropertiesLauncher $1 .class ... org/springframework/boot/loader/util/ org/springframework/boot/loader/util/SystemPropertyUtils.class BOOT-INF/ BOOT-INF/classes/ BOOT-INF/classes/cn/ BOOT-INF/classes/cn/tendata/ BOOT-INF/classes/cn/tendata/jstart/ BOOT-INF/classes/cn/tendata/jstart/Application $JpaConfig .class BOOT-INF/classes/cn/tendata/jstart/Application.class BOOT-INF/classes/cn/tendata/jstart/config/ BOOT-INF/classes/cn/tendata/jstart/config/jackson/ BOOT-INF/classes/cn/tendata/jstart/config/jackson/databind/ BOOT-INF/classes/cn/tendata/jstart/config/jackson/databind/PageSerializer.class BOOT-INF/classes/cn/tendata/jstart/config/JacksonConfig $EmptyStringAsNullDeserializer .class BOOT-INF/classes/cn/tendata/jstart/config/JacksonConfig.class ... BOOT-INF/classes/cn/tendata/jstart/service/OwnerService.class BOOT-INF/classes/cn/tendata/jstart/service/OwnerServiceImpl.class BOOT-INF/classes/application.yml BOOT-INF/classes/swagger/ BOOT-INF/classes/swagger/api.yml BOOT-INF/classes/swagger/parameters/ BOOT-INF/classes/swagger/parameters/path/ BOOT-INF/classes/swagger/parameters/path/ownerId.yml BOOT-INF/classes/swagger/parameters/_index.yml BOOT-INF/classes/swagger/resources/ BOOT-INF/classes/swagger/resources/owner.yml BOOT-INF/classes/swagger/resources/owners.yml BOOT-INF/classes/swagger/schemas/ BOOT-INF/classes/swagger/schemas/component.yml BOOT-INF/classes/swagger/schemas/Error.yaml BOOT-INF/lib/ BOOT-INF/lib/h2-1.4.200.jar BOOT-INF/lib/jackson-datatype-jdk8-2.13.2.jar BOOT-INF/lib/spring-data-jpa-2.6.4.jar BOOT-INF/lib/spring-aspects-5.3.19.jar BOOT-INF/lib/spring-webmvc-5.3.19.jar BOOT-INF/lib/spring-web-5.3.19.jar BOOT-INF/lib/tomcat-embed-el-9.0.62.jar BOOT-INF/lib/hibernate-validator-6.2.3.Final.jar BOOT-INF/lib/javax.transaction-api-1.3.jar BOOT-INF/lib/spring-boot-autoconfigure-2.6.7.jar BOOT-INF/lib/spring-boot-2.6.7.jar BOOT-INF/lib/spring-context-5.3.19.jar BOOT-INF/lib/spring-aop-5.3.19.jar BOOT-INF/lib/aspectjweaver-1.9.7.jar BOOT-INF/lib/HikariCP-4.0.3.jar BOOT-INF/lib/spring-orm-5.3.19.jar BOOT-INF/lib/spring-jdbc-5.3.19.jar ... BOOT-INF/classpath.idx BOOT-INF/layers.idx \u60a8\u5e94\u8be5\u770b\u5230\u6240\u9700\u7684\u6e05\u5355\u6587\u4ef6\u30fc manifest.mf \u30fc\u548c\u7f16\u8bd1\u540e\u7684 Library \u7c7b \u6ce8\u518c\u670d\u52a1 \u00b6 \u4e0a\u4f20jar \u5305\u5230Web\u670d\u52a1\u5668\uff0c\u76ee\u5f55\u4e3a ~/server/tendata/jstart ,\u5e76\u4fee\u6539\u540d\u79f0\u4e3a tendata-jstart.jar ,\u5e76\u4f7f\u7528\u547d\u4ee4 sudo chmod +x tendata-jstart.jar \u4e3a\u5176\u6388\u4e88\u6267\u884c\u6743\u9650\u3002 \u8fdb\u5165Web\u670d\u52a1\u5668\u76ee\u5f55 $ cd /usr/lib/systemd/system copy \u4ee5\u4e0b\u5185\u5bb9\u5230 tendata-jstart.service \u6587\u4ef6\u4e2d\uff08\u670d\u52a1\u540d tendata-jstart \uff09 [Unit] Description = tendata java start project After = syslog.target network.target [Service] ExecStart = /home/tend/server/tendata/jstart/tendata-jstart.jar SuccessExitStatus = 143 User = root Group = root [Install] WantedBy = multi-user.target Tip \u5728web\u670d\u52a1\u5668\u53ef\u4ee5\u4f7f\u7528 sudo systemctl start tendata-jstart \u5355\u72ec\u542f\u52a8\u670d\u52a1\u3002 \u914d\u7f6e jekins \u00b6 \u9488\u5bf9jekins \u914d\u7f6e\uff0c\u8fd9\u91cc\u53ea\u9488\u5bf9 jenkins \u7684pipline \u811a\u672c\u8fdb\u884c\u914d\u7f6e\u3002\u5176\u4ed6\u57fa\u7840\u914d\u7f6e\u4f8b\u5982\u65b0\u5efa\u9879\u76ee\u7b49\uff0c\u53ef\u5728\u6d4b\u8bd5\u73af\u5883\u6478\u7d22\u3002 pipeline { agent any tools { git \"git\" } stages { stage ( \"Check out\" ){ steps { git branch: \"develop\" , credentialsId: '3af5404b-e7b4-462d-8a74-fcebc456b498' , url: 'http://xxxx.com.cn/tendata/develop/tendata-jstart.git' } } stage ( 'Build' ) { steps { sh \"chmod +x gradlew\" sh \"./gradlew clean build\" } } stage ( 'Deploy' ) { steps { sh \"scp -i /var/jenkins_home/ssh/id_rsa -P 22 -r tendata-jstart/build/libs/tendata-jstart-*.jar tend@192.168.xxx.xxx:/home/tend/server/tendata/jstart/\" sh \"ssh -i /var/jenkins_home/ssh/id_rsa tend@192.168.xxx.xxx 'cd jenkins && ./deploy.sh /home/tend/server/tendata/jstart tendata-jstart tendata-jstart-server ${BUILD_NUMBER}'\" } } } } \u5728\u672c\u811a\u672c\u4e2d\uff0c \u4e3b\u8981\u6709\u4ee5\u4e0b\u51e0\u4e2a\u64cd\u4f5c: \u4f7f\u7528 jenkins \u7684 git \u63d2\u4ef6\uff1b \u4ece Git \u4ed3\u5e93\u68c0\u51fa \u9879\u76ee\u4ee3\u7801\uff1b \u5c06\u68c0\u51fa\u4ee3\u7801\u6784\u5efa\u4e3ajar \u5305\uff1b \u5c06jar \u590d\u5236\u5230\u8fdc\u7a0bweb\u670d\u52a1\u5668\uff1b \u8fd0\u884c\u811a\u672c\u542f\u52a8 tendata-jstart \u670d\u52a1\u3002","title":"\u53d1\u5e03"},{"location":"project/basic/publish/#_1","text":"\u76ee\u6807\uff1a \u5728\u73b0\u6709\u6d4b\u8bd5\u73af\u5883\u4f7f\u7528 jekins pipline \u811a\u672c\u90e8\u7f72\u4e0a\u8ff0\u5f00\u53d1\u7684\u5f00\u59cb\u9879\u76ee\u3002 \u524d\u63d0: jekins \u670d\u52a1\u5668\u3002 web \u8fd0\u884c\u670d\u52a1\u5668\uff1b Gitlab \u4ee3\u7801\u7248\u672c\u63a7\u5236\u670d\u52a1\uff1b","title":"\u76ee\u6807"},{"location":"project/basic/publish/#_2","text":"\u8fd0\u884c\u547d\u4ee4 gradlew clean build Starting a Gradle Daemon, 1 incompatible Daemon could not be reused, use --status for details > Task :test 16 :10:59.572 [ SpringContextShutdownHook ] DEBUG org.springframework.web.context.support.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@958c9bcb, started on Wed May 18 16 : 10 :57 CST 2022 BUILD SUCCESSFUL in 19s 4 actionable tasks: 2 executed, 2 up-to-date C: \\U sers \\l uwei \\D esktop \\t endata \\k pi \\d ocuments \\t endata-jstart>gradlew.bat build BUILD SUCCESSFUL in 3s 7 actionable tasks: 7 up-to-date Info \u7b2c\u4e00\u6b21\u8fd0\u884c\u6784\u5efa\u65f6\uff0cGradle \u5c06\u68c0\u67e5\u60a8\u7684 ~/.gradle \u4e0b\u7684\u7f13\u5b58\u4e2d\u662f\u5426\u5df2\u7ecf\u5177\u6709\u6240\u9700\u7684\u4f9d\u8d56\u9879\u3002\u5982\u679c\u6ca1\u6709\uff0c\u4f9d\u8d56\u5305\u5c06\u88ab\u4e0b\u8f7d\u5e76\u5b58\u50a8\u5728\u8fd9\u91cc\u3002\u4e0b\u6b21\u8fd0\u884c\u6784\u5efa\u65f6\uff0c\u5c06\u4f7f\u7528\u7f13\u5b58\u7684\u7248\u672c\u3002\u751f\u6210\u4efb\u52a1\u7f16\u8bd1\u7c7b\u3001\u8fd0\u884c\u6d4b\u8bd5\u5e76\u751f\u6210\u6d4b\u8bd5\u62a5\u544a\u3002 \u60a8\u53ef\u4ee5\u901a\u8fc7\u6253\u5f00\u4f4d\u4e8e build/reports/tests/test/index.html \u4e2d\u7684 HTML \u6587\u4ef6\u6765\u67e5\u770b\u6d4b\u8bd5\u62a5\u544a\u3002 \u60a8\u53ef\u4ee5\u5728\u540d\u4e3as build/libs \u76ee\u5f55\u4e2d\u627e\u5230\u65b0\u6253\u5305\u7684 JAR \u6587\u4ef6\u3002\u901a\u8fc7\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u9a8c\u8bc1\u5b58\u6863\u662f\u5426\u6709\u6548: $ jar tf build/libs/tendata-jstart-0.0.1-SNAPSHOT.jar META-INF/ META-INF/MANIFEST.MF org/ org/springframework/ org/springframework/boot/ org/springframework/boot/loader/ org/springframework/boot/loader/ClassPathIndexFile.class org/springframework/boot/loader/ExecutableArchiveLauncher.class org/springframework/boot/loader/JarLauncher.class org/springframework/boot/loader/LaunchedURLClassLoader $DefinePackageCallType .class org/springframework/boot/loader/LaunchedURLClassLoader $UseFastConnectionExceptionsEnumeration .class org/springframework/boot/loader/LaunchedURLClassLoader.class org/springframework/boot/loader/Launcher.class org/springframework/boot/loader/MainMethodRunner.class org/springframework/boot/loader/PropertiesLauncher $1 .class ... org/springframework/boot/loader/util/ org/springframework/boot/loader/util/SystemPropertyUtils.class BOOT-INF/ BOOT-INF/classes/ BOOT-INF/classes/cn/ BOOT-INF/classes/cn/tendata/ BOOT-INF/classes/cn/tendata/jstart/ BOOT-INF/classes/cn/tendata/jstart/Application $JpaConfig .class BOOT-INF/classes/cn/tendata/jstart/Application.class BOOT-INF/classes/cn/tendata/jstart/config/ BOOT-INF/classes/cn/tendata/jstart/config/jackson/ BOOT-INF/classes/cn/tendata/jstart/config/jackson/databind/ BOOT-INF/classes/cn/tendata/jstart/config/jackson/databind/PageSerializer.class BOOT-INF/classes/cn/tendata/jstart/config/JacksonConfig $EmptyStringAsNullDeserializer .class BOOT-INF/classes/cn/tendata/jstart/config/JacksonConfig.class ... BOOT-INF/classes/cn/tendata/jstart/service/OwnerService.class BOOT-INF/classes/cn/tendata/jstart/service/OwnerServiceImpl.class BOOT-INF/classes/application.yml BOOT-INF/classes/swagger/ BOOT-INF/classes/swagger/api.yml BOOT-INF/classes/swagger/parameters/ BOOT-INF/classes/swagger/parameters/path/ BOOT-INF/classes/swagger/parameters/path/ownerId.yml BOOT-INF/classes/swagger/parameters/_index.yml BOOT-INF/classes/swagger/resources/ BOOT-INF/classes/swagger/resources/owner.yml BOOT-INF/classes/swagger/resources/owners.yml BOOT-INF/classes/swagger/schemas/ BOOT-INF/classes/swagger/schemas/component.yml BOOT-INF/classes/swagger/schemas/Error.yaml BOOT-INF/lib/ BOOT-INF/lib/h2-1.4.200.jar BOOT-INF/lib/jackson-datatype-jdk8-2.13.2.jar BOOT-INF/lib/spring-data-jpa-2.6.4.jar BOOT-INF/lib/spring-aspects-5.3.19.jar BOOT-INF/lib/spring-webmvc-5.3.19.jar BOOT-INF/lib/spring-web-5.3.19.jar BOOT-INF/lib/tomcat-embed-el-9.0.62.jar BOOT-INF/lib/hibernate-validator-6.2.3.Final.jar BOOT-INF/lib/javax.transaction-api-1.3.jar BOOT-INF/lib/spring-boot-autoconfigure-2.6.7.jar BOOT-INF/lib/spring-boot-2.6.7.jar BOOT-INF/lib/spring-context-5.3.19.jar BOOT-INF/lib/spring-aop-5.3.19.jar BOOT-INF/lib/aspectjweaver-1.9.7.jar BOOT-INF/lib/HikariCP-4.0.3.jar BOOT-INF/lib/spring-orm-5.3.19.jar BOOT-INF/lib/spring-jdbc-5.3.19.jar ... BOOT-INF/classpath.idx BOOT-INF/layers.idx \u60a8\u5e94\u8be5\u770b\u5230\u6240\u9700\u7684\u6e05\u5355\u6587\u4ef6\u30fc manifest.mf \u30fc\u548c\u7f16\u8bd1\u540e\u7684 Library \u7c7b","title":"\u6784\u5efa"},{"location":"project/basic/publish/#_3","text":"\u4e0a\u4f20jar \u5305\u5230Web\u670d\u52a1\u5668\uff0c\u76ee\u5f55\u4e3a ~/server/tendata/jstart ,\u5e76\u4fee\u6539\u540d\u79f0\u4e3a tendata-jstart.jar ,\u5e76\u4f7f\u7528\u547d\u4ee4 sudo chmod +x tendata-jstart.jar \u4e3a\u5176\u6388\u4e88\u6267\u884c\u6743\u9650\u3002 \u8fdb\u5165Web\u670d\u52a1\u5668\u76ee\u5f55 $ cd /usr/lib/systemd/system copy \u4ee5\u4e0b\u5185\u5bb9\u5230 tendata-jstart.service \u6587\u4ef6\u4e2d\uff08\u670d\u52a1\u540d tendata-jstart \uff09 [Unit] Description = tendata java start project After = syslog.target network.target [Service] ExecStart = /home/tend/server/tendata/jstart/tendata-jstart.jar SuccessExitStatus = 143 User = root Group = root [Install] WantedBy = multi-user.target Tip \u5728web\u670d\u52a1\u5668\u53ef\u4ee5\u4f7f\u7528 sudo systemctl start tendata-jstart \u5355\u72ec\u542f\u52a8\u670d\u52a1\u3002","title":"\u6ce8\u518c\u670d\u52a1"},{"location":"project/basic/publish/#jekins","text":"\u9488\u5bf9jekins \u914d\u7f6e\uff0c\u8fd9\u91cc\u53ea\u9488\u5bf9 jenkins \u7684pipline \u811a\u672c\u8fdb\u884c\u914d\u7f6e\u3002\u5176\u4ed6\u57fa\u7840\u914d\u7f6e\u4f8b\u5982\u65b0\u5efa\u9879\u76ee\u7b49\uff0c\u53ef\u5728\u6d4b\u8bd5\u73af\u5883\u6478\u7d22\u3002 pipeline { agent any tools { git \"git\" } stages { stage ( \"Check out\" ){ steps { git branch: \"develop\" , credentialsId: '3af5404b-e7b4-462d-8a74-fcebc456b498' , url: 'http://xxxx.com.cn/tendata/develop/tendata-jstart.git' } } stage ( 'Build' ) { steps { sh \"chmod +x gradlew\" sh \"./gradlew clean build\" } } stage ( 'Deploy' ) { steps { sh \"scp -i /var/jenkins_home/ssh/id_rsa -P 22 -r tendata-jstart/build/libs/tendata-jstart-*.jar tend@192.168.xxx.xxx:/home/tend/server/tendata/jstart/\" sh \"ssh -i /var/jenkins_home/ssh/id_rsa tend@192.168.xxx.xxx 'cd jenkins && ./deploy.sh /home/tend/server/tendata/jstart tendata-jstart tendata-jstart-server ${BUILD_NUMBER}'\" } } } } \u5728\u672c\u811a\u672c\u4e2d\uff0c \u4e3b\u8981\u6709\u4ee5\u4e0b\u51e0\u4e2a\u64cd\u4f5c: \u4f7f\u7528 jenkins \u7684 git \u63d2\u4ef6\uff1b \u4ece Git \u4ed3\u5e93\u68c0\u51fa \u9879\u76ee\u4ee3\u7801\uff1b \u5c06\u68c0\u51fa\u4ee3\u7801\u6784\u5efa\u4e3ajar \u5305\uff1b \u5c06jar \u590d\u5236\u5230\u8fdc\u7a0bweb\u670d\u52a1\u5668\uff1b \u8fd0\u884c\u811a\u672c\u542f\u52a8 tendata-jstart \u670d\u52a1\u3002","title":"\u914d\u7f6e jekins"},{"location":"project/basic/requirements/","text":"\u76ee\u6807 \u00b6 \u4f7f\u7528 gradle\u6784\u5efa\u5de5\u5177 + spring web \u5f00\u53d1 \u521b\u5efa\u4e00\u4e2a\u7b80\u5355\u5730java \u5de5\u7a0b\u9879\u76ee. \u7b80\u5355\u7684\u63a5\u53e3\u8bbe\u8ba1\uff0c\u548c\u4e00\u822c\u7684\u7f16\u7a0b\u539f\u5219\uff1b \u96c6\u6210\u7b80\u5355\u7684\u5355\u5143\u6d4b\u8bd5\uff1b \u96c6\u6210\u73b0\u6709\u7684jekins \u96c6\u6210\u53d1\u5e03\u73af\u5883\uff1b \u5982\u4f55\u51c6\u5907 \u00b6 15 min\u949f\u65f6\u95f4; \u4e00\u4e2a\u4ee3\u7801\u7f16\u8f91\u5668(IDE)\uff0c\u4f8b\u5982 eclipse \uff0c netBeans \uff0c InteliJ IDEA \uff08\u63a8\u8350\uff09 \u7b49\u7b49\uff1b java sdk \uff0c\u4f8b\u5982 openJdk ; \u6784\u5efa\u5de5\u5177\uff0c\u4f8b\u5982 ant , maven , gradle (\u63a8\u8350) ; \u5982\u4f55\u5b8c\u6210 \u00b6 \u50cf\u5927\u591a\u6570\u5165\u95e8\u7ea7\u6307\u5357\u4e00\u6837\uff0c\u4f60\u53ef\u4ee5\u4e00\u6b65\u6b65\u4ece\u5934\u5f00\u59cb\u5b8c\u6210\u4ee5\u4e0b\u6bcf\u4e2a\u6b65\u9aa4\uff0c\u4e5f\u53ef\u4ee5\u8df3\u8fc7\u4ee5\u4e0b\u6b65\u9aa4\u76f4\u63a5\u83b7\u53d6\u6700\u7ec8\u521d\u7ea7\u6559\u7a0b\u6210\u679c\u3002 \u4ece\u5934\u5f00\u59cb\uff0c\u8bf7\u7ee7\u7eed \u5de5\u7a0b\u521d\u59cb\u5316 \u7ae0\u8282 \u8df3\u8fc7\u521d\u7ea7\u6559\u7a0b\uff0c\u83b7\u53d6\u6700\u7ec8\u6210\u679c\uff0c\u6309\u4ee5\u4e0b\u6b65\u9aa4: \u4e0b\u8f7d\u5e76\u89e3\u538b\u672c\u6307\u5357\u7684\u6e90\u4ee3\u7801\u5e93\uff0c\u6216\u4f7f\u7528Git\u514b\u9686\u5b83\uff1a sss cd tendata-start ; \u6267\u884c ./gradlew bootRun \u547d\u4ee4\uff0c\u542f\u52a8\u9879\u76ee.","title":"\u524d\u7f6e\u6761\u4ef6"},{"location":"project/basic/requirements/#_1","text":"\u4f7f\u7528 gradle\u6784\u5efa\u5de5\u5177 + spring web \u5f00\u53d1 \u521b\u5efa\u4e00\u4e2a\u7b80\u5355\u5730java \u5de5\u7a0b\u9879\u76ee. \u7b80\u5355\u7684\u63a5\u53e3\u8bbe\u8ba1\uff0c\u548c\u4e00\u822c\u7684\u7f16\u7a0b\u539f\u5219\uff1b \u96c6\u6210\u7b80\u5355\u7684\u5355\u5143\u6d4b\u8bd5\uff1b \u96c6\u6210\u73b0\u6709\u7684jekins \u96c6\u6210\u53d1\u5e03\u73af\u5883\uff1b","title":"\u76ee\u6807"},{"location":"project/basic/requirements/#_2","text":"15 min\u949f\u65f6\u95f4; \u4e00\u4e2a\u4ee3\u7801\u7f16\u8f91\u5668(IDE)\uff0c\u4f8b\u5982 eclipse \uff0c netBeans \uff0c InteliJ IDEA \uff08\u63a8\u8350\uff09 \u7b49\u7b49\uff1b java sdk \uff0c\u4f8b\u5982 openJdk ; \u6784\u5efa\u5de5\u5177\uff0c\u4f8b\u5982 ant , maven , gradle (\u63a8\u8350) ;","title":"\u5982\u4f55\u51c6\u5907"},{"location":"project/basic/requirements/#_3","text":"\u50cf\u5927\u591a\u6570\u5165\u95e8\u7ea7\u6307\u5357\u4e00\u6837\uff0c\u4f60\u53ef\u4ee5\u4e00\u6b65\u6b65\u4ece\u5934\u5f00\u59cb\u5b8c\u6210\u4ee5\u4e0b\u6bcf\u4e2a\u6b65\u9aa4\uff0c\u4e5f\u53ef\u4ee5\u8df3\u8fc7\u4ee5\u4e0b\u6b65\u9aa4\u76f4\u63a5\u83b7\u53d6\u6700\u7ec8\u521d\u7ea7\u6559\u7a0b\u6210\u679c\u3002 \u4ece\u5934\u5f00\u59cb\uff0c\u8bf7\u7ee7\u7eed \u5de5\u7a0b\u521d\u59cb\u5316 \u7ae0\u8282 \u8df3\u8fc7\u521d\u7ea7\u6559\u7a0b\uff0c\u83b7\u53d6\u6700\u7ec8\u6210\u679c\uff0c\u6309\u4ee5\u4e0b\u6b65\u9aa4: \u4e0b\u8f7d\u5e76\u89e3\u538b\u672c\u6307\u5357\u7684\u6e90\u4ee3\u7801\u5e93\uff0c\u6216\u4f7f\u7528Git\u514b\u9686\u5b83\uff1a sss cd tendata-start ; \u6267\u884c ./gradlew bootRun \u547d\u4ee4\uff0c\u542f\u52a8\u9879\u76ee.","title":"\u5982\u4f55\u5b8c\u6210"},{"location":"project/basic/testing/","text":"\u4e3a\u4ec0\u4e48 \u00b6 \u4e3a\u4ec0\u4e48\u5982\u6b64\u91cd\u8981\uff1f \u6bcf\u4e2a\u4ece\u4e8b\u957f\u671f\u9879\u76ee\u7684\u5f00\u53d1\u4eba\u5458\u5728\u4fee\u590d\u574f\u5473\u9053\u7684\u4ee3\u7801\u65f6\u90fd\u4f1a\u9047\u5230\u4e00\u4e9b\u5e38\u89c1\u95ee\u9898\uff0c\u5e76\u626a\u5fc3\u81ea\u95ee\uff1a \"\u6211\u5728\u4ee3\u7801\u5e93\u4e2d\u5982\u4f55\u4ee5\u53ca\u5728\u54ea\u91cc\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff1f\" \"\u8fd9\u4e9b\u4ee3\u7801\u884c\u5728\u505a\u4ec0\u4e48\uff1f\" \"\u8fd9\u4e2a\u4ee3\u7801\u4ecd\u7136\u9700\u8981\u6216\u4f7f\u7528\u5417\uff1f\" \u66f4\u91cd\u8981\u7684\u662f\uff1a \"\u6211\u600e\u6837\u624d\u80fd\u786e\u4fdd\u5982\u679c\u6211\u6539\u53d8\u8fd9\u4e2a\uff0c\u4e0d\u4f1a\u6709\u5176\u4ed6\u95ee\u9898\uff1f\" \u4ee5\u53ca\u5176\u4ed6\u7c7b\u4f3c\u7684\u4ee4\u4eba\u6bdb\u9aa8\u609a\u7136\u7684\u95ee\u9898\uff0c\u6709\u65f6\u5f00\u53d1\u4eba\u5458\u6700\u7ec8\u53ea\u662f\u6d6a\u8d39\u65f6\u95f4\u8bd5\u56fe\u7406\u89e3\u4ee5\u4e0b\u4ee3\u7801\uff1a\u6ca1\u6709\u6587\u6863\uff0c\u7531\u4e8e\u76ee\u7684\u4e0d\u660e\u786e\u800c\u6ca1\u6709\u610f\u4e49\uff0c\u5177\u6709\u5305\u542b\u4e00\u5343\u884c\u4ee3\u7801\u7684\u529f\u80fd\uff0c\u5b8c\u5168\u4e0d\u53ef\u8bfb\u548c\u96be\u4ee5\u7406\u89e3\u7b49\u7b49\u3002\u8fd9\u4e9b\u662f\u6765\u81ea\u5077\u5de5\u51cf\u6599\u7684\u597d\u5904\uff0c\u6216\u8005\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6765\u81ea\"\u524a\u51cf\"\u6210\u672c\u3002 \u7b80\u800c\u8a00\u4e4b\uff0c\u81ea\u52a8\u4ee3\u7801\u6d4b\u8bd5\u7684\u4ee3\u7801\u5c06\u5728\u5b9e\u9645\u4e2d\u6709\u6548\u5730\u8f6c\u5316\u4e3a\u5404\u79cd\u597d\u5904\uff1a \u66f4\u591a\u7684\u53ef\u91cd\u7528\u6027\uff1b \u91cd\u6784\u4f7f\u4ee3\u7801\u53d8\u5f97\u7b80\u5355/\u5e72\u51c0\uff1b \u654f\u6377\u4ee3\u7801\uff1b \u5065\u58ee\u7684\u4ee3\u7801\uff1b \u53ef\u8bfb\u4ee3\u7801\uff1b \u7b80\u5316\u8c03\u8bd5\u3002 \u539f\u5219 \u00b6 FIRST \u539f\u5219 F\u2014\u2014Fast \uff1a \u5feb\u901f \u5728\u8c03\u8bd5bug\u65f6\uff0c\u9700\u8981\u9891\u7e41\u53bb\u8fd0\u884c\u5355\u5143\u6d4b\u8bd5\u9a8c\u8bc1\u7ed3\u679c\u662f\u5426\u6b63\u786e\u3002\u5982\u679c\u5355\u5143\u6d4b\u8bd5\u8db3\u591f\u5feb\u901f\uff0c\u5c31\u53ef\u4ee5\u7701\u53bb\u4e0d\u5fc5\u8981\u6d6a\u8d39\u7684\u65f6\u95f4\uff0c\u63d0\u9ad8\u5de5\u4f5c\u6548\u7387\u3002 I\u2014\u2014Isolated \uff1a \u9694\u79bb \u597d\u7684\u5355\u5143\u6d4b\u8bd5\u662f\u6bcf\u4e2a\u6d4b\u8bd5\u53ea\u5173\u6ce8\u903b\u8f91\u7684\u4e00\u4e2a\u65b9\u9762\uff0c\u8fd9\u6837\u6709\u5229\u4e8e\u6392\u9519\u3002 \u6bcf\u4e2a\u6d4b\u8bd5\u4e4b\u95f4\u4e0d\u5e94\u8be5\u4ea7\u751f\u4f9d\u8d56\uff0c\u4e0d\u4f1a\u56e0\u4e3a\u6d4b\u8bd5\u987a\u5e8f\u4e0d\u540c\u800c\u5bfc\u81f4\u8fd0\u884c\u7684\u7ed3\u679c\u4e0d\u540c\u3002 \u6d4b\u8bd5\u65f6\u4e0d\u8981\u4f9d\u8d56\u548c\u4fee\u6539\u5916\u90e8\u6570\u636e\u7b49\u5176\u4ed6\u5171\u4eab\u8d44\u6e90\uff0c\u505a\u5230\u6d4b\u8bd5\u524d\u540e\u5171\u4eab\u8d44\u6e90\u6570\u636e\u4e00\u81f4\u3002 R\u2014\u2014Repeatable \uff1a \u53ef\u91cd\u590d \u5355\u5143\u6d4b\u8bd5\u9700\u8981\u4fdd\u6301\u8fd0\u884c\u7a33\u5b9a\uff0c\u6bcf\u6b21\u8fd0\u884c\u90fd\u9700\u8981\u5f97\u5230\u540c\u6837\u7684\u7ed3\u679c\uff0c\u5982\u679c\u95f4\u6b47\u6027\u7684\u5931\u8d25\uff0c\u4f1a\u5bfc\u81f4\u6211\u4eec\u4e0d\u65ad\u7684\u53bb\u67e5\u770b\u8fd9\u4e2a\u6d4b\u8bd5\uff0c\u4e0d\u53ef\u9760\u7684\u6d4b\u8bd5\u4e5f\u5c31\u5931\u53bb\u4e86\u610f\u4e49\u3002 S\u2014\u2014Self-verifying \uff1a \u81ea\u6211\u9a8c\u8bc1 \u5355\u5143\u6d4b\u8bd5\u9700\u8981\u91c7\u7528Asset\u51fd\u6570\u7b49\u8fdb\u884c\u81ea\u9a8c\u8bc1\uff0c\u5373\u5f53\u5355\u5143\u6d4b\u8bd5\u6267\u884c\u5b8c\u6bd5\u4e4b\u540e\u5c31\u53ef\u5f97\u77e5\u6d4b\u8bd5\u7ed3\u679c\uff0c\u5168\u7a0b\u65e0\u9700\u4eba\u5de5\u63a5\u5165\u3002 T\u2014\u2014Timely \uff1a \u53ca\u65f6 \u7b49\u4ee3\u7801\u7a33\u5b9a\u8fd0\u884c\u518d\u6765\u8865\u9f50\u5355\u5143\u6d4b\u8bd5\u53ef\u80fd\u662f\u4f4e\u6548\u7684\uff0c\u6700\u6709\u6548\u7684\u65b9\u5f0f\u662f\u5728\u5199\u597d\u529f\u80fd\u51fd\u6570\u63a5\u53e3\u540e\uff08\u5b9e\u73b0\u51fd\u6570\u529f\u80fd\u524d\uff09\u8fdb\u884c\u5355\u5143\u6d4b\u8bd5\u3002 \u5b9e\u9645\u64cd\u4f5c \u00b6 \u76ee\u6807: \u9488\u5bf9 \"\u5f00\u53d1\" \u7ae0\u8282\u7684 \"\u5ba0\u7269\u4e3b\u4eba\" \u6a21\u5757\u8fdb\u884c\u5355\u5143\u6d4b\u8bd5\u3002 \u6dfb\u52a0\u4f9d\u8d56 \u00b6 \u7531\u4e8e\u6211\u4eec\u4f7f\u7528\u4e86gradle \u4f5c\u4e3a\u6784\u5efa\u5de5\u5177\uff0c\u56e0\u6b64\u9009\u7528\u4e00\u6b3egradle\u6d4b\u8bd5\u63d2\u4ef6\u5de5\u5177\u8c8c\u4f3c\u662f\u4e00\u4e2a\u806a\u660e\u7684\u9009\u62e9\u3002 \u5728\u9879\u76ee build.gradle \u4e2d\u6dfb\u52a0\u5982\u4e0b\u5185\u5bb9,\u6700\u7ec8\u7ed3\u679c\u5982\u4e0b: plugins { id 'org.springframework.boot' version '2.6.7' id 'io.spring.dependency-management' version '1.0.11.RELEASE' id \"org.unbroken-dome.test-sets\" version \"4.0.0\" id 'java' } apply plugin: 'idea' apply plugin: 'eclipse' apply plugin: 'java' apply plugin: 'io.spring.dependency-management' apply plugin: 'org.unbroken-dome.test-sets' group = 'cn.tendata.jstart' version = '0.0.1-SNAPSHOT' sourceCompatibility = 11 targetCompatibility = 11 configurations { integrationTestImplementation . extendsFrom testImplementation integrationTestRuntimeOnly . extendsFrom testRuntimeOnly } repositories { mavenLocal () maven { url 'https://maven.aliyun.com/repository/public/' } mavenCentral () } dependencies { implementation 'org.springframework.boot:spring-boot-starter-data-jpa' implementation 'com.h2database:h2' implementation 'org.springframework.boot:spring-boot-starter-web' implementation 'org.springframework.boot:spring-boot-starter-validation' implementation \"com.fasterxml.jackson.datatype:jackson-datatype-hibernate5\" implementation \"com.fasterxml.jackson.datatype:jackson-datatype-jsr310\" testImplementation 'org.junit.jupiter:junit-jupiter' testImplementation 'org.mockito:mockito-junit-jupiter' testImplementation \"org.springframework:spring-test\" testImplementation \"com.jayway.jsonpath:json-path\" testImplementation \"com.jayway.jsonpath:json-path-assert\" } ext { snippetsDir = file ( 'build/generated-snippets' ) } test { outputs . dir snippetsDir } tasks . withType ( JavaCompile ) { options . encoding = \"UTF-8\" } testSets { integrationTest { dirName = 'integration-test' } } project . integrationTest { outputs . upToDateWhen { false } } check . dependsOn integrationTest integrationTest . mustRunAfter test tasks . withType ( Test ) { useJUnitPlatform () reports . html . destination = file ( \"${reporting.baseDir}/${name}\" ) } \u4ee5\u4e0a\u6784\u5efa\u811a\u672c\u4e3b\u8981\u505a\u4e86\u5982\u4e0b\u5de5\u4f5c: \u4f7f\u7528 org.unbroken-dome.test-sets \u5355\u5143\u6d4b\u8bd5\u63d2\u4ef6\uff1b \u96c6\u6210\u6d4b\u8bd5\u96c6\u5305\u540d\u91cd\u547d\u540d\u4e3a integeration-test \uff1b \u9879\u76ee\u6784\u5efa\u7684check \u4efb\u52a1\u987a\u5e8f\u5417\u4e3a test -> integrationTest ; \u6d4b\u8bd5\u6846\u67b6\u4f7f\u7528 Junit5\uff1b \u6d4b\u8bd5\u4f7f\u7528 spring-test \u73af\u5883\uff1b \u6dfb\u52a0 \u6d4b\u8bd5\u57fa\u7840\u7ec4\u4ef6\uff1b \u672c\u5355\u5143\u6d4b\u8bd5\u4e3b\u8981\u4f9d\u8d56 spring context\u73af\u5883\uff0c spring web test \u73af\u5883\uff0cmockito \u6d4b\u8bd5\u6846\u67b6\u7b49\uff0c\u56e0\u6b64\u9700\u8981\u6784\u5efa\u4ed6\u4eec\u57fa\u7840\u73af\u5883\u3002 \u65b0\u5efa src/test/java \uff0c src/test/resources \u76ee\u5f55\u5206\u522b\u7528\u4e8e\u5b58\u653e\u5355\u5143\u6d4b\u8bd5\u6e90\u4ee3\u7801\u548c\u9759\u6001\u8d44\u6e90\uff1b \u5728 src/test/java \u76ee\u5f55\u521b\u5efa cn/tendata/jstart/controller \u76ee\u5f55\uff0c\u6b64\u76ee\u5f55\u548c src/main/java \u4e2d \u5b58\u653e OwnerController \u76f8\u540c\u3002\u5e76\u5728\u6b64\u76ee\u5f55\u65b0\u5efa OwnerControllerTest.java \u6587\u4ef6\uff1b \u5728 src/test/java/cn/tendata/jstart/controller \u65b0\u5efa config , util \u4e24\u4e2a\u76ee\u5f55\uff0c\u7528\u4e8e\u5b58\u653e\u6d4b\u8bd5\u73af\u5883\u7684 spring context \u914d\u7f6e\u548c\u6d4b\u8bd5\u5de5\u5177\u7c7b\uff1b \u5728 \u4ee5\u4e0a config \u76ee\u5f55 \u65b0\u5efa WebmvcConfig.java , TestConfig.java ; WebmvcConfig.java: \u6d4b\u8bd5\u73af\u5883 web mvc \u4e2a\u6027\u5316\u914d\u7f6e: package cn.tendata.jstart.controller.config ; import cn.tendata.jstart.config.jackson.databind.PageSerializer ; import com.fasterxml.jackson.core.Version ; import com.fasterxml.jackson.databind.Module ; import com.fasterxml.jackson.databind.ObjectMapper ; import com.fasterxml.jackson.databind.SerializationFeature ; import com.fasterxml.jackson.databind.module.SimpleModule ; import com.fasterxml.jackson.databind.util.StdDateFormat ; import com.fasterxml.jackson.datatype.hibernate5.Hibernate5Module ; import com.fasterxml.jackson.datatype.jsr310.JavaTimeModule ; import org.springframework.context.annotation.Bean ; import org.springframework.context.annotation.ComponentScan ; import org.springframework.context.annotation.Configuration ; import org.springframework.context.support.PropertySourcesPlaceholderConfigurer ; import org.springframework.data.domain.PageImpl ; import org.springframework.data.web.config.EnableSpringDataWebSupport ; import org.springframework.format.FormatterRegistry ; import org.springframework.format.datetime.standard.DateTimeFormatterRegistrar ; import org.springframework.http.converter.HttpMessageConverter ; import org.springframework.http.converter.json.Jackson2ObjectMapperBuilder ; import org.springframework.http.converter.json.MappingJackson2HttpMessageConverter ; import org.springframework.web.servlet.config.annotation.EnableWebMvc ; import org.springframework.web.servlet.config.annotation.WebMvcConfigurer ; import java.nio.charset.StandardCharsets ; import java.util.List ; import static com.fasterxml.jackson.databind.DeserializationFeature.READ_UNKNOWN_ENUM_VALUES_AS_NULL ; @Configuration @EnableWebMvc @EnableSpringDataWebSupport @ComponentScan ( basePackages = \"cn.tendata.jstart.controller\" ) public class WebmvcConfig implements WebMvcConfigurer { @Bean public static PropertySourcesPlaceholderConfigurer placeHolderConfigurer () { return new PropertySourcesPlaceholderConfigurer (); } @Bean public Jackson2ObjectMapperBuilder configureObjectMapper () { return new Jackson2ObjectMapperBuilder () . modulesToInstall ( jacksonHibernate5Module (), jacksonPageWithJsonViewModule ()); } @Override public void addFormatters ( FormatterRegistry registry ) { DateTimeFormatterRegistrar registrar = new DateTimeFormatterRegistrar (); registrar . setUseIsoFormat ( true ); registrar . registerFormatters ( registry ); } @Override public void configureMessageConverters ( List < HttpMessageConverter <?>> converters ) { ObjectMapper objectMapper = Jackson2ObjectMapperBuilder . json (). modules ( new JavaTimeModule (), // java date time \u5e8f\u5217\u5316\u652f\u6301 jacksonHibernate5Module (), //hibernate \u6570\u636e\u5e8f\u5217\u5316\u652f\u6301 jacksonPageWithJsonViewModule ()) // page with json view \u89e3\u6790\u652f\u6301 . deserializers () . featuresToEnable ( READ_UNKNOWN_ENUM_VALUES_AS_NULL ) // \u4e3a\u7a7a\u6216\u8005\u4e0d\u8bc6\u522b\u7684enum \u89c6\u4e3anull . serializers (). featuresToDisable ( SerializationFeature . WRITE_DATES_AS_TIMESTAMPS ) . dateFormat ( new StdDateFormat ()) //\u65f6\u95f4\u53cd\u5e8f\u5217\u5316 iso \uff0clocal\u4ee5\u672c\u5730\u670d\u52a1\u5668\u4e3a\u4e3b . build (); MappingJackson2HttpMessageConverter converter = new MappingJackson2HttpMessageConverter ( objectMapper ); converter . setDefaultCharset ( StandardCharsets . UTF_8 ); converters . add ( converter ); } @Bean public Module jacksonHibernate5Module () { Hibernate5Module module = new Hibernate5Module (); return module ; } @Bean public Module jacksonPageWithJsonViewModule () { SimpleModule module = new SimpleModule ( \"jackson-page-with-jsonview\" , Version . unknownVersion ()); module . addSerializer ( PageImpl . class , new PageSerializer ()); return module ; } } TestConfig.java\uff1a \u7528\u4e8e\u5c06\u4e00\u4e9b\u4e0d\u5c5e\u4e8e\u5355\u5143\u6d4b\u8bd5\u7ec4\u4ef6\u7684\u5176\u5b83\u7ec4\u4ef6 mock \u6389: package cn.tendata.jstart.controller.config ; import cn.tendata.jstart.service.OwnerService ; import org.mockito.Mockito ; import org.springframework.context.annotation.Bean ; import org.springframework.context.annotation.Configuration ; import org.springframework.context.annotation.Import ; @Configuration @Import ( WebmvcConfig . class ) public class TestConfig { @Bean public OwnerService ownerService () { return Mockito . mock ( OwnerService . class ); } } \u5176\u4ed6\u7ec4\u4ef6\uff0c PageSerializer.java \uff0c\u7528\u4e8e jackson PageImpl \u5206\u9875\u5bf9\u8c61\u5e8f\u5217\u5316\u652f\u6301\uff1b PageSerializer.java \u6587\u4ef6\u5185\u5bb9\u5982\u4e0b: package cn.tendata.jstart.config.jackson.databind ; import com.fasterxml.jackson.core.JsonGenerator ; import com.fasterxml.jackson.databind.SerializerProvider ; import com.fasterxml.jackson.databind.ser.std.StdSerializer ; import org.springframework.data.domain.Page ; import java.io.IOException ; @SuppressWarnings ( \"rawtypes\" ) public class PageSerializer extends StdSerializer < Page > { private static final long serialVersionUID = - 9196525484747505477L ; public PageSerializer () { super ( Page . class ); } @Override public void serialize ( Page value , JsonGenerator gen , SerializerProvider provider ) throws IOException { gen . writeStartObject (); gen . writeNumberField ( \"number\" , value . getNumber ()); gen . writeNumberField ( \"numberOfElements\" , value . getNumberOfElements ()); gen . writeNumberField ( \"totalElements\" , value . getTotalElements ()); gen . writeNumberField ( \"totalPages\" , value . getTotalPages ()); gen . writeNumberField ( \"size\" , value . getSize ()); gen . writeFieldName ( \"content\" ); provider . defaultSerializeValue ( value . getContent (), gen ); gen . writeEndObject (); } } \u589e\u52a0 spring web \u6d4b\u8bd5\u7ec4\u4ef6 - mockMvc \u652f\u6301\u7ec4\u4ef6 MockMvcTestSupport.java \u6587\u4ef6: package cn.tendata.jstart.controller ; import cn.tendata.jstart.controller.config.TestConfig ; import org.junit.jupiter.api.BeforeEach ; import org.junit.jupiter.api.extension.ExtendWith ; import org.mockito.junit.jupiter.MockitoExtension ; import org.springframework.test.context.ActiveProfiles ; import org.springframework.test.context.ContextConfiguration ; import org.springframework.test.context.junit.jupiter.SpringExtension ; import org.springframework.test.context.web.WebAppConfiguration ; import org.springframework.test.web.servlet.MockMvc ; import org.springframework.test.web.servlet.setup.MockMvcBuilders ; import org.springframework.web.context.WebApplicationContext ; import javax.annotation.Resource ; @ExtendWith ({ SpringExtension . class , MockitoExtension . class }) @ContextConfiguration ( classes = { TestConfig . class }) @WebAppConfiguration @ActiveProfiles ( \"test\" ) public abstract class MockMvcTestSupport { @Resource protected WebApplicationContext context ; protected MockMvc mockMvc ; @BeforeEach public void setUp () { this . mockMvc = MockMvcBuilders . webAppContextSetup ( context ). build (); } } \u6700\u540e\u7684\u6587\u4ef6\u76ee\u5f55\u7ec4\u7ec7\u7ed3\u679c\u5982\u4e0b: test \u251c\u2500\u2500 java \u2502 \u2514\u2500\u2500 cn \u2502 \u2514\u2500\u2500 tendata \u2502 \u2514\u2500\u2500 jstart \u2502 \u2514\u2500\u2500 controller \u2502 \u251c\u2500\u2500 MockMvcTestSupport.java \u2502 \u251c\u2500\u2500 OwnerControllerTest.java \u2502 \u251c\u2500\u2500 config \u2502 \u2502 \u251c\u2500\u2500 TestConfig.java \u2502 \u2502 \u2514\u2500\u2500 WebmvcConfig.java \u2502 \u2514\u2500\u2500 util \u2502 \u251c\u2500\u2500 OwnerDataUtils.java \u2502 \u2514\u2500\u2500 TestUtils.java \u2514\u2500\u2500 resources \u7f16\u5199\u6d4b\u8bd5 \u00b6 \u6d4b\u8bd5\u5206\u9875 \u00b6 \u5728 OwnerControllerTest.java \u4e2d\u6dfb\u52a0\u5982\u4e0b\u4ee3\u7801: package cn.tendata.jstart.controller ; import cn.tendata.jstart.controller.util.OwnerDataUtils ; import cn.tendata.jstart.controller.util.TestUtils ; import cn.tendata.jstart.data.domain.Owner ; import cn.tendata.jstart.service.OwnerService ; import org.hamcrest.Matchers ; import org.hamcrest.core.Is ; import org.junit.jupiter.api.Test ; import org.mockito.ArgumentMatchers ; import org.mockito.Mockito ; import org.springframework.beans.factory.annotation.Autowired ; import org.springframework.data.domain.PageImpl ; import org.springframework.data.domain.Pageable ; import org.springframework.http.MediaType ; import org.springframework.test.web.servlet.request.MockMvcRequestBuilders ; import org.springframework.test.web.servlet.result.MockMvcResultHandlers ; import org.springframework.test.web.servlet.result.MockMvcResultMatchers ; import java.util.Arrays ; import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.jsonPath ; class OwnerControllerTest extends MockMvcTestSupport { @Autowired private OwnerService service ; @Test void pageOwner_findByName_shouldReturnMatchedResult () throws Exception { Mockito . when ( this . service . getAll ( ArgumentMatchers . any ( Owner . class ), ArgumentMatchers . any ( Pageable . class ))) . thenReturn ( new PageImpl <> ( Arrays . asList ( OwnerDataUtils . createOwner ( \"\u5f20\" , \"\u5927\u5b9d\" , 1 ), OwnerDataUtils . createOwner ( \"\u5f20\u4e8c\" , \"\u5b9d\" , 2 ) ))); this . mockMvc . perform ( MockMvcRequestBuilders . get ( \"/owners\" ) . param ( \"firstName\" , \"\u5f20\" ) . param ( \"lastName\" , \"\u5b9d\" )) . andExpect ( MockMvcResultMatchers . status (). isOk ()) . andDo ( MockMvcResultHandlers . print ()) . andExpect ( jsonPath ( \"$.numberOfElements\" , Is . is ( 2 ))) . andExpect ( jsonPath ( \"$.content\" , Matchers . hasSize ( 2 ))) . andExpect ( jsonPath ( \"$.content[0].firstName\" , Is . is ( \"\u5f20\" ))) . andExpect ( jsonPath ( \"$.content[0].lastName\" , Is . is ( \"\u5927\u5b9d\" ))) . andExpect ( jsonPath ( \"$.content[1].firstName\" , Is . is ( \"\u5f20\u4e8c\" ))) . andExpect ( jsonPath ( \"$.content[1].lastName\" , Is . is ( \"\u5b9d\" ))) . andReturn (); } ... } \u5728\u4ee5\u4e0a\u6d4b\u8bd5\u4ee3\u7801\u793a\u4f8b\u4e2d\uff0c \u4e3b\u8981\u6a21\u62df \u5ba2\u6237\u7aef \u5411\u6211\u4eec \u524d\u9762\u7ae0\u8282\u7f16\u5199\u7684 OnwerController \u4e2d\u7684 GET /owners - \"\u5ba0\u7269\u4e3b\u4eba\u5206\u9875\" \u63a5\u53e3 \u53d1\u9001\u8bf7\u6c42\uff0c\u67e5\u8be2\u7b26\u5408\u6761\u4ef6\u7684\u5ba0\u7269\u4e3b\u4eba\u5217\u8868\u3002 \u5728\u4ee5\u4e0a\u5355\u5143 \u6d4b\u8bd5\u4e2d\uff0c\u6211\u4eec\u5fc5\u987b\u6ee1\u8db3\u51e0\u4e2a\u7f16\u5199\u539f\u5219: \u4fdd\u8bc1\u6d4b\u8bd5\u5355\u5143\u7684\u9694\u79bb\u6027\u3002\u5982\u679c\u4e3a controller \u505a\u5355\u5143\u6d4b\u8bd5\uff0c\u90a3\u4e48controller \u4e2d\u7684\u4f9d\u8d56\uff0c\u6b64\u5904 \u4e3a OwnerService \u5bf9\u8c61\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u5173\u5fc3\u5176\u5177\u4f53\u5b9e\u73b0\u3002\u6211\u4eec\u53ea\u9700\u8981\u5c06\u4ed6 mock \u5373\u53ef\u3002mock \u7684\u4e00\u822c\u8bed\u6cd5\u5c31\u662f\uff1a \"\u5f53 mock \u5bf9\u8c61\u6ee1\u8db3 \u4ec0\u4e48\u6761\u4ef6\u65f6\uff0c\u8fd4\u56de\u4ec0\u4e48\u7ed3\u679c\".\u6b64\u5904\u4f7f\u7528 mockito \u6846\u67b6 \u7684 when ... thenReturn ... \u8bed\u6cd5\u3002 \u589e\u5f3a\u53ef\u8bfb\u6027\u3002\u53ef\u8bfb\u6027\u4e00\u822c\u5728\u4ee3\u7801\u7f16\u5199\u4e2d\u4f7f\u7528\u5408\u9002\u7684\u547d\u540d\u548c\u9002\u5f53\u7684\u8bed\u6cd5\u987a\u5e8f\u6765\u5b9e\u73b0\u3002\u6bd4\u5982\uff0c\u6b64\u5904\u4f7f\u7528 pageOwner_findByName_shouldReturnMatchedResult \u6765\u547d\u540d\u6d4b\u8bd5\u65b9\u6cd5\u3002 \u524d\u7f00 pageOwner \u4ee3\u8868\u6211\u4eec\u6d4b\u8bd5\u7684\u51fd\u6570; findByName \u8868\u793a\u6211\u4eec\u4f7f\u7528\u4e86 \u540d\u79f0 \u6765\u505a\u67e5\u8be2\u6761\u4ef6; shouldReturn \u8868\u793a\u4f1a\u8fd4\u56de\u4e00\u4e2a\u4ec0\u4e48\u7ed3\u679c\uff0c\u5404\u4e2a\u5355\u5143\u4f7f\u7528 _ \u6765\u5206\u5272\uff1b \u5c3d\u91cf\u4f7f \u5355\u5143\u6d4b\u8bd5\u4ee3\u7801\u7cbe\u70bc\u7b80\u6d01\u3002 \u5355\u5143\u6d4b\u8bd5\u4e00\u822c\u5305\u542b\u4e09\u4e2a\u90e8\u5206\uff0c GIVEN , WHEN , THEN . \u5404\u90e8\u5206\u53ef\u4f7f\u7528\u4e00\u4e2a\u7a7a\u767d\u884c\u6765\u5206\u5272\uff1b \u6d4b\u8bd5\u6570\u636e\u5916\u7f6e\u3002\u5c06\u6d4b\u8bd5\u6570\u636e\u5916\u7f6e\u662f\u4e00\u4e2a\u7cbe\u7b80\u6d4b\u8bd5\u8bed\u6cd5\u7684\u597d\u529e\u6cd5\u3002\u5c06\u4e00\u4e9b\u6570\u636e\u6784\u5efa\u4ece\u6d4b\u8bd5\u4ee3\u7801\u5265\u79bb\u51fa\u53bb\uff0c\u6b64\u5904\u5728 util \u76ee\u5f55\u63d0\u4f9b\u5404\u79cd\u6570\u636e\u751f\u6210\u7684\u9759\u6001\u65b9\u6cd5\u3002\u5728\u5355\u5143\u6d4b\u8bd5\u4e2d\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5173\u5fc3 \u8f93\u5165\u7684\u662f\u4ec0\u4e48\u503c\uff0c\u800c\u65e0\u9700\u8981\u5173\u5fc3\u5982\u4f55\u6784\u5efa\u6570\u636e\u3002 \u6d4b\u8bd5\u66f4\u65b0 \u00b6 \u5728 OwnerControllerTest.java \u4e2d\u6dfb\u52a0\u5982\u4e0b\u4ee3\u7801: ... class OwnerControllerTest extends MockMvcTestSupport { ... @Test void createOwner_shouldReturnSaveOne () throws Exception { Mockito . when ( this . service . save ( ArgumentMatchers . any ( Owner . class ))) . thenReturn ( OwnerDataUtils . createOwner ( \"\u5f20\u4e8c\" , \"\u5b9d\" , 1 ) ); Owner createRequest = OwnerDataUtils . createOwner ( \"\u5f20\u4e8c\" , \"\u5b9d\" , null ); this . mockMvc . perform ( MockMvcRequestBuilders . post ( \"/owners\" ) . contentType ( MediaType . APPLICATION_JSON ) . content ( TestUtils . convertObjectToJsonBytes ( createRequest ))) . andDo ( MockMvcResultHandlers . print ()) . andExpect ( MockMvcResultMatchers . status (). isCreated ()) . andExpect ( jsonPath ( \"$.firstName\" , Is . is ( \"\u5f20\u4e8c\" ))) . andExpect ( jsonPath ( \"$.lastName\" , Is . is ( \"\u5b9d\" ))) . andExpect ( jsonPath ( \"$.id\" , Is . is ( 1 ))) . andReturn (); } ... } \u6309\u7167 \u6d4b\u8bd5\u5206\u9875 \u7684\u89c4\u5219\u3002 \u65b9\u6cd5\u547d\u540d - \u5f53\u8c03\u7528 createOwner \u63a5\u53e3\u65f6\uff0c\u5373 \u521b\u5efa\u4e00\u4e2a\u65b0\u7684 \"\u5ba0\u7269\u4e3b\u4eba\"\u8bb0\u5f55 \u8bf7\u6c42\u65f6\uff0c\u5982\u679c\u8bf7\u6c42\u6210\u529f\u5c06\u8fd4\u56de \"\u4fdd\u5b58\u6210\u529f\u7684\u5ba0\u7269\u4e3b\u4eba\" \u5bf9\u8c61\uff1b \u4ee3\u7801\u7ec4\u4ef6 - ( WHEN ) - \u5f53\u4f9d\u8d56 OwnerService mock \u5bf9\u8c61\u8c03\u7528 save \u65b9\u6cd5\u65f6\uff0c\u5e76\u4e14\u8bf7\u6c42\u53c2\u6570\u662f\u4efb\u52a1 Owner \u5bf9\u8c61\u65f6\uff0c\u8fd4\u56de\u4e00\u4e2a \u4fdd\u5b58\u597d\u7684 Owner \u5bf9\u8c61; ( GIVEN ) - \u4f7f\u7528 firstName: \u5f20\u4e8c \uff0c lastName: \u5b9d \u6784\u5efa\u521b\u5efa \"\u5ba0\u7269\u4e3b\u4eba\" \u8bf7\u6c42\u5bf9\u8c61\uff1b ( THEN ) - \u8bf7\u6c42\u53d1\u9001 POST /owners \u540e\u662f\u5426\u8fd4\u56de 201 - Created http status. \u8fd4\u56de\u7684\u5bf9\u8c61 id \u662f\u5426 \u4e3a 1 \uff0c firstName \u5c5e\u6027\u662f\u5426\u4e3a \u5f20\u4e8c \uff0c lastName \u662f\u5426\u7b49\u4e8e \u5b9d \u3002 \u81ea\u52a8\u5316\u6d4b\u8bd5 \u00b6 gradle \u5185\u7f6e\u4e00\u4e2a \u81ea\u52a8\u5316\u6d4b\u8bd5\u4efb\u52a1- test , \u5b83\u7f16\u8bd1\u5e76\u8fd0\u884c \u6240\u6709 test \u6e90\u7801\u5305\u4e2d\u7684\u5185\u5bb9\uff0c\u5e76\u5c06\u6d4b\u8bd5\u7ed3\u679c\u4ee5web\u5f62\u5f0f\u5c55\u793a\u7ed9\u6d4b\u8bd5\u4eba\u5458\uff1b \u8fd0\u884c gradlew test \u547d\u4ee4 $ gradlew test Starting a Gradle Daemon, 1 incompatible Daemon could not be reused, use --status for details > Task :test 16 :10:59.572 [ SpringContextShutdownHook ] DEBUG org.springframework.web.context.support.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@958c9bcb, started on Wed May 18 16 : 10 :57 CST 2022 BUILD SUCCESSFUL in 19s","title":"\u6d4b\u8bd5"},{"location":"project/basic/testing/#_1","text":"\u4e3a\u4ec0\u4e48\u5982\u6b64\u91cd\u8981\uff1f \u6bcf\u4e2a\u4ece\u4e8b\u957f\u671f\u9879\u76ee\u7684\u5f00\u53d1\u4eba\u5458\u5728\u4fee\u590d\u574f\u5473\u9053\u7684\u4ee3\u7801\u65f6\u90fd\u4f1a\u9047\u5230\u4e00\u4e9b\u5e38\u89c1\u95ee\u9898\uff0c\u5e76\u626a\u5fc3\u81ea\u95ee\uff1a \"\u6211\u5728\u4ee3\u7801\u5e93\u4e2d\u5982\u4f55\u4ee5\u53ca\u5728\u54ea\u91cc\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff1f\" \"\u8fd9\u4e9b\u4ee3\u7801\u884c\u5728\u505a\u4ec0\u4e48\uff1f\" \"\u8fd9\u4e2a\u4ee3\u7801\u4ecd\u7136\u9700\u8981\u6216\u4f7f\u7528\u5417\uff1f\" \u66f4\u91cd\u8981\u7684\u662f\uff1a \"\u6211\u600e\u6837\u624d\u80fd\u786e\u4fdd\u5982\u679c\u6211\u6539\u53d8\u8fd9\u4e2a\uff0c\u4e0d\u4f1a\u6709\u5176\u4ed6\u95ee\u9898\uff1f\" \u4ee5\u53ca\u5176\u4ed6\u7c7b\u4f3c\u7684\u4ee4\u4eba\u6bdb\u9aa8\u609a\u7136\u7684\u95ee\u9898\uff0c\u6709\u65f6\u5f00\u53d1\u4eba\u5458\u6700\u7ec8\u53ea\u662f\u6d6a\u8d39\u65f6\u95f4\u8bd5\u56fe\u7406\u89e3\u4ee5\u4e0b\u4ee3\u7801\uff1a\u6ca1\u6709\u6587\u6863\uff0c\u7531\u4e8e\u76ee\u7684\u4e0d\u660e\u786e\u800c\u6ca1\u6709\u610f\u4e49\uff0c\u5177\u6709\u5305\u542b\u4e00\u5343\u884c\u4ee3\u7801\u7684\u529f\u80fd\uff0c\u5b8c\u5168\u4e0d\u53ef\u8bfb\u548c\u96be\u4ee5\u7406\u89e3\u7b49\u7b49\u3002\u8fd9\u4e9b\u662f\u6765\u81ea\u5077\u5de5\u51cf\u6599\u7684\u597d\u5904\uff0c\u6216\u8005\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6765\u81ea\"\u524a\u51cf\"\u6210\u672c\u3002 \u7b80\u800c\u8a00\u4e4b\uff0c\u81ea\u52a8\u4ee3\u7801\u6d4b\u8bd5\u7684\u4ee3\u7801\u5c06\u5728\u5b9e\u9645\u4e2d\u6709\u6548\u5730\u8f6c\u5316\u4e3a\u5404\u79cd\u597d\u5904\uff1a \u66f4\u591a\u7684\u53ef\u91cd\u7528\u6027\uff1b \u91cd\u6784\u4f7f\u4ee3\u7801\u53d8\u5f97\u7b80\u5355/\u5e72\u51c0\uff1b \u654f\u6377\u4ee3\u7801\uff1b \u5065\u58ee\u7684\u4ee3\u7801\uff1b \u53ef\u8bfb\u4ee3\u7801\uff1b \u7b80\u5316\u8c03\u8bd5\u3002","title":"\u4e3a\u4ec0\u4e48"},{"location":"project/basic/testing/#_2","text":"FIRST \u539f\u5219 F\u2014\u2014Fast \uff1a \u5feb\u901f \u5728\u8c03\u8bd5bug\u65f6\uff0c\u9700\u8981\u9891\u7e41\u53bb\u8fd0\u884c\u5355\u5143\u6d4b\u8bd5\u9a8c\u8bc1\u7ed3\u679c\u662f\u5426\u6b63\u786e\u3002\u5982\u679c\u5355\u5143\u6d4b\u8bd5\u8db3\u591f\u5feb\u901f\uff0c\u5c31\u53ef\u4ee5\u7701\u53bb\u4e0d\u5fc5\u8981\u6d6a\u8d39\u7684\u65f6\u95f4\uff0c\u63d0\u9ad8\u5de5\u4f5c\u6548\u7387\u3002 I\u2014\u2014Isolated \uff1a \u9694\u79bb \u597d\u7684\u5355\u5143\u6d4b\u8bd5\u662f\u6bcf\u4e2a\u6d4b\u8bd5\u53ea\u5173\u6ce8\u903b\u8f91\u7684\u4e00\u4e2a\u65b9\u9762\uff0c\u8fd9\u6837\u6709\u5229\u4e8e\u6392\u9519\u3002 \u6bcf\u4e2a\u6d4b\u8bd5\u4e4b\u95f4\u4e0d\u5e94\u8be5\u4ea7\u751f\u4f9d\u8d56\uff0c\u4e0d\u4f1a\u56e0\u4e3a\u6d4b\u8bd5\u987a\u5e8f\u4e0d\u540c\u800c\u5bfc\u81f4\u8fd0\u884c\u7684\u7ed3\u679c\u4e0d\u540c\u3002 \u6d4b\u8bd5\u65f6\u4e0d\u8981\u4f9d\u8d56\u548c\u4fee\u6539\u5916\u90e8\u6570\u636e\u7b49\u5176\u4ed6\u5171\u4eab\u8d44\u6e90\uff0c\u505a\u5230\u6d4b\u8bd5\u524d\u540e\u5171\u4eab\u8d44\u6e90\u6570\u636e\u4e00\u81f4\u3002 R\u2014\u2014Repeatable \uff1a \u53ef\u91cd\u590d \u5355\u5143\u6d4b\u8bd5\u9700\u8981\u4fdd\u6301\u8fd0\u884c\u7a33\u5b9a\uff0c\u6bcf\u6b21\u8fd0\u884c\u90fd\u9700\u8981\u5f97\u5230\u540c\u6837\u7684\u7ed3\u679c\uff0c\u5982\u679c\u95f4\u6b47\u6027\u7684\u5931\u8d25\uff0c\u4f1a\u5bfc\u81f4\u6211\u4eec\u4e0d\u65ad\u7684\u53bb\u67e5\u770b\u8fd9\u4e2a\u6d4b\u8bd5\uff0c\u4e0d\u53ef\u9760\u7684\u6d4b\u8bd5\u4e5f\u5c31\u5931\u53bb\u4e86\u610f\u4e49\u3002 S\u2014\u2014Self-verifying \uff1a \u81ea\u6211\u9a8c\u8bc1 \u5355\u5143\u6d4b\u8bd5\u9700\u8981\u91c7\u7528Asset\u51fd\u6570\u7b49\u8fdb\u884c\u81ea\u9a8c\u8bc1\uff0c\u5373\u5f53\u5355\u5143\u6d4b\u8bd5\u6267\u884c\u5b8c\u6bd5\u4e4b\u540e\u5c31\u53ef\u5f97\u77e5\u6d4b\u8bd5\u7ed3\u679c\uff0c\u5168\u7a0b\u65e0\u9700\u4eba\u5de5\u63a5\u5165\u3002 T\u2014\u2014Timely \uff1a \u53ca\u65f6 \u7b49\u4ee3\u7801\u7a33\u5b9a\u8fd0\u884c\u518d\u6765\u8865\u9f50\u5355\u5143\u6d4b\u8bd5\u53ef\u80fd\u662f\u4f4e\u6548\u7684\uff0c\u6700\u6709\u6548\u7684\u65b9\u5f0f\u662f\u5728\u5199\u597d\u529f\u80fd\u51fd\u6570\u63a5\u53e3\u540e\uff08\u5b9e\u73b0\u51fd\u6570\u529f\u80fd\u524d\uff09\u8fdb\u884c\u5355\u5143\u6d4b\u8bd5\u3002","title":"\u539f\u5219"},{"location":"project/basic/testing/#_3","text":"\u76ee\u6807: \u9488\u5bf9 \"\u5f00\u53d1\" \u7ae0\u8282\u7684 \"\u5ba0\u7269\u4e3b\u4eba\" \u6a21\u5757\u8fdb\u884c\u5355\u5143\u6d4b\u8bd5\u3002","title":"\u5b9e\u9645\u64cd\u4f5c"},{"location":"project/basic/testing/#_4","text":"\u7531\u4e8e\u6211\u4eec\u4f7f\u7528\u4e86gradle \u4f5c\u4e3a\u6784\u5efa\u5de5\u5177\uff0c\u56e0\u6b64\u9009\u7528\u4e00\u6b3egradle\u6d4b\u8bd5\u63d2\u4ef6\u5de5\u5177\u8c8c\u4f3c\u662f\u4e00\u4e2a\u806a\u660e\u7684\u9009\u62e9\u3002 \u5728\u9879\u76ee build.gradle \u4e2d\u6dfb\u52a0\u5982\u4e0b\u5185\u5bb9,\u6700\u7ec8\u7ed3\u679c\u5982\u4e0b: plugins { id 'org.springframework.boot' version '2.6.7' id 'io.spring.dependency-management' version '1.0.11.RELEASE' id \"org.unbroken-dome.test-sets\" version \"4.0.0\" id 'java' } apply plugin: 'idea' apply plugin: 'eclipse' apply plugin: 'java' apply plugin: 'io.spring.dependency-management' apply plugin: 'org.unbroken-dome.test-sets' group = 'cn.tendata.jstart' version = '0.0.1-SNAPSHOT' sourceCompatibility = 11 targetCompatibility = 11 configurations { integrationTestImplementation . extendsFrom testImplementation integrationTestRuntimeOnly . extendsFrom testRuntimeOnly } repositories { mavenLocal () maven { url 'https://maven.aliyun.com/repository/public/' } mavenCentral () } dependencies { implementation 'org.springframework.boot:spring-boot-starter-data-jpa' implementation 'com.h2database:h2' implementation 'org.springframework.boot:spring-boot-starter-web' implementation 'org.springframework.boot:spring-boot-starter-validation' implementation \"com.fasterxml.jackson.datatype:jackson-datatype-hibernate5\" implementation \"com.fasterxml.jackson.datatype:jackson-datatype-jsr310\" testImplementation 'org.junit.jupiter:junit-jupiter' testImplementation 'org.mockito:mockito-junit-jupiter' testImplementation \"org.springframework:spring-test\" testImplementation \"com.jayway.jsonpath:json-path\" testImplementation \"com.jayway.jsonpath:json-path-assert\" } ext { snippetsDir = file ( 'build/generated-snippets' ) } test { outputs . dir snippetsDir } tasks . withType ( JavaCompile ) { options . encoding = \"UTF-8\" } testSets { integrationTest { dirName = 'integration-test' } } project . integrationTest { outputs . upToDateWhen { false } } check . dependsOn integrationTest integrationTest . mustRunAfter test tasks . withType ( Test ) { useJUnitPlatform () reports . html . destination = file ( \"${reporting.baseDir}/${name}\" ) } \u4ee5\u4e0a\u6784\u5efa\u811a\u672c\u4e3b\u8981\u505a\u4e86\u5982\u4e0b\u5de5\u4f5c: \u4f7f\u7528 org.unbroken-dome.test-sets \u5355\u5143\u6d4b\u8bd5\u63d2\u4ef6\uff1b \u96c6\u6210\u6d4b\u8bd5\u96c6\u5305\u540d\u91cd\u547d\u540d\u4e3a integeration-test \uff1b \u9879\u76ee\u6784\u5efa\u7684check \u4efb\u52a1\u987a\u5e8f\u5417\u4e3a test -> integrationTest ; \u6d4b\u8bd5\u6846\u67b6\u4f7f\u7528 Junit5\uff1b \u6d4b\u8bd5\u4f7f\u7528 spring-test \u73af\u5883\uff1b \u6dfb\u52a0 \u6d4b\u8bd5\u57fa\u7840\u7ec4\u4ef6\uff1b \u672c\u5355\u5143\u6d4b\u8bd5\u4e3b\u8981\u4f9d\u8d56 spring context\u73af\u5883\uff0c spring web test \u73af\u5883\uff0cmockito \u6d4b\u8bd5\u6846\u67b6\u7b49\uff0c\u56e0\u6b64\u9700\u8981\u6784\u5efa\u4ed6\u4eec\u57fa\u7840\u73af\u5883\u3002 \u65b0\u5efa src/test/java \uff0c src/test/resources \u76ee\u5f55\u5206\u522b\u7528\u4e8e\u5b58\u653e\u5355\u5143\u6d4b\u8bd5\u6e90\u4ee3\u7801\u548c\u9759\u6001\u8d44\u6e90\uff1b \u5728 src/test/java \u76ee\u5f55\u521b\u5efa cn/tendata/jstart/controller \u76ee\u5f55\uff0c\u6b64\u76ee\u5f55\u548c src/main/java \u4e2d \u5b58\u653e OwnerController \u76f8\u540c\u3002\u5e76\u5728\u6b64\u76ee\u5f55\u65b0\u5efa OwnerControllerTest.java \u6587\u4ef6\uff1b \u5728 src/test/java/cn/tendata/jstart/controller \u65b0\u5efa config , util \u4e24\u4e2a\u76ee\u5f55\uff0c\u7528\u4e8e\u5b58\u653e\u6d4b\u8bd5\u73af\u5883\u7684 spring context \u914d\u7f6e\u548c\u6d4b\u8bd5\u5de5\u5177\u7c7b\uff1b \u5728 \u4ee5\u4e0a config \u76ee\u5f55 \u65b0\u5efa WebmvcConfig.java , TestConfig.java ; WebmvcConfig.java: \u6d4b\u8bd5\u73af\u5883 web mvc \u4e2a\u6027\u5316\u914d\u7f6e: package cn.tendata.jstart.controller.config ; import cn.tendata.jstart.config.jackson.databind.PageSerializer ; import com.fasterxml.jackson.core.Version ; import com.fasterxml.jackson.databind.Module ; import com.fasterxml.jackson.databind.ObjectMapper ; import com.fasterxml.jackson.databind.SerializationFeature ; import com.fasterxml.jackson.databind.module.SimpleModule ; import com.fasterxml.jackson.databind.util.StdDateFormat ; import com.fasterxml.jackson.datatype.hibernate5.Hibernate5Module ; import com.fasterxml.jackson.datatype.jsr310.JavaTimeModule ; import org.springframework.context.annotation.Bean ; import org.springframework.context.annotation.ComponentScan ; import org.springframework.context.annotation.Configuration ; import org.springframework.context.support.PropertySourcesPlaceholderConfigurer ; import org.springframework.data.domain.PageImpl ; import org.springframework.data.web.config.EnableSpringDataWebSupport ; import org.springframework.format.FormatterRegistry ; import org.springframework.format.datetime.standard.DateTimeFormatterRegistrar ; import org.springframework.http.converter.HttpMessageConverter ; import org.springframework.http.converter.json.Jackson2ObjectMapperBuilder ; import org.springframework.http.converter.json.MappingJackson2HttpMessageConverter ; import org.springframework.web.servlet.config.annotation.EnableWebMvc ; import org.springframework.web.servlet.config.annotation.WebMvcConfigurer ; import java.nio.charset.StandardCharsets ; import java.util.List ; import static com.fasterxml.jackson.databind.DeserializationFeature.READ_UNKNOWN_ENUM_VALUES_AS_NULL ; @Configuration @EnableWebMvc @EnableSpringDataWebSupport @ComponentScan ( basePackages = \"cn.tendata.jstart.controller\" ) public class WebmvcConfig implements WebMvcConfigurer { @Bean public static PropertySourcesPlaceholderConfigurer placeHolderConfigurer () { return new PropertySourcesPlaceholderConfigurer (); } @Bean public Jackson2ObjectMapperBuilder configureObjectMapper () { return new Jackson2ObjectMapperBuilder () . modulesToInstall ( jacksonHibernate5Module (), jacksonPageWithJsonViewModule ()); } @Override public void addFormatters ( FormatterRegistry registry ) { DateTimeFormatterRegistrar registrar = new DateTimeFormatterRegistrar (); registrar . setUseIsoFormat ( true ); registrar . registerFormatters ( registry ); } @Override public void configureMessageConverters ( List < HttpMessageConverter <?>> converters ) { ObjectMapper objectMapper = Jackson2ObjectMapperBuilder . json (). modules ( new JavaTimeModule (), // java date time \u5e8f\u5217\u5316\u652f\u6301 jacksonHibernate5Module (), //hibernate \u6570\u636e\u5e8f\u5217\u5316\u652f\u6301 jacksonPageWithJsonViewModule ()) // page with json view \u89e3\u6790\u652f\u6301 . deserializers () . featuresToEnable ( READ_UNKNOWN_ENUM_VALUES_AS_NULL ) // \u4e3a\u7a7a\u6216\u8005\u4e0d\u8bc6\u522b\u7684enum \u89c6\u4e3anull . serializers (). featuresToDisable ( SerializationFeature . WRITE_DATES_AS_TIMESTAMPS ) . dateFormat ( new StdDateFormat ()) //\u65f6\u95f4\u53cd\u5e8f\u5217\u5316 iso \uff0clocal\u4ee5\u672c\u5730\u670d\u52a1\u5668\u4e3a\u4e3b . build (); MappingJackson2HttpMessageConverter converter = new MappingJackson2HttpMessageConverter ( objectMapper ); converter . setDefaultCharset ( StandardCharsets . UTF_8 ); converters . add ( converter ); } @Bean public Module jacksonHibernate5Module () { Hibernate5Module module = new Hibernate5Module (); return module ; } @Bean public Module jacksonPageWithJsonViewModule () { SimpleModule module = new SimpleModule ( \"jackson-page-with-jsonview\" , Version . unknownVersion ()); module . addSerializer ( PageImpl . class , new PageSerializer ()); return module ; } } TestConfig.java\uff1a \u7528\u4e8e\u5c06\u4e00\u4e9b\u4e0d\u5c5e\u4e8e\u5355\u5143\u6d4b\u8bd5\u7ec4\u4ef6\u7684\u5176\u5b83\u7ec4\u4ef6 mock \u6389: package cn.tendata.jstart.controller.config ; import cn.tendata.jstart.service.OwnerService ; import org.mockito.Mockito ; import org.springframework.context.annotation.Bean ; import org.springframework.context.annotation.Configuration ; import org.springframework.context.annotation.Import ; @Configuration @Import ( WebmvcConfig . class ) public class TestConfig { @Bean public OwnerService ownerService () { return Mockito . mock ( OwnerService . class ); } } \u5176\u4ed6\u7ec4\u4ef6\uff0c PageSerializer.java \uff0c\u7528\u4e8e jackson PageImpl \u5206\u9875\u5bf9\u8c61\u5e8f\u5217\u5316\u652f\u6301\uff1b PageSerializer.java \u6587\u4ef6\u5185\u5bb9\u5982\u4e0b: package cn.tendata.jstart.config.jackson.databind ; import com.fasterxml.jackson.core.JsonGenerator ; import com.fasterxml.jackson.databind.SerializerProvider ; import com.fasterxml.jackson.databind.ser.std.StdSerializer ; import org.springframework.data.domain.Page ; import java.io.IOException ; @SuppressWarnings ( \"rawtypes\" ) public class PageSerializer extends StdSerializer < Page > { private static final long serialVersionUID = - 9196525484747505477L ; public PageSerializer () { super ( Page . class ); } @Override public void serialize ( Page value , JsonGenerator gen , SerializerProvider provider ) throws IOException { gen . writeStartObject (); gen . writeNumberField ( \"number\" , value . getNumber ()); gen . writeNumberField ( \"numberOfElements\" , value . getNumberOfElements ()); gen . writeNumberField ( \"totalElements\" , value . getTotalElements ()); gen . writeNumberField ( \"totalPages\" , value . getTotalPages ()); gen . writeNumberField ( \"size\" , value . getSize ()); gen . writeFieldName ( \"content\" ); provider . defaultSerializeValue ( value . getContent (), gen ); gen . writeEndObject (); } } \u589e\u52a0 spring web \u6d4b\u8bd5\u7ec4\u4ef6 - mockMvc \u652f\u6301\u7ec4\u4ef6 MockMvcTestSupport.java \u6587\u4ef6: package cn.tendata.jstart.controller ; import cn.tendata.jstart.controller.config.TestConfig ; import org.junit.jupiter.api.BeforeEach ; import org.junit.jupiter.api.extension.ExtendWith ; import org.mockito.junit.jupiter.MockitoExtension ; import org.springframework.test.context.ActiveProfiles ; import org.springframework.test.context.ContextConfiguration ; import org.springframework.test.context.junit.jupiter.SpringExtension ; import org.springframework.test.context.web.WebAppConfiguration ; import org.springframework.test.web.servlet.MockMvc ; import org.springframework.test.web.servlet.setup.MockMvcBuilders ; import org.springframework.web.context.WebApplicationContext ; import javax.annotation.Resource ; @ExtendWith ({ SpringExtension . class , MockitoExtension . class }) @ContextConfiguration ( classes = { TestConfig . class }) @WebAppConfiguration @ActiveProfiles ( \"test\" ) public abstract class MockMvcTestSupport { @Resource protected WebApplicationContext context ; protected MockMvc mockMvc ; @BeforeEach public void setUp () { this . mockMvc = MockMvcBuilders . webAppContextSetup ( context ). build (); } } \u6700\u540e\u7684\u6587\u4ef6\u76ee\u5f55\u7ec4\u7ec7\u7ed3\u679c\u5982\u4e0b: test \u251c\u2500\u2500 java \u2502 \u2514\u2500\u2500 cn \u2502 \u2514\u2500\u2500 tendata \u2502 \u2514\u2500\u2500 jstart \u2502 \u2514\u2500\u2500 controller \u2502 \u251c\u2500\u2500 MockMvcTestSupport.java \u2502 \u251c\u2500\u2500 OwnerControllerTest.java \u2502 \u251c\u2500\u2500 config \u2502 \u2502 \u251c\u2500\u2500 TestConfig.java \u2502 \u2502 \u2514\u2500\u2500 WebmvcConfig.java \u2502 \u2514\u2500\u2500 util \u2502 \u251c\u2500\u2500 OwnerDataUtils.java \u2502 \u2514\u2500\u2500 TestUtils.java \u2514\u2500\u2500 resources","title":"\u6dfb\u52a0\u4f9d\u8d56"},{"location":"project/basic/testing/#_5","text":"","title":"\u7f16\u5199\u6d4b\u8bd5"},{"location":"project/basic/testing/#_6","text":"\u5728 OwnerControllerTest.java \u4e2d\u6dfb\u52a0\u5982\u4e0b\u4ee3\u7801: package cn.tendata.jstart.controller ; import cn.tendata.jstart.controller.util.OwnerDataUtils ; import cn.tendata.jstart.controller.util.TestUtils ; import cn.tendata.jstart.data.domain.Owner ; import cn.tendata.jstart.service.OwnerService ; import org.hamcrest.Matchers ; import org.hamcrest.core.Is ; import org.junit.jupiter.api.Test ; import org.mockito.ArgumentMatchers ; import org.mockito.Mockito ; import org.springframework.beans.factory.annotation.Autowired ; import org.springframework.data.domain.PageImpl ; import org.springframework.data.domain.Pageable ; import org.springframework.http.MediaType ; import org.springframework.test.web.servlet.request.MockMvcRequestBuilders ; import org.springframework.test.web.servlet.result.MockMvcResultHandlers ; import org.springframework.test.web.servlet.result.MockMvcResultMatchers ; import java.util.Arrays ; import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.jsonPath ; class OwnerControllerTest extends MockMvcTestSupport { @Autowired private OwnerService service ; @Test void pageOwner_findByName_shouldReturnMatchedResult () throws Exception { Mockito . when ( this . service . getAll ( ArgumentMatchers . any ( Owner . class ), ArgumentMatchers . any ( Pageable . class ))) . thenReturn ( new PageImpl <> ( Arrays . asList ( OwnerDataUtils . createOwner ( \"\u5f20\" , \"\u5927\u5b9d\" , 1 ), OwnerDataUtils . createOwner ( \"\u5f20\u4e8c\" , \"\u5b9d\" , 2 ) ))); this . mockMvc . perform ( MockMvcRequestBuilders . get ( \"/owners\" ) . param ( \"firstName\" , \"\u5f20\" ) . param ( \"lastName\" , \"\u5b9d\" )) . andExpect ( MockMvcResultMatchers . status (). isOk ()) . andDo ( MockMvcResultHandlers . print ()) . andExpect ( jsonPath ( \"$.numberOfElements\" , Is . is ( 2 ))) . andExpect ( jsonPath ( \"$.content\" , Matchers . hasSize ( 2 ))) . andExpect ( jsonPath ( \"$.content[0].firstName\" , Is . is ( \"\u5f20\" ))) . andExpect ( jsonPath ( \"$.content[0].lastName\" , Is . is ( \"\u5927\u5b9d\" ))) . andExpect ( jsonPath ( \"$.content[1].firstName\" , Is . is ( \"\u5f20\u4e8c\" ))) . andExpect ( jsonPath ( \"$.content[1].lastName\" , Is . is ( \"\u5b9d\" ))) . andReturn (); } ... } \u5728\u4ee5\u4e0a\u6d4b\u8bd5\u4ee3\u7801\u793a\u4f8b\u4e2d\uff0c \u4e3b\u8981\u6a21\u62df \u5ba2\u6237\u7aef \u5411\u6211\u4eec \u524d\u9762\u7ae0\u8282\u7f16\u5199\u7684 OnwerController \u4e2d\u7684 GET /owners - \"\u5ba0\u7269\u4e3b\u4eba\u5206\u9875\" \u63a5\u53e3 \u53d1\u9001\u8bf7\u6c42\uff0c\u67e5\u8be2\u7b26\u5408\u6761\u4ef6\u7684\u5ba0\u7269\u4e3b\u4eba\u5217\u8868\u3002 \u5728\u4ee5\u4e0a\u5355\u5143 \u6d4b\u8bd5\u4e2d\uff0c\u6211\u4eec\u5fc5\u987b\u6ee1\u8db3\u51e0\u4e2a\u7f16\u5199\u539f\u5219: \u4fdd\u8bc1\u6d4b\u8bd5\u5355\u5143\u7684\u9694\u79bb\u6027\u3002\u5982\u679c\u4e3a controller \u505a\u5355\u5143\u6d4b\u8bd5\uff0c\u90a3\u4e48controller \u4e2d\u7684\u4f9d\u8d56\uff0c\u6b64\u5904 \u4e3a OwnerService \u5bf9\u8c61\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u5173\u5fc3\u5176\u5177\u4f53\u5b9e\u73b0\u3002\u6211\u4eec\u53ea\u9700\u8981\u5c06\u4ed6 mock \u5373\u53ef\u3002mock \u7684\u4e00\u822c\u8bed\u6cd5\u5c31\u662f\uff1a \"\u5f53 mock \u5bf9\u8c61\u6ee1\u8db3 \u4ec0\u4e48\u6761\u4ef6\u65f6\uff0c\u8fd4\u56de\u4ec0\u4e48\u7ed3\u679c\".\u6b64\u5904\u4f7f\u7528 mockito \u6846\u67b6 \u7684 when ... thenReturn ... \u8bed\u6cd5\u3002 \u589e\u5f3a\u53ef\u8bfb\u6027\u3002\u53ef\u8bfb\u6027\u4e00\u822c\u5728\u4ee3\u7801\u7f16\u5199\u4e2d\u4f7f\u7528\u5408\u9002\u7684\u547d\u540d\u548c\u9002\u5f53\u7684\u8bed\u6cd5\u987a\u5e8f\u6765\u5b9e\u73b0\u3002\u6bd4\u5982\uff0c\u6b64\u5904\u4f7f\u7528 pageOwner_findByName_shouldReturnMatchedResult \u6765\u547d\u540d\u6d4b\u8bd5\u65b9\u6cd5\u3002 \u524d\u7f00 pageOwner \u4ee3\u8868\u6211\u4eec\u6d4b\u8bd5\u7684\u51fd\u6570; findByName \u8868\u793a\u6211\u4eec\u4f7f\u7528\u4e86 \u540d\u79f0 \u6765\u505a\u67e5\u8be2\u6761\u4ef6; shouldReturn \u8868\u793a\u4f1a\u8fd4\u56de\u4e00\u4e2a\u4ec0\u4e48\u7ed3\u679c\uff0c\u5404\u4e2a\u5355\u5143\u4f7f\u7528 _ \u6765\u5206\u5272\uff1b \u5c3d\u91cf\u4f7f \u5355\u5143\u6d4b\u8bd5\u4ee3\u7801\u7cbe\u70bc\u7b80\u6d01\u3002 \u5355\u5143\u6d4b\u8bd5\u4e00\u822c\u5305\u542b\u4e09\u4e2a\u90e8\u5206\uff0c GIVEN , WHEN , THEN . \u5404\u90e8\u5206\u53ef\u4f7f\u7528\u4e00\u4e2a\u7a7a\u767d\u884c\u6765\u5206\u5272\uff1b \u6d4b\u8bd5\u6570\u636e\u5916\u7f6e\u3002\u5c06\u6d4b\u8bd5\u6570\u636e\u5916\u7f6e\u662f\u4e00\u4e2a\u7cbe\u7b80\u6d4b\u8bd5\u8bed\u6cd5\u7684\u597d\u529e\u6cd5\u3002\u5c06\u4e00\u4e9b\u6570\u636e\u6784\u5efa\u4ece\u6d4b\u8bd5\u4ee3\u7801\u5265\u79bb\u51fa\u53bb\uff0c\u6b64\u5904\u5728 util \u76ee\u5f55\u63d0\u4f9b\u5404\u79cd\u6570\u636e\u751f\u6210\u7684\u9759\u6001\u65b9\u6cd5\u3002\u5728\u5355\u5143\u6d4b\u8bd5\u4e2d\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5173\u5fc3 \u8f93\u5165\u7684\u662f\u4ec0\u4e48\u503c\uff0c\u800c\u65e0\u9700\u8981\u5173\u5fc3\u5982\u4f55\u6784\u5efa\u6570\u636e\u3002","title":"\u6d4b\u8bd5\u5206\u9875"},{"location":"project/basic/testing/#_7","text":"\u5728 OwnerControllerTest.java \u4e2d\u6dfb\u52a0\u5982\u4e0b\u4ee3\u7801: ... class OwnerControllerTest extends MockMvcTestSupport { ... @Test void createOwner_shouldReturnSaveOne () throws Exception { Mockito . when ( this . service . save ( ArgumentMatchers . any ( Owner . class ))) . thenReturn ( OwnerDataUtils . createOwner ( \"\u5f20\u4e8c\" , \"\u5b9d\" , 1 ) ); Owner createRequest = OwnerDataUtils . createOwner ( \"\u5f20\u4e8c\" , \"\u5b9d\" , null ); this . mockMvc . perform ( MockMvcRequestBuilders . post ( \"/owners\" ) . contentType ( MediaType . APPLICATION_JSON ) . content ( TestUtils . convertObjectToJsonBytes ( createRequest ))) . andDo ( MockMvcResultHandlers . print ()) . andExpect ( MockMvcResultMatchers . status (). isCreated ()) . andExpect ( jsonPath ( \"$.firstName\" , Is . is ( \"\u5f20\u4e8c\" ))) . andExpect ( jsonPath ( \"$.lastName\" , Is . is ( \"\u5b9d\" ))) . andExpect ( jsonPath ( \"$.id\" , Is . is ( 1 ))) . andReturn (); } ... } \u6309\u7167 \u6d4b\u8bd5\u5206\u9875 \u7684\u89c4\u5219\u3002 \u65b9\u6cd5\u547d\u540d - \u5f53\u8c03\u7528 createOwner \u63a5\u53e3\u65f6\uff0c\u5373 \u521b\u5efa\u4e00\u4e2a\u65b0\u7684 \"\u5ba0\u7269\u4e3b\u4eba\"\u8bb0\u5f55 \u8bf7\u6c42\u65f6\uff0c\u5982\u679c\u8bf7\u6c42\u6210\u529f\u5c06\u8fd4\u56de \"\u4fdd\u5b58\u6210\u529f\u7684\u5ba0\u7269\u4e3b\u4eba\" \u5bf9\u8c61\uff1b \u4ee3\u7801\u7ec4\u4ef6 - ( WHEN ) - \u5f53\u4f9d\u8d56 OwnerService mock \u5bf9\u8c61\u8c03\u7528 save \u65b9\u6cd5\u65f6\uff0c\u5e76\u4e14\u8bf7\u6c42\u53c2\u6570\u662f\u4efb\u52a1 Owner \u5bf9\u8c61\u65f6\uff0c\u8fd4\u56de\u4e00\u4e2a \u4fdd\u5b58\u597d\u7684 Owner \u5bf9\u8c61; ( GIVEN ) - \u4f7f\u7528 firstName: \u5f20\u4e8c \uff0c lastName: \u5b9d \u6784\u5efa\u521b\u5efa \"\u5ba0\u7269\u4e3b\u4eba\" \u8bf7\u6c42\u5bf9\u8c61\uff1b ( THEN ) - \u8bf7\u6c42\u53d1\u9001 POST /owners \u540e\u662f\u5426\u8fd4\u56de 201 - Created http status. \u8fd4\u56de\u7684\u5bf9\u8c61 id \u662f\u5426 \u4e3a 1 \uff0c firstName \u5c5e\u6027\u662f\u5426\u4e3a \u5f20\u4e8c \uff0c lastName \u662f\u5426\u7b49\u4e8e \u5b9d \u3002","title":"\u6d4b\u8bd5\u66f4\u65b0"},{"location":"project/basic/testing/#_8","text":"gradle \u5185\u7f6e\u4e00\u4e2a \u81ea\u52a8\u5316\u6d4b\u8bd5\u4efb\u52a1- test , \u5b83\u7f16\u8bd1\u5e76\u8fd0\u884c \u6240\u6709 test \u6e90\u7801\u5305\u4e2d\u7684\u5185\u5bb9\uff0c\u5e76\u5c06\u6d4b\u8bd5\u7ed3\u679c\u4ee5web\u5f62\u5f0f\u5c55\u793a\u7ed9\u6d4b\u8bd5\u4eba\u5458\uff1b \u8fd0\u884c gradlew test \u547d\u4ee4 $ gradlew test Starting a Gradle Daemon, 1 incompatible Daemon could not be reused, use --status for details > Task :test 16 :10:59.572 [ SpringContextShutdownHook ] DEBUG org.springframework.web.context.support.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@958c9bcb, started on Wed May 18 16 : 10 :57 CST 2022 BUILD SUCCESSFUL in 19s","title":"\u81ea\u52a8\u5316\u6d4b\u8bd5"},{"location":"project/manage/documentation/","text":"","title":"Documentation"},{"location":"project/manage/lint/","text":"\u5982\u679c\u60a8\u60f3\u786e\u4fdd\u4ee3\u7801\u7684\u957f\u671f\u53ef\u7ef4\u62a4\u6027\uff0c\u90a3\u4e48\u60a8\u5e94\u8be5\u9075\u5faa\u6700\u4f73\u7f16\u7801\u5b9e\u8df5\u548c\u6837\u5f0f\u6307\u5357\u89c4\u5219\u3002\u5b9e\u73b0\u8fd9\u4e00\u70b9\u7684\u6700\u4f73\u65b9\u6cd5\u4e4b\u4e00\u662f\u4f7f\u7528 Linter \uff0c\u540c\u65f6\u8fd8\u53ef\u80fd\u53d1\u73b0\u4ee3\u7801\u4e2d\u7684\u9519\u8bef\u548c\u5176\u4ed6\u95ee\u9898\u3002 \u4e5f\u53ef\u4ee5\u79f0\u4e4b\u4e3a\u9759\u6001\u4ee3\u7801\u5206\u6790\u7a0b\u5e8f\uff0c\u56e0\u4e3a\u5b83\u4eec\u4f1a\u5728\u4ee3\u7801\u8fd0\u884c\u4e4b\u524d\u68c0\u67e5\u4ee3\u7801\u3002\u5b83\u4eec\u53ef\u4ee5\u5728 IDE \u4e2d\u5de5\u4f5c\uff0c\u53ef\u4ee5\u4f5c\u4e3a\u6784\u5efa\u8fc7\u7a0b\u7684\u4e00\u90e8\u5206\u8fd0\u884c\uff0c\u4e5f\u53ef\u4ee5\u63d2\u5165\u5230\u5de5\u4f5c\u6d41\u4e2d\u3002\u867d\u7136 Linter \u6709\u5f88\u591a\u7684\u65b9\u5f0f\uff0c \u4f46\u5176\u5b9e\u7528\u6027\u901a\u5e38\u96c6\u4e2d\u5728\u4ee3\u7801\u6e05\u7406\u548c\u6807\u51c6\u5316\u4e0a\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u4f7f\u7528\u4e00\u4e2a linter \u6709\u52a9\u4e8e\u51cf\u5c11\u4ee3\u7801\u7684\u677e\u6563\u6027\u548c\u66f4\u6613\u4e8e\u7ef4\u62a4\u3002 Checkstyle \u00b6 Checkstyle \u662f\u5982\u4eca\u6700\u6d41\u884c\u7684 Linter \u4e4b\u4e00\u3002\u4ed6\u6709\u5b9a\u671f\u66f4\u65b0\u3001\u8be6\u5c3d\u7684\u6587\u6863\u548c\u5145\u8db3\u7684\u793e\u533a\u652f\u6301\u3002\u68c0\u67e5\u98ce\u683c\u4e0e Ant \u548c CLI \u539f\u751f\u5730\u534f\u540c\u5de5\u4f5c. \u5b83\u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u5404\u79cd IDE \u548c\u5de5\u5177\u96c6\u7684\u63d2\u4ef6\u4f7f\u7528\uff0c\u5305\u62ec Eclipse\u3001 Codacy\u3001 Maven \u548c Gradle (\u5c3d\u7ba1\u8fd9\u4e9b\u63d2\u4ef6\u662f\u7531\u7b2c\u4e09\u65b9\u7ba1\u7406\u7684\uff0c\u6240\u4ee5\u4e0d\u80fd\u4fdd\u8bc1\u957f\u671f\u652f\u6301) Checkstyle \u63d0\u4f9b\u4e86\u9884\u5148\u5236\u4f5c\u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u8fd9\u4e9b\u6587\u4ef6\u652f\u6301 Sun Code \u7ea6\u5b9a\u6216\u8005 Google Java Style\uff0c\u7531\u4e8e\u8fd9\u4e9b\u6587\u4ef6\u662f XML\uff0c\u56e0\u6b64\u5b83\u4eec\u53ef\u4ee5\u9ad8\u5ea6\u914d\u7f6e\uff0c\u4ee5\u652f\u6301\u60a8\u7684\u5de5\u4f5c\u6d41\u548c\u751f\u4ea7\u9700\u6c42\u3002 Important \u5c06 Checkstyle \u5185\u7f6e\u5230\u5176\u6784\u5efa\u8fc7\u7a0b\u4e2d\u7684\u9879\u76ee\u53ef\u80fd\u65e0\u6cd5\u6784\u5efa\uff0c\u56e0\u4e3a\u5373\u4f7f\u5b58\u5728\u8f83\u5c0f\u7684\u9519\u8bef\uff0c\u4e5f\u6709\u53ef\u80fd\u9879\u76ee\u6784\u5efa\u5931\u8d25\u3002\u5982\u679c\u60a8\u53ea\u662f\u5bfb\u627e\u66f4\u5927\u7684\u9519\u8bef\uff0c\u800c\u6ca1\u6709\u8d44\u6e90\u6765\u4fee\u590d\u6ca1\u6709\u660e\u663e\u5f71\u54cd\u7684\u5fae\u5c0f\u9519\u8bef\uff0c\u90a3\u4e48\u8fd9\u53ef\u80fd\u662f\u4e00\u4e2a\u95ee\u9898\u3002 Lightrun \u00b6 Lightrun \u672c\u8eab\u53ef\u80fd\u5e76\u4e0d\u662f\u4e00\u4e2a\u771f\u6b63\u610f\u4e49\u4e0a\u7684 Linter \u3002\u5c3d\u7ba1\u5230\u76ee\u524d\u4e3a\u6b62\u6240\u6709 Linter \u90fd\u662f\u9759\u6001\u4ee3\u7801\u5206\u6790\u5668\uff0c\u4f46 Lightrun \u662f\u4e00\u4e2a\u8fd0\u884c\u65f6\u8c03\u8bd5\u5668. \u5bf9\u4e8e\u4eba\u7269\u4ee3\u7801\u5e93\u6216\u8005\u7a0b\u5e8f\u6765\u8bf4\uff0c\u751f\u4ea7\u73af\u5883\u62e5\u6709\u6700\u597d\u7684\u538b\u529b\u6d4b\u8bd5\u73af\u5883\uff0c\u5c24\u5176\u662f\u5982\u4eca\u7684\u4e91\u8ba1\u7b97\u65f6\u4ee3\u3002 Lighttrun \u5141\u8bb8\u4f60\u76f4\u63a5\u4ece IDE \u6216 CLI \u5411\u4ee3\u7801\u4e2d\u63d2\u5165\u65e5\u5fd7\u3001\u5ea6\u91cf\u6570\u636e\u548c\u5feb\u7167\uff0c \u751a\u81f3\u5728\u8fd0\u884c\u65f6\u4e5f\u662f\u5982\u6b64. Lightrun \u53ef\u4ee5\u8ba9\u4f60\u5728\u751f\u4ea7\u73af\u5883\u4e2d\u8c03\u8bd5\u95ee\u9898\u548c\u8fd0\u884c\u6570\u636e\u5206\u6790\u4f60\u7684\u4ee3\u7801\u5374\u4e0d\u4f1a\u653e\u6162\u6216\u4e2d\u65ad\u4f60\u7684\u5e94\u7528\u7a0b\u5e8f\u3002","title":"\u4ee3\u7801\u68c0\u6d4b"},{"location":"project/manage/lint/#checkstyle","text":"Checkstyle \u662f\u5982\u4eca\u6700\u6d41\u884c\u7684 Linter \u4e4b\u4e00\u3002\u4ed6\u6709\u5b9a\u671f\u66f4\u65b0\u3001\u8be6\u5c3d\u7684\u6587\u6863\u548c\u5145\u8db3\u7684\u793e\u533a\u652f\u6301\u3002\u68c0\u67e5\u98ce\u683c\u4e0e Ant \u548c CLI \u539f\u751f\u5730\u534f\u540c\u5de5\u4f5c. \u5b83\u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u5404\u79cd IDE \u548c\u5de5\u5177\u96c6\u7684\u63d2\u4ef6\u4f7f\u7528\uff0c\u5305\u62ec Eclipse\u3001 Codacy\u3001 Maven \u548c Gradle (\u5c3d\u7ba1\u8fd9\u4e9b\u63d2\u4ef6\u662f\u7531\u7b2c\u4e09\u65b9\u7ba1\u7406\u7684\uff0c\u6240\u4ee5\u4e0d\u80fd\u4fdd\u8bc1\u957f\u671f\u652f\u6301) Checkstyle \u63d0\u4f9b\u4e86\u9884\u5148\u5236\u4f5c\u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u8fd9\u4e9b\u6587\u4ef6\u652f\u6301 Sun Code \u7ea6\u5b9a\u6216\u8005 Google Java Style\uff0c\u7531\u4e8e\u8fd9\u4e9b\u6587\u4ef6\u662f XML\uff0c\u56e0\u6b64\u5b83\u4eec\u53ef\u4ee5\u9ad8\u5ea6\u914d\u7f6e\uff0c\u4ee5\u652f\u6301\u60a8\u7684\u5de5\u4f5c\u6d41\u548c\u751f\u4ea7\u9700\u6c42\u3002 Important \u5c06 Checkstyle \u5185\u7f6e\u5230\u5176\u6784\u5efa\u8fc7\u7a0b\u4e2d\u7684\u9879\u76ee\u53ef\u80fd\u65e0\u6cd5\u6784\u5efa\uff0c\u56e0\u4e3a\u5373\u4f7f\u5b58\u5728\u8f83\u5c0f\u7684\u9519\u8bef\uff0c\u4e5f\u6709\u53ef\u80fd\u9879\u76ee\u6784\u5efa\u5931\u8d25\u3002\u5982\u679c\u60a8\u53ea\u662f\u5bfb\u627e\u66f4\u5927\u7684\u9519\u8bef\uff0c\u800c\u6ca1\u6709\u8d44\u6e90\u6765\u4fee\u590d\u6ca1\u6709\u660e\u663e\u5f71\u54cd\u7684\u5fae\u5c0f\u9519\u8bef\uff0c\u90a3\u4e48\u8fd9\u53ef\u80fd\u662f\u4e00\u4e2a\u95ee\u9898\u3002","title":"Checkstyle"},{"location":"project/manage/lint/#lightrun","text":"Lightrun \u672c\u8eab\u53ef\u80fd\u5e76\u4e0d\u662f\u4e00\u4e2a\u771f\u6b63\u610f\u4e49\u4e0a\u7684 Linter \u3002\u5c3d\u7ba1\u5230\u76ee\u524d\u4e3a\u6b62\u6240\u6709 Linter \u90fd\u662f\u9759\u6001\u4ee3\u7801\u5206\u6790\u5668\uff0c\u4f46 Lightrun \u662f\u4e00\u4e2a\u8fd0\u884c\u65f6\u8c03\u8bd5\u5668. \u5bf9\u4e8e\u4eba\u7269\u4ee3\u7801\u5e93\u6216\u8005\u7a0b\u5e8f\u6765\u8bf4\uff0c\u751f\u4ea7\u73af\u5883\u62e5\u6709\u6700\u597d\u7684\u538b\u529b\u6d4b\u8bd5\u73af\u5883\uff0c\u5c24\u5176\u662f\u5982\u4eca\u7684\u4e91\u8ba1\u7b97\u65f6\u4ee3\u3002 Lighttrun \u5141\u8bb8\u4f60\u76f4\u63a5\u4ece IDE \u6216 CLI \u5411\u4ee3\u7801\u4e2d\u63d2\u5165\u65e5\u5fd7\u3001\u5ea6\u91cf\u6570\u636e\u548c\u5feb\u7167\uff0c \u751a\u81f3\u5728\u8fd0\u884c\u65f6\u4e5f\u662f\u5982\u6b64. Lightrun \u53ef\u4ee5\u8ba9\u4f60\u5728\u751f\u4ea7\u73af\u5883\u4e2d\u8c03\u8bd5\u95ee\u9898\u548c\u8fd0\u884c\u6570\u636e\u5206\u6790\u4f60\u7684\u4ee3\u7801\u5374\u4e0d\u4f1a\u653e\u6162\u6216\u4e2d\u65ad\u4f60\u7684\u5e94\u7528\u7a0b\u5e8f\u3002","title":"Lightrun"},{"location":"project/manage/structure/","text":"\u5728 Java \u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u5305\u6765\u5bf9\u76f8\u5173\u7684\u7c7b\u3001\u63a5\u53e3\u548c\u5b50\u5305\u8fdb\u884c\u5206\u7ec4\u3002 \u8fd9\u6837\u505a\u7684\u4e3b\u8981\u597d\u5904\u662f\uff1a \u8ba9\u76f8\u5173\u8054\u7684\u7c7b\u66f4\u5bb9\u6613\u5dee\u65e9 - \u4e00\u4e2a\u5305\u901a\u5e38\u5c06\u903b\u8f91\u76f8\u5173\u8054\u7684\u7c7b\u5305\u542b\u8fdb\u53bb\uff1b \u907f\u514d\u547d\u540d\u51b2\u7a81 - \u53ef\u4ee5\u7528\u4e0d\u540c\u7684\u5305\u5305\u542b\u76f8\u540c\u547d\u540d\u7684\u7c7b\uff1b \u63a7\u5236\u8bbf\u95ee\u7ea7\u522b - \u53ef\u4ee5\u901a\u8fc7\u8bbf\u95ee\u4fee\u9970\u7b26\u548c\u5305\u6765\u63a7\u5236\u8bbf\u95ee\u7ea7\u522b \u547d\u540d\u7ea6\u5b9a \u4e3a\u4e86\u907f\u514d\u4f7f\u7528\u76f8\u540c\u540d\u79f0\u7684\u5305\uff0c\u6211\u4eec\u9075\u5faa\u4e00\u4e9b\u547d\u540d\u7ea6\u5b9a\uff1a \u62a5\u540d\u5e94\u8be5\u90fd\u662f\u5c0f\u5199\u7684\uff1b \u591a\u4e2a\u5305\u540d\u4f7f\u7528 . \u5206\u5272\uff0c\u4f8b\u5982 cn.tendata.jstart ; \u5305\u540d\u53ef\u7531\u516c\u53f8\u6216\u8005\u7ec4\u7ec7\u6765\u7ec4\u7ec7\uff1b \u4e3a\u4e86\u6839\u636e\u7ec4\u7ec7\u786e\u5b9a\u5305\u540d\uff0c\u6211\u4eec\u901a\u5e38\u9996\u5148\u53cd\u8f6c\u516c\u53f8\u7684 URL\u3002\u5728\u6b64\u4e4b\u540e\uff0c\u53d8\u6570\u547d\u540d\u539f\u5219\u7531\u516c\u53f8\u5b9a\u4e49\uff0c\u53ef\u80fd\u5305\u62ec\u90e8\u95e8\u540d\u79f0\u548c\u9879\u76ee\u540d\u79f0\u3002 \u4f8b\u5982 www.tendata.cn -> cn.tendata .\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u8fdb\u4e00\u6b65\u5b9a\u4e49\u5b50\u5305 cn.tendata.jstart.core , cn.tendata.start.service \u7b49\u3002 \u76ee\u5f55\u7ed3\u6784 \u00b6 java \u4e2d\u7684\u5305\u5bf9\u5e94\u4e00\u4e2a\u76ee\u5f55\u7ed3\u6784\u3002 \u6bcf\u4e2a\u5305\u548c\u5b50\u5305\u90fd\u6709\u81ea\u5df1\u7684\u76ee\u5f55\u3002\u6240\u4ee5\uff0c\u5bf9\u4e8e cn.tendata.jstart \u5305\uff0c\u6211\u4eec\u5e94\u8be5\u6709\u4e00\u4e2a com -> baeldung -> packages \u7684\u76ee\u5f55\u7ed3\u6784\u3002 \u5927\u591a\u6570 IDE \u5c06\u6839\u636e\u6211\u4eec\u7684\u5305\u540d\u79f0\u5e2e\u52a9\u521b\u5efa\u6b64\u76ee\u5f55\u7ed3\u6784\uff0c\u56e0\u6b64\u6211\u4eec\u4e0d\u5fc5\u624b\u52a8\u521b\u5efa\u8fd9\u4e9b\u3002 \u5b8c\u6574\u5305\u540d \u00b6 \u6709\u65f6\u5019\uff0c\u6211\u4eec\u53ef\u80fd\u4f1a\u4ece\u4e0d\u540c\u7684\u5305\u4e2d\u4f7f\u7528\u540c\u540d\u7684\u4e24\u4e2a\u7c7b\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u53ef\u80fd\u540c\u65f6\u4f7f\u7528 java.sql.date \u548c java.util.date \u3002\u3002\u5f53\u6211\u4eec\u9047\u5230\u547d\u540d\u51b2\u7a81\u65f6\uff0c\u6211\u4eec\u9700\u8981\u4e3a\u81f3\u5c11\u4e00\u4e2a\u7c7b\u4f7f\u7528\u5b8c\u6574\u7684\u7c7b\u540d\u3002 \u5206\u5305\u539f\u7406 \u00b6 \u867d\u7136\u6ca1\u6709\u5b98\u65b9\u6807\u51c6\uff0c\u5355\u5728java \u793e\u533a\u4e2d\u6709\u4e24\u79cd\u5206\u5305\u89c4\u5219: \u6309\u8d23\u4efb\u8be5\u5206\u5305 , \u6309\u9886\u57df\u529f\u80fd\u5206\u5305 \u6309\u8d23\u4efb\u5206\u5305 \u00b6 \u4f8b\u5982\uff0c\u5e94\u7528\u7a0b\u5e8f\u53ef\u80fd\u6709\u4e00\u4e2a\u6570\u636e\u5e93\u5c42\u3002\u7136\u540e\u60a8\u5c06\u521b\u5efa\u4e00\u4e2a\u6570\u636e\u5e93\u5305\u3002\u7136\u540e\uff0c\u4e0e\u6570\u636e\u5e93\u901a\u4fe1\u6240\u6d89\u53ca\u7684\u6240\u6709\u7c7b\u90fd\u5c06\u4f4d\u4e8e\u6570\u636e\u5e93\u5305\u4e2d\u3002\u5728 spring \u793e\u533a \u6211\u4eec\u4e00\u822c\u91c7\u7528\u8be5\u5206\u5c42\u65b9\u5f0f\u3002 \u8fd9\u79cd\u65b9\u5f0f\u5728\u9879\u76ee\u5f00\u53d1\u4e2d\u4e5f\u662f\u6700\u5e38\u89c1\u7684\u5206\u5305\u65b9\u5f0f\uff0c \u6b64\u5206\u5305\u4e5f\u79f0\u4e3a \u6309\u5c42\u5206\u5305 \uff0c \u6c34\u5e73\u5207\u7247 h-layer \u251c\u2500\u2500 controller \u2502 \u2514\u2500\u2500 OwnerController.java \u251c\u2500\u2500 core \u251c\u2500\u2500 data \u2502 \u251c\u2500\u2500 domain \u2502 \u2502 \u2514\u2500\u2500 OwnerEntity.java \u2502 \u2514\u2500\u2500 repository \u2502 \u2514\u2500\u2500 OwnerRepository.java \u2514\u2500\u2500 service \u2514\u2500\u2500 OnwerService.java \u5982\u679c\u6ca1\u6709\u673a\u4f1a\u5904\u7406\u5177\u6709\u8fd9\u79cd\u7ed3\u6784\u7684\u9879\u76ee\uff0c\u53ef\u4ee5\u5728\u4e00\u4e9b\u6846\u67b6\u6559\u7a0b\u4e2d\u9047\u5230\u5b83\u3002\u4f8b\u5982\uff0c\u76f4\u5230\u7248\u672c2.2, Play \u6846\u67b6\u63a8\u8350\u8fd9\u79cd\u65b9\u6cd5\u3002\u5f53\u521d\uff0cAngular.js \u7684\u6559\u7a0b\u5efa\u8bae\u6839\u636e\u4ed6\u4eec\u7684\u804c\u8d23\u628a\u4e8b\u60c5\u7ec4\u7ec7\u8d77\u6765\u3002 \u597d\u5904: \u56fa\u5b9a\u7684\u6309\u5c42\u5206\u5305\u89c4\u5219\uff0c\u4f1a\u5e7f\u6cdb\u5f71\u54cd\u5f00\u53d1\u56e2\u961f\u591a\u4e2a\u9879\u76ee\u7684\u5305\u7ed3\u6784\u6784\u5efa\uff0c\u56e0\u6b64\u5f53\u9605\u8bfb\u540c\u4e00\u4e2a\u56e2\u961f\u591a\u4e2a\u9879\u76ee\u65f6\uff0c\u9879\u76ee\u6210\u5458\u53ef\u4ee5\u5f88\u719f\u6089\u7684\u4e86\u89e3\u9879\u76ee\u7ed3\u6784\uff1b \u4fdd\u6301\u9879\u76ee\u7ed3\u6784\u7684\u6709\u5e8f\u6027\uff0c\u8ba9\u7ecf\u9a8c\u4e0d\u8db3\u7684\u5f00\u53d1\u4eba\u5458\u4e5f\u5f88\u5bb9\u6613\u7406\u89e3\u3002 \u6309\u9886\u57df\u6a21\u578b\u5206\u5305 \u00b6 \u4f8b\u5982\u4f60\u7684\u5e94\u7528\u7a0b\u5e8f\u6709\u4e00\u4e2a\u5ba0\u7269\u4e3b\u4eba\u7ba1\u7406\u7684\u529f\u80fd\u533a\u57df\uff0c\u4f60\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a Owner \u7684 Java \u5305\u3002\u5173\u4e8e\u5ba0\u7269\u4e3b\u4eba\u7684 \u903b\u8f91\uff0c\u8def\u7531\uff0corm \u7b49\u90fd\u5728\u8be5\u5305\u4e2d\u5b8c\u6210\u3002 feature-layer \u2514\u2500\u2500 onwer \u251c\u2500\u2500 OnwerService.java \u251c\u2500\u2500 OwnerController.java \u251c\u2500\u2500 OwnerEntity.java \u2514\u2500\u2500 OwnerRepository.java \u548c \u6c34\u5e73\u5207\u7247\u76f8\u5bf9\u7684 \u8be5\u79cd\u5206\u5305\u9875\u811a\u5782\u76f4\u5206\u5305\u3002 \u5b9e\u8df5 \u00b6 \u867d\u7136 Java \u6ca1\u6709\u5f3a\u5236\u4f7f\u7528\u54ea\u79cd\u9879\u76ee\u7ed3\u6784\uff0c\u4f46\u9075\u5faa\u4e00\u81f4\u7684\u6a21\u5f0f\u6765\u7ec4\u7ec7\u6211\u4eec\u7684\u6e90\u6587\u4ef6\u3001\u6d4b\u8bd5\u3001\u914d\u7f6e\u3001\u6570\u636e\u548c\u5176\u4ed6\u4ee3\u7801\u5de5\u4ef6\u8fd8\u662f\u975e\u5e38\u6709\u7528\u7684\u3002Maven \u662f\u4e00\u79cd\u6d41\u884c\u7684 Java \u6784\u5efa\u5de5\u5177\uff0c \u5b83\u89c4\u5b9a\u4e86\u7279\u5b9a\u7684\u9879\u76ee\u7ed3\u6784\u3002\u867d\u7136\u6211\u4eec\u53ef\u80fd\u4e0d\u4f7f\u7528 Maven\uff0c\u4f46\u575a\u6301\u7ea6\u5b9a\u603b\u662f\u597d\u7684\u3002 src/main/java \uff1a\u7528\u4e8e\u6e90\u6587\u4ef6 src/main/resources \uff1a\u7528\u4e8e\u8d44\u6e90\u6587\u4ef6\uff0c\u5982\u5c5e\u6027 src/test/java : \u7528\u4e8e\u6d4b\u8bd5\u6e90\u6587\u4ef6 src/test/resources \uff1a\u7528\u4e8e\u6d4b\u8bd5\u8d44\u6e90\u6587\u4ef6\uff0c\u5982\u5c5e\u6027 \u9ed8\u8ba4\u5e03\u5c40 \u00b6 ./ \u2514\u2500\u2500 src \u251c\u2500\u2500 checkstyle \u251c\u2500\u2500 integration-test \u2502 \u251c\u2500\u2500 java \u2502 \u2502 \u2514\u2500\u2500 cn \u2502 \u2502 \u2514\u2500\u2500 tendata \u2502 \u2502 \u2514\u2500\u2500 samples \u2502 \u2502 \u2514\u2500\u2500 petclinic \u2502 \u2502 \u2514\u2500\u2500 controller \u2502 \u2514\u2500\u2500 resources \u251c\u2500\u2500 main \u2502 \u251c\u2500\u2500 generated \u2502 \u251c\u2500\u2500 java \u2502 \u2502 \u2514\u2500\u2500 cn \u2502 \u2502 \u2514\u2500\u2500 tendata \u2502 \u2502 \u2514\u2500\u2500 samples \u2502 \u2502 \u2514\u2500\u2500 petclinic \u2502 \u2502 \u251c\u2500\u2500 bind \u2502 \u2502 \u251c\u2500\u2500 config \u2502 \u2502 \u251c\u2500\u2500 controller \u2502 \u2502 \u251c\u2500\u2500 core \u2502 \u2502 \u251c\u2500\u2500 data \u2502 \u2502 \u2502 \u251c\u2500\u2500 jpa \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 config \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 domain \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 jackson \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 repository \u2502 \u2502 \u251c\u2500\u2500 service \u2502 \u2502 \u251c\u2500\u2500 support \u2502 \u2502 \u2514\u2500\u2500 util \u2502 \u251c\u2500\u2500 resources \u2514\u2500\u2500 test \u2514\u2500\u2500 jmeter \u251c\u2500\u2500 build.gradle \u251c\u2500\u2500 docker-compose.yml \u251c\u2500\u2500 gradle.properties \u251c\u2500\u2500 gradlew \u251c\u2500\u2500 gradlew.bat \u251c\u2500\u2500 readme.md \u251c\u2500\u2500 README.md \u2514\u2500\u2500 settings.gradle \u4ee5\u4e0a\u4e3a\u4e00\u4e2a\u5e38\u89c1\u7684 gradle \u5de5\u7a0b\u76ee\u5f55\u7ed3\u6784: src/main/java : \u5de5\u7a0b\u6e90\u4ee3\u7801 src/integeration-test \uff1a \u9879\u76ee\u96c6\u6210\u6d4b\u8bd5\u6e90\u4ee3\u7801 src/test/ : \u9879\u76ee\u5355\u5143\u6d4b\u8bd5 build.gradle : \u9879\u76ee\u6784\u5efa\u811a\u672c\u6587\u4ef6 \u73b0\u6709\u9879\u76ee\u91c7\u7528 \u6df7\u5408\u5206\u5305\u6a21\u5f0f\uff0c\u603b\u4f53\u4e0a\u4ee5 \u6c34\u5e73\u5207\u7247 \u7684\u65b9\u5f0f\u5206\u5305\uff0c\u5982\u679c\u6709\u4e9b\u6bd4\u8f83\u91cd\u91cf\u7ea7\u7684\u6a21\u5757\uff0c\u65b0\u5efa\u4e00\u4e2a\u5305\u7f6e\u4e8e\u548c\u9876\u5c42\u5305\u540c\u7ea7\u5373\u53ef\u3002\u4f8b\u5982\uff0c\u6709\u4e2a mail \u7684\u590d\u6742\u6a21\u5757 \u6211\u4eec\u53ef\u4ee5\u653e\u5230\u548ccotroller\u5305\u540c\u7ea7\u3002","title":"\u9879\u76ee\u7ed3\u6784"},{"location":"project/manage/structure/#_1","text":"java \u4e2d\u7684\u5305\u5bf9\u5e94\u4e00\u4e2a\u76ee\u5f55\u7ed3\u6784\u3002 \u6bcf\u4e2a\u5305\u548c\u5b50\u5305\u90fd\u6709\u81ea\u5df1\u7684\u76ee\u5f55\u3002\u6240\u4ee5\uff0c\u5bf9\u4e8e cn.tendata.jstart \u5305\uff0c\u6211\u4eec\u5e94\u8be5\u6709\u4e00\u4e2a com -> baeldung -> packages \u7684\u76ee\u5f55\u7ed3\u6784\u3002 \u5927\u591a\u6570 IDE \u5c06\u6839\u636e\u6211\u4eec\u7684\u5305\u540d\u79f0\u5e2e\u52a9\u521b\u5efa\u6b64\u76ee\u5f55\u7ed3\u6784\uff0c\u56e0\u6b64\u6211\u4eec\u4e0d\u5fc5\u624b\u52a8\u521b\u5efa\u8fd9\u4e9b\u3002","title":"\u76ee\u5f55\u7ed3\u6784"},{"location":"project/manage/structure/#_2","text":"\u6709\u65f6\u5019\uff0c\u6211\u4eec\u53ef\u80fd\u4f1a\u4ece\u4e0d\u540c\u7684\u5305\u4e2d\u4f7f\u7528\u540c\u540d\u7684\u4e24\u4e2a\u7c7b\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u53ef\u80fd\u540c\u65f6\u4f7f\u7528 java.sql.date \u548c java.util.date \u3002\u3002\u5f53\u6211\u4eec\u9047\u5230\u547d\u540d\u51b2\u7a81\u65f6\uff0c\u6211\u4eec\u9700\u8981\u4e3a\u81f3\u5c11\u4e00\u4e2a\u7c7b\u4f7f\u7528\u5b8c\u6574\u7684\u7c7b\u540d\u3002","title":"\u5b8c\u6574\u5305\u540d"},{"location":"project/manage/structure/#_3","text":"\u867d\u7136\u6ca1\u6709\u5b98\u65b9\u6807\u51c6\uff0c\u5355\u5728java \u793e\u533a\u4e2d\u6709\u4e24\u79cd\u5206\u5305\u89c4\u5219: \u6309\u8d23\u4efb\u8be5\u5206\u5305 , \u6309\u9886\u57df\u529f\u80fd\u5206\u5305","title":"\u5206\u5305\u539f\u7406"},{"location":"project/manage/structure/#_4","text":"\u4f8b\u5982\uff0c\u5e94\u7528\u7a0b\u5e8f\u53ef\u80fd\u6709\u4e00\u4e2a\u6570\u636e\u5e93\u5c42\u3002\u7136\u540e\u60a8\u5c06\u521b\u5efa\u4e00\u4e2a\u6570\u636e\u5e93\u5305\u3002\u7136\u540e\uff0c\u4e0e\u6570\u636e\u5e93\u901a\u4fe1\u6240\u6d89\u53ca\u7684\u6240\u6709\u7c7b\u90fd\u5c06\u4f4d\u4e8e\u6570\u636e\u5e93\u5305\u4e2d\u3002\u5728 spring \u793e\u533a \u6211\u4eec\u4e00\u822c\u91c7\u7528\u8be5\u5206\u5c42\u65b9\u5f0f\u3002 \u8fd9\u79cd\u65b9\u5f0f\u5728\u9879\u76ee\u5f00\u53d1\u4e2d\u4e5f\u662f\u6700\u5e38\u89c1\u7684\u5206\u5305\u65b9\u5f0f\uff0c \u6b64\u5206\u5305\u4e5f\u79f0\u4e3a \u6309\u5c42\u5206\u5305 \uff0c \u6c34\u5e73\u5207\u7247 h-layer \u251c\u2500\u2500 controller \u2502 \u2514\u2500\u2500 OwnerController.java \u251c\u2500\u2500 core \u251c\u2500\u2500 data \u2502 \u251c\u2500\u2500 domain \u2502 \u2502 \u2514\u2500\u2500 OwnerEntity.java \u2502 \u2514\u2500\u2500 repository \u2502 \u2514\u2500\u2500 OwnerRepository.java \u2514\u2500\u2500 service \u2514\u2500\u2500 OnwerService.java \u5982\u679c\u6ca1\u6709\u673a\u4f1a\u5904\u7406\u5177\u6709\u8fd9\u79cd\u7ed3\u6784\u7684\u9879\u76ee\uff0c\u53ef\u4ee5\u5728\u4e00\u4e9b\u6846\u67b6\u6559\u7a0b\u4e2d\u9047\u5230\u5b83\u3002\u4f8b\u5982\uff0c\u76f4\u5230\u7248\u672c2.2, Play \u6846\u67b6\u63a8\u8350\u8fd9\u79cd\u65b9\u6cd5\u3002\u5f53\u521d\uff0cAngular.js \u7684\u6559\u7a0b\u5efa\u8bae\u6839\u636e\u4ed6\u4eec\u7684\u804c\u8d23\u628a\u4e8b\u60c5\u7ec4\u7ec7\u8d77\u6765\u3002 \u597d\u5904: \u56fa\u5b9a\u7684\u6309\u5c42\u5206\u5305\u89c4\u5219\uff0c\u4f1a\u5e7f\u6cdb\u5f71\u54cd\u5f00\u53d1\u56e2\u961f\u591a\u4e2a\u9879\u76ee\u7684\u5305\u7ed3\u6784\u6784\u5efa\uff0c\u56e0\u6b64\u5f53\u9605\u8bfb\u540c\u4e00\u4e2a\u56e2\u961f\u591a\u4e2a\u9879\u76ee\u65f6\uff0c\u9879\u76ee\u6210\u5458\u53ef\u4ee5\u5f88\u719f\u6089\u7684\u4e86\u89e3\u9879\u76ee\u7ed3\u6784\uff1b \u4fdd\u6301\u9879\u76ee\u7ed3\u6784\u7684\u6709\u5e8f\u6027\uff0c\u8ba9\u7ecf\u9a8c\u4e0d\u8db3\u7684\u5f00\u53d1\u4eba\u5458\u4e5f\u5f88\u5bb9\u6613\u7406\u89e3\u3002","title":"\u6309\u8d23\u4efb\u5206\u5305"},{"location":"project/manage/structure/#_5","text":"\u4f8b\u5982\u4f60\u7684\u5e94\u7528\u7a0b\u5e8f\u6709\u4e00\u4e2a\u5ba0\u7269\u4e3b\u4eba\u7ba1\u7406\u7684\u529f\u80fd\u533a\u57df\uff0c\u4f60\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a Owner \u7684 Java \u5305\u3002\u5173\u4e8e\u5ba0\u7269\u4e3b\u4eba\u7684 \u903b\u8f91\uff0c\u8def\u7531\uff0corm \u7b49\u90fd\u5728\u8be5\u5305\u4e2d\u5b8c\u6210\u3002 feature-layer \u2514\u2500\u2500 onwer \u251c\u2500\u2500 OnwerService.java \u251c\u2500\u2500 OwnerController.java \u251c\u2500\u2500 OwnerEntity.java \u2514\u2500\u2500 OwnerRepository.java \u548c \u6c34\u5e73\u5207\u7247\u76f8\u5bf9\u7684 \u8be5\u79cd\u5206\u5305\u9875\u811a\u5782\u76f4\u5206\u5305\u3002","title":"\u6309\u9886\u57df\u6a21\u578b\u5206\u5305"},{"location":"project/manage/structure/#_6","text":"\u867d\u7136 Java \u6ca1\u6709\u5f3a\u5236\u4f7f\u7528\u54ea\u79cd\u9879\u76ee\u7ed3\u6784\uff0c\u4f46\u9075\u5faa\u4e00\u81f4\u7684\u6a21\u5f0f\u6765\u7ec4\u7ec7\u6211\u4eec\u7684\u6e90\u6587\u4ef6\u3001\u6d4b\u8bd5\u3001\u914d\u7f6e\u3001\u6570\u636e\u548c\u5176\u4ed6\u4ee3\u7801\u5de5\u4ef6\u8fd8\u662f\u975e\u5e38\u6709\u7528\u7684\u3002Maven \u662f\u4e00\u79cd\u6d41\u884c\u7684 Java \u6784\u5efa\u5de5\u5177\uff0c \u5b83\u89c4\u5b9a\u4e86\u7279\u5b9a\u7684\u9879\u76ee\u7ed3\u6784\u3002\u867d\u7136\u6211\u4eec\u53ef\u80fd\u4e0d\u4f7f\u7528 Maven\uff0c\u4f46\u575a\u6301\u7ea6\u5b9a\u603b\u662f\u597d\u7684\u3002 src/main/java \uff1a\u7528\u4e8e\u6e90\u6587\u4ef6 src/main/resources \uff1a\u7528\u4e8e\u8d44\u6e90\u6587\u4ef6\uff0c\u5982\u5c5e\u6027 src/test/java : \u7528\u4e8e\u6d4b\u8bd5\u6e90\u6587\u4ef6 src/test/resources \uff1a\u7528\u4e8e\u6d4b\u8bd5\u8d44\u6e90\u6587\u4ef6\uff0c\u5982\u5c5e\u6027","title":"\u5b9e\u8df5"},{"location":"project/manage/structure/#_7","text":"./ \u2514\u2500\u2500 src \u251c\u2500\u2500 checkstyle \u251c\u2500\u2500 integration-test \u2502 \u251c\u2500\u2500 java \u2502 \u2502 \u2514\u2500\u2500 cn \u2502 \u2502 \u2514\u2500\u2500 tendata \u2502 \u2502 \u2514\u2500\u2500 samples \u2502 \u2502 \u2514\u2500\u2500 petclinic \u2502 \u2502 \u2514\u2500\u2500 controller \u2502 \u2514\u2500\u2500 resources \u251c\u2500\u2500 main \u2502 \u251c\u2500\u2500 generated \u2502 \u251c\u2500\u2500 java \u2502 \u2502 \u2514\u2500\u2500 cn \u2502 \u2502 \u2514\u2500\u2500 tendata \u2502 \u2502 \u2514\u2500\u2500 samples \u2502 \u2502 \u2514\u2500\u2500 petclinic \u2502 \u2502 \u251c\u2500\u2500 bind \u2502 \u2502 \u251c\u2500\u2500 config \u2502 \u2502 \u251c\u2500\u2500 controller \u2502 \u2502 \u251c\u2500\u2500 core \u2502 \u2502 \u251c\u2500\u2500 data \u2502 \u2502 \u2502 \u251c\u2500\u2500 jpa \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 config \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 domain \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 jackson \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 repository \u2502 \u2502 \u251c\u2500\u2500 service \u2502 \u2502 \u251c\u2500\u2500 support \u2502 \u2502 \u2514\u2500\u2500 util \u2502 \u251c\u2500\u2500 resources \u2514\u2500\u2500 test \u2514\u2500\u2500 jmeter \u251c\u2500\u2500 build.gradle \u251c\u2500\u2500 docker-compose.yml \u251c\u2500\u2500 gradle.properties \u251c\u2500\u2500 gradlew \u251c\u2500\u2500 gradlew.bat \u251c\u2500\u2500 readme.md \u251c\u2500\u2500 README.md \u2514\u2500\u2500 settings.gradle \u4ee5\u4e0a\u4e3a\u4e00\u4e2a\u5e38\u89c1\u7684 gradle \u5de5\u7a0b\u76ee\u5f55\u7ed3\u6784: src/main/java : \u5de5\u7a0b\u6e90\u4ee3\u7801 src/integeration-test \uff1a \u9879\u76ee\u96c6\u6210\u6d4b\u8bd5\u6e90\u4ee3\u7801 src/test/ : \u9879\u76ee\u5355\u5143\u6d4b\u8bd5 build.gradle : \u9879\u76ee\u6784\u5efa\u811a\u672c\u6587\u4ef6 \u73b0\u6709\u9879\u76ee\u91c7\u7528 \u6df7\u5408\u5206\u5305\u6a21\u5f0f\uff0c\u603b\u4f53\u4e0a\u4ee5 \u6c34\u5e73\u5207\u7247 \u7684\u65b9\u5f0f\u5206\u5305\uff0c\u5982\u679c\u6709\u4e9b\u6bd4\u8f83\u91cd\u91cf\u7ea7\u7684\u6a21\u5757\uff0c\u65b0\u5efa\u4e00\u4e2a\u5305\u7f6e\u4e8e\u548c\u9876\u5c42\u5305\u540c\u7ea7\u5373\u53ef\u3002\u4f8b\u5982\uff0c\u6709\u4e2a mail \u7684\u590d\u6742\u6a21\u5757 \u6211\u4eec\u53ef\u4ee5\u653e\u5230\u548ccotroller\u5305\u540c\u7ea7\u3002","title":"\u9ed8\u8ba4\u5e03\u5c40"},{"location":"standard/language_rules/","text":"Java \u8bed\u8a00\u89c4\u8303 \u00b6 \u7f16\u7a0b\u89c4\u7ea6 \u00b6 \u547d\u540d\u98ce\u683c \u00b6 \u3010\u5f3a\u5236\u3011 \u4ee3\u7801\u4e2d\u7684\u547d\u540d\u5747\u4e0d\u80fd\u4ee5\u4e0b\u5212\u7ebf\u6216\u7f8e\u5143\u7b26\u53f7\u5f00\u59cb\uff0c\u4e5f\u4e0d\u80fd\u4ee5\u4e0b\u5212\u7ebf\u6216\u7f8e\u5143\u7b26\u53f7\u7ed3\u675f\u3002 \u53cd\u4f8b _name / __name /$name / name_ / name$ / name__ \u3010\u5f3a\u5236\u3011 \u4ee3\u7801\u4e2d\u7684\u547d\u540d\u4e25\u7981\u4f7f\u7528\u62fc\u97f3\u4e0e\u82f1\u6587\u6df7\u5408\u7684\u65b9\u5f0f\uff0c\u66f4\u4e0d\u5141\u8bb8\u76f4\u63a5\u4f7f\u7528\u4e2d\u6587\u7684\u65b9\u5f0f\u3002 \u8bf4\u660e\uff1a\u6b63\u786e\u7684\u82f1\u6587\u62fc\u5199\u548c\u8bed\u6cd5\u53ef\u4ee5\u8ba9\u9605\u8bfb\u8005\u6613\u4e8e\u7406\u89e3\uff0c\u907f\u514d\u6b67\u4e49\u3002\u6ce8\u610f\uff0c\u5373\u4f7f\u7eaf\u62fc\u97f3\u547d\u540d\u65b9\u5f0f\u4e5f\u8981\u907f\u514d\u91c7\u7528\u3002 \u6b63\u4f8b alibaba / taobao / youku / hangzhou \u7b49\u56fd\u9645\u901a\u7528\u7684\u540d\u79f0\uff0c\u53ef\u89c6\u540c\u82f1\u6587\u3002 \u53cd\u4f8b DaZhePromotion [\u6253\u6298] / getPingfenByName() [\u8bc4\u5206] / int \u67d0\u53d8\u91cf = 3 \u3010\u5f3a\u5236\u3011 \u7c7b\u540d\u4f7f\u7528 UpperCamelCase \u98ce\u683c\uff0c\u4f46\u4ee5\u4e0b\u60c5\u5f62\u4f8b\u5916\uff1a DO / BO / DTO / VO / AO /PO / UID \u7b49\u3002 \u6b63\u4f8b MarcoPolo / UserDO / XmlService / TcpUdpDeal / TaPromotion \u53cd\u4f8b macroPolo / UserDo / XMLService / TCPUDPDeal / TAPromotion \u3010\u5f3a\u5236\u3011 \u65b9\u6cd5\u540d\u3001\u53c2\u6570\u540d\u3001\u6210\u5458\u53d8\u91cf\u3001\u5c40\u90e8\u53d8\u91cf\u90fd\u7edf\u4e00\u4f7f\u7528 lowerCamelCase \u98ce\u683c\uff0c\u5fc5\u987b\u9075\u4ece\u9a7c\u5cf0\u5f62\u5f0f\u3002 \u6b63\u4f8b localValue / getHttpMessage() / inputUserId \u3010\u5f3a\u5236\u3011 \u5e38\u91cf\u547d\u540d\u5168\u90e8\u5927\u5199\uff0c\u5355\u8bcd\u95f4\u7528\u4e0b\u5212\u7ebf\u9694\u5f00\uff0c\u529b\u6c42\u8bed\u4e49\u8868\u8fbe\u5b8c\u6574\u6e05\u695a\uff0c\u4e0d\u8981\u5acc\u540d\u5b57\u957f\u3002 \u6b63\u4f8b MAX_STOCK_COUNT \u53cd\u4f8b MAX_COUNT \u3010\u5f3a\u5236\u3011 \u62bd\u8c61\u7c7b\u547d\u540d\u4f7f\u7528 Abstract \u5f00\u5934\uff1b\u5f02\u5e38\u7c7b\u547d\u540d\u4f7f\u7528 Exception \u7ed3\u5c3e\uff1b\u6d4b\u8bd5\u7c7b\u547d\u540d\u4ee5\u5b83\u8981\u6d4b\u8bd5\u7684\u7c7b\u7684\u540d\u79f0\u5f00\u59cb\uff0c \u4ee5 Test \u7ed3\u5c3e\u3002 \u3010\u5f3a\u5236\u3011 \u7c7b\u578b\u4e0e\u4e2d\u62ec\u53f7\u7d27\u6328\u76f8\u8fde\u6765\u8868\u793a\u6570\u7ec4\u3002 \u6b63\u4f8b \u5b9a\u4e49\u6574\u5f62\u6570\u7ec4 int[] arrayDemo ; \u53cd\u4f8b \u5728 main \u53c2\u6570\u4e2d\uff0c\u4f7f\u7528 String args[] \u6765\u5b9a\u4e49\u3002 \u3010\u5f3a\u5236\u3011 POJO \u7c7b\u4e2d\u5e03\u5c14\u7c7b\u578b\u7684\u53d8\u91cf\uff0c\u90fd\u4e0d\u8981\u52a0 is \u524d\u7f00\uff0c\u5426\u5219\u90e8\u5206\u6846\u67b6\u89e3\u6790\u4f1a\u5f15\u8d77\u5e8f\u5217\u5316\u9519\u8bef\u3002 \u53cd\u4f8b \u5b9a\u4e49\u4e3a\u57fa\u672c\u6570\u636e\u7c7b\u578b Boolean isDeleted \u7684\u5c5e\u6027\uff0c\u5b83\u7684\u65b9\u6cd5\u4e5f\u662f isDeleted() \uff0c RPC \u6846\u67b6\u5728\u53cd\u5411\u89e3\u6790\u7684\u65f6\u5019\uff0c \u201c\u8bef\u4ee5\u4e3a\u201d\u5bf9\u5e94\u7684\u5c5e\u6027\u540d\u79f0\u662f deleted \uff0c\u5bfc\u81f4\u5c5e\u6027\u83b7\u53d6\u4e0d\u5230\uff0c\u8fdb\u800c\u629b\u51fa\u5f02\u5e38\u3002 \u3010\u5f3a\u5236\u3011 \u5305\u540d\u7edf\u4e00\u4f7f\u7528\u5c0f\u5199\uff0c\u70b9\u5206\u9694\u7b26\u4e4b\u95f4\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a\u81ea\u7136\u8bed\u4e49\u7684\u82f1\u8bed\u5355\u8bcd\u3002\u5305\u540d\u7edf\u4e00\u4f7f\u7528\u5355\u6570\u5f62\u5f0f\uff0c\u4f46\u662f\u7c7b\u540d\u5982\u679c\u6709\u590d\u6570\u542b\u4e49\uff0c\u7c7b\u540d\u53ef\u4ee5\u4f7f\u7528\u590d\u6570\u5f62\u5f0f\u3002 \u6b63\u4f8b \u5e94\u7528\u5de5\u5177\u7c7b\u5305\u540d\u4e3a com.alibaba.ai.util \u3001\u7c7b\u540d\u4e3a MessageUtils \uff08\u6b64\u89c4\u5219\u53c2\u8003 spring \u7684\u6846\u67b6\u7ed3\u6784\uff09 \u3010\u5f3a\u5236\u3011 \u675c\u7edd\u5b8c\u5168\u4e0d\u89c4\u8303\u7684\u7f29\u5199\uff0c\u907f\u514d\u671b\u6587\u4e0d\u77e5\u4e49\u3002 \u53cd\u4f8b AbstractClass \u7f29\u5199\u547d\u540d\u6210 AbsClass \uff1b condition \u7f29\u5199\u547d\u540d\u6210 condi \uff0c\u6b64\u7c7b\u968f\u610f\u7f29\u5199\u4e25\u91cd\u964d\u4f4e\u4e86\u4ee3\u7801\u7684\u53ef\u9605\u8bfb\u6027\u3002 \u3010\u63a8\u8350\u3011 \u4e3a\u4e86\u8fbe\u5230\u4ee3\u7801\u81ea\u89e3\u91ca\u7684\u76ee\u6807\uff0c\u4efb\u4f55\u81ea\u5b9a\u4e49\u7f16\u7a0b\u5143\u7d20\u5728\u547d\u540d\u65f6\uff0c\u4f7f\u7528\u5c3d\u91cf\u5b8c\u6574\u7684\u5355\u8bcd\u7ec4\u5408\u6765\u8868\u8fbe\u5176\u610f\u3002 \u6b63\u4f8b \u5728 JDK \u4e2d\uff0c\u8868\u8fbe\u539f\u5b50\u66f4\u65b0\u7684\u7c7b\u540d\u4e3a\uff1a AtomicReferenceFieldUpdater \u3002 \u53cd\u4f8b \u53d8\u91cf int a \u7684\u968f\u610f\u547d\u540d\u65b9\u5f0f\u3002 \u3010\u63a8\u8350\u3011 \u5982\u679c\u6a21\u5757\u3001\u63a5\u53e3\u3001\u7c7b\u3001\u65b9\u6cd5\u4f7f\u7528\u4e86\u8bbe\u8ba1\u6a21\u5f0f\uff0c\u5728\u547d\u540d\u65f6\u9700\u4f53\u73b0\u51fa\u5177\u4f53\u6a21\u5f0f\u3002 \u6b63\u4f8b public class OrderFactory ; public class LoginProxy ; public class ResourceObserver ; \u8bf4\u660e \u5c06\u8bbe\u8ba1\u6a21\u5f0f\u4f53\u73b0\u5728\u540d\u5b57\u4e2d\uff0c\u6709\u5229\u4e8e\u9605\u8bfb\u8005\u5feb\u901f\u7406\u89e3\u67b6\u6784\u8bbe\u8ba1\u7406\u5ff5\u3002 \u3010\u63a8\u8350\u3011 \u63a5\u53e3\u7c7b\u4e2d\u7684\u65b9\u6cd5\u548c\u5c5e\u6027\u4e0d\u8981\u52a0\u4efb\u4f55\u4fee\u9970\u7b26\u53f7\uff08 public \u4e5f\u4e0d\u8981\u52a0\uff09\uff0c\u4fdd\u6301\u4ee3\u7801\u7684\u7b80\u6d01\u6027\u3002\u5c3d\u91cf\u4e0d\u8981\u5728\u63a5\u53e3\u91cc\u5b9a\u4e49\u53d8\u91cf\uff0c\u5982\u679c\u4e00\u5b9a\u8981\u5b9a\u4e49\u53d8\u91cf\uff0c\u80af\u5b9a\u662f\u4e0e\u63a5\u53e3\u65b9\u6cd5\u76f8\u5173\uff0c\u5e76\u4e14\u662f\u6574\u4e2a\u5e94\u7528\u7684\u57fa\u7840\u5e38\u91cf\u3002 \u6b63\u4f8b \u63a5\u53e3\u65b9\u6cd5\u7b7e\u540d void commit() ; \u63a5\u53e3\u57fa\u7840\u5e38\u91cf String COMPANY = \"alibaba\" ; \u53cd\u4f8b \u63a5\u53e3\u65b9\u6cd5\u5b9a\u4e49 public abstract void f() ; \u8bf4\u660e JDK8 \u4e2d\u63a5\u53e3\u5141\u8bb8\u6709\u9ed8\u8ba4\u5b9e\u73b0\uff0c\u90a3\u4e48\u8fd9\u4e2a default \u65b9\u6cd5\uff0c\u662f\u5bf9\u6240\u6709\u5b9e\u73b0\u7c7b\u90fd\u6709\u4ef7\u503c\u7684\u9ed8\u8ba4\u5b9e\u73b0\u3002 \u63a5\u53e3\u548c\u5b9e\u73b0\u7c7b\u7684\u547d\u540d\u6709\u4e24\u5957\u89c4\u5219\uff1a \u3010\u5f3a\u5236\u3011 \u5bf9\u4e8e Service \u548c DAO \u7c7b\uff0c\u57fa\u4e8e SOA \u7684\u7406\u5ff5\uff0c\u66b4\u9732\u51fa\u6765\u7684\u670d\u52a1\u4e00\u5b9a\u662f\u63a5\u53e3\uff0c \u5185\u90e8\u7684\u5b9e\u73b0\u7c7b\u7528 Impl \u7684\u540e\u7f00\u4e0e\u63a5\u53e3\u533a\u522b\u3002 \u6b63\u4f8b CacheServiceImpl \u5b9e\u73b0 CacheService \u63a5\u53e3\u3002 \u3010\u63a8\u8350\u3011 \u5982\u679c\u662f\u5f62\u5bb9\u80fd\u529b\u7684\u63a5\u53e3\u540d\u79f0\uff0c\u53d6\u5bf9\u5e94\u7684\u5f62\u5bb9\u8bcd\u4e3a\u63a5\u53e3\u540d\uff08\u901a\u5e38\u662f \u2013able \u7684\u5f62\u5f0f\uff09\u3002 \u6b63\u4f8b AbstractTranslator \u5b9e\u73b0 Translatable \u63a5\u53e3\u3002 \u3010\u53c2\u8003\u3011 \u679a\u4e3e\u7c7b\u540d\u5efa\u8bae\u5e26\u4e0a Enum \u540e\u7f00\uff0c\u679a\u4e3e\u6210\u5458\u540d\u79f0\u9700\u8981\u5168\u5927\u5199\uff0c\u5355\u8bcd\u95f4\u7528\u4e0b\u5212\u7ebf\u9694\u5f00\u3002 \u6b63\u4f8b \u679a\u4e3e\u540d\u5b57\u4e3a ProcessStatusEnum \u7684\u6210\u5458\u540d\u79f0\uff1a SUCCESS / UNKNOWN_REASON \u3002 \u8bf4\u660e \u679a\u4e3e\u5176\u5b9e\u5c31\u662f\u7279\u6b8a\u7684\u7c7b\uff0c\u57df\u6210\u5458\u5747\u4e3a\u5e38\u91cf\uff0c\u4e14\u6784\u9020\u65b9\u6cd5\u88ab\u9ed8\u8ba4\u5f3a\u5236\u662f\u79c1\u6709\u3002 \u3010\u53c2\u8003\u3011 \u5404\u5c42\u547d\u540d\u89c4\u7ea6\uff1a Service/DAO \u5c42\u65b9\u6cd5\u547d\u540d\u89c4\u7ea6 \u83b7\u53d6\u5355\u4e2a\u5bf9\u8c61\u7684\u65b9\u6cd5\u7528 get \u505a\u524d\u7f00\u3002 \u83b7\u53d6\u591a\u4e2a\u5bf9\u8c61\u7684\u65b9\u6cd5\u7528 list \u505a\u524d\u7f00\uff0c\u590d\u6570\u5f62\u5f0f\u7ed3\u5c3e\u5982\uff1a listObjects \u3002 \u83b7\u53d6\u7edf\u8ba1\u503c\u7684\u65b9\u6cd5\u7528 count \u505a\u524d\u7f00\u3002 \u63d2\u5165\u7684\u65b9\u6cd5\u7528 save/insert \u505a\u524d\u7f00\u3002 \u5220\u9664\u7684\u65b9\u6cd5\u7528 remove/delete \u505a\u524d\u7f00\u3002 \u4fee\u6539\u7684\u65b9\u6cd5\u7528 update \u505a\u524d\u7f00\u3002 \u9886\u57df\u6a21\u578b\u547d\u540d\u89c4\u7ea6 \u6570\u636e\u4f20\u8f93\u5bf9\u8c61\uff1a xxxDTO \uff0c xxx \u4e3a\u4e1a\u52a1\u9886\u57df\u76f8\u5173\u7684\u540d\u79f0\u3002 \u5c55\u793a\u5bf9\u8c61\uff1a xxxVO \uff0c xxx \u4e00\u822c\u4e3a\u7f51\u9875\u540d\u79f0\u3002 POJO \u662f DO/DTO/BO/VO \u7684\u7edf\u79f0\uff0c\u7981\u6b62\u547d\u540d\u6210 xxxPOJO \u3002 \u5e38\u91cf\u5b9a\u4e49 \u00b6 \u3010\u5f3a\u5236\u3011 \u4e0d\u5141\u8bb8\u4efb\u4f55\u9b54\u6cd5\u503c\uff08\u5373\u672a\u7ecf\u9884\u5148\u5b9a\u4e49\u7684\u5e38\u91cf\uff09\u76f4\u63a5\u51fa\u73b0\u5728\u4ee3\u7801\u4e2d\u3002 \u53cd\u4f8b String key = \"Id#taobao_\" + tradeId ; cache . put ( key , value ); \u3010\u5f3a\u5236\u3011 \u5728 long \u6216\u8005 Long \u8d4b\u503c\u65f6\uff0c\u6570\u503c\u540e\u4f7f\u7528\u5927\u5199\u7684 L \uff0c\u4e0d\u80fd\u662f\u5c0f\u5199\u7684 l \uff0c\u5c0f\u5199\u5bb9\u6613\u8ddf\u6570\u5b57 1 \u6df7\u6dc6\uff0c\u9020\u6210\u8bef\u89e3\u3002 \u8bf4\u660e Long a = 2l ; \u5199\u7684\u662f\u6570\u5b57\u7684 21 \uff0c\u8fd8\u662f Long \u578b\u7684 2 ? \u3010\u63a8\u8350\u3011 \u4e0d\u8981\u4f7f\u7528\u4e00\u4e2a\u5e38\u91cf\u7c7b\u7ef4\u62a4\u6240\u6709\u5e38\u91cf\uff0c\u8981\u6309\u5e38\u91cf\u529f\u80fd\u8fdb\u884c\u5f52\u7c7b\uff0c\u5206\u5f00\u7ef4\u62a4\u3002 \u8bf4\u660e \u5927\u800c\u5168\u7684\u5e38\u91cf\u7c7b\uff0c\u6742\u4e71\u65e0\u7ae0\uff0c\u4f7f\u7528\u67e5\u627e\u529f\u80fd\u624d\u80fd\u5b9a\u4f4d\u5230\u4fee\u6539\u7684\u5e38\u91cf\uff0c\u4e0d\u5229\u4e8e\u7406\u89e3\u548c\u7ef4\u62a4\u3002 \u6b63\u4f8b \u7f13\u5b58\u76f8\u5173\u5e38\u91cf\u653e\u5728\u7c7b CacheConsts \u4e0b\uff1b\u7cfb\u7edf\u914d\u7f6e\u76f8\u5173\u5e38\u91cf\u653e\u5728\u7c7b ConfigConst \u4e0b\u3002 \u3010\u63a8\u8350\u3011 \u5e38\u91cf\u7684\u590d\u7528\u5c42\u6b21\u6709\u4e94\u5c42\uff1a\u8de8\u5e94\u7528\u5171\u4eab\u5e38\u91cf\u3001\u5e94\u7528\u5185\u5171\u4eab\u5e38\u91cf\u3001\u5b50\u5de5\u7a0b\u5185\u5171\u4eab\u5e38\u91cf\u3001\u5305\u5185\u5171\u4eab\u5e38\u91cf\u3001\u7c7b\u5185\u5171\u4eab\u5e38\u91cf\u3002 \u8de8\u5e94\u7528\u5171\u4eab\u5e38\u91cf\uff1a\u653e\u7f6e\u5728\u4e8c\u65b9\u5e93\u4e2d\uff0c\u901a\u5e38\u662f client.jar \u4e2d\u7684 constant \u76ee\u5f55\u4e0b\u3002 \u5e94\u7528\u5185\u5171\u4eab\u5e38\u91cf\uff1a\u653e\u7f6e\u5728\u4e00\u65b9\u5e93\u4e2d\uff0c\u901a\u5e38\u662f\u5b50\u6a21\u5757\u4e2d\u7684 constant \u76ee\u5f55\u4e0b\u3002 \u53cd\u4f8b \u6613\u61c2\u53d8\u91cf\u4e5f\u8981\u7edf\u4e00\u5b9a\u4e49\u6210\u5e94\u7528\u5185\u5171\u4eab\u5e38\u91cf\uff0c\u4e24\u4f4d\u653b\u57ce\u5e08\u5728\u4e24\u4e2a\u7c7b\u4e2d\u5206\u522b\u5b9a\u4e49\u4e86\u8868\u793a\u201c\u662f\u201d\u7684\u53d8\u91cf\uff1a \u7c7b A \u4e2d\uff1a `public static final String YES = \"yes\"` ; \u7c7b B \u4e2d\uff1a `public static final String YES = \"y\"` ; `A.YES.equals(B.YES)` \uff0c\u9884\u671f\u662f `true` \uff0c\u4f46\u5b9e\u9645\u8fd4\u56de\u4e3a `false` \uff0c\u5bfc\u81f4\u7ebf\u4e0a\u95ee\u9898\u3002 \u5b50\u5de5\u7a0b\u5185\u90e8\u5171\u4eab\u5e38\u91cf\uff1a\u5373\u5728\u5f53\u524d\u5b50\u5de5\u7a0b\u7684 constant \u76ee\u5f55\u4e0b\u3002 \u5305\u5185\u5171\u4eab\u5e38\u91cf\uff1a\u5373\u5728\u5f53\u524d\u5305\u4e0b\u5355\u72ec\u7684 constant \u76ee\u5f55\u4e0b\u3002 \u7c7b\u5185\u5171\u4eab\u5e38\u91cf\uff1a\u76f4\u63a5\u5728\u7c7b\u5185\u90e8 private static final \u5b9a\u4e49 \u3010\u63a8\u8350\u3011 \u5982\u679c\u53d8\u91cf\u503c\u4ec5\u5728\u4e00\u4e2a\u56fa\u5b9a\u8303\u56f4\u5185\u53d8\u5316\u7528 enum \u7c7b\u578b\u6765\u5b9a\u4e49\u3002 \u5982\u679c\u5b58\u5728\u540d\u79f0\u4e4b\u5916\u7684\u5ef6\u4f38\u5c5e\u6027\u5e94\u4f7f\u7528 enum \u7c7b\u578b\uff0c\u4e0b\u9762\u6b63\u4f8b\u4e2d\u7684\u6570\u5b57\u5c31\u662f\u5ef6\u4f38\u4fe1\u606f\uff0c\u8868\u793a\u4e00\u5e74\u4e2d\u7684\u7b2c\u51e0\u4e2a\u5b63\u8282\u3002 \u6b63\u4f8b public enum SeasonEnum { SPRING ( 1 ), SUMMER ( 2 ), AUTUMN ( 3 ), WINTER ( 4 ); private int seq ; SeasonEnum ( int seq ){ this . seq = seq ; } } \u4ee3\u7801\u683c\u5f0f \u00b6 \u3010\u5f3a\u5236\u3011 \u5927\u62ec\u53f7\u7684\u4f7f\u7528\u7ea6\u5b9a\u3002\u5982\u679c\u662f\u5927\u62ec\u53f7\u5185\u4e3a\u7a7a\uff0c\u5219\u7b80\u6d01\u5730\u5199\u6210 {} \u5373\u53ef\uff0c\u4e0d\u9700\u8981\u6362\u884c\uff1b\u5982\u679c\u662f\u975e\u7a7a\u4ee3\u7801\u5757\u5219\uff1a \u5de6\u5927\u62ec\u53f7\u524d\u4e0d\u6362\u884c\u3002 \u5de6\u5927\u62ec\u53f7\u540e\u6362\u884c\u3002 \u53f3\u5927\u62ec\u53f7\u524d\u6362\u884c\u3002 \u53f3\u5927\u62ec\u53f7\u540e\u8fd8\u6709 else \u7b49\u4ee3\u7801\u5219\u4e0d\u6362\u884c\uff1b\u8868\u793a\u7ec8\u6b62\u7684\u53f3\u5927\u62ec\u53f7\u540e\u5fc5\u987b\u6362\u884c\u3002 \u3010\u5f3a\u5236\u3011 \u5de6\u5c0f\u62ec\u53f7\u548c\u5b57\u7b26\u4e4b\u95f4\u4e0d\u51fa\u73b0\u7a7a\u683c\uff1b\u540c\u6837\uff0c\u53f3\u5c0f\u62ec\u53f7\u548c\u5b57\u7b26\u4e4b\u95f4\u4e5f\u4e0d\u51fa\u73b0\u7a7a\u683c\uff1b\u800c\u5de6\u5927\u62ec\u53f7\u524d\u9700\u8981\u7a7a\u683c\u3002\u8be6\u89c1\u7b2c 5 \u6761\u4e0b\u65b9\u6b63\u4f8b\u63d0\u793a\u3002 \u53cd\u4f8b if (\u7a7a\u683c a == b \u7a7a\u683c) \u3010\u5f3a\u5236\u3011 if/for/while/switch/do \u7b49\u4fdd\u7559\u5b57\u4e0e\u62ec\u53f7\u4e4b\u95f4\u90fd\u5fc5\u987b\u52a0\u7a7a\u683c\u3002 \u3010\u5f3a\u5236\u3011 \u4efb\u4f55\u4e8c\u76ee\u3001\u4e09\u76ee\u8fd0\u7b97\u7b26\u7684\u5de6\u53f3\u4e24\u8fb9\u90fd\u9700\u8981\u52a0\u4e00\u4e2a\u7a7a\u683c\u3002 !!! note \"\u8bf4\u660e\" \u8fd0\u7b97\u7b26\u5305\u62ec\u8d4b\u503c\u8fd0\u7b97\u7b26 = \u3001\u903b\u8f91\u8fd0\u7b97\u7b26 && \u3001\u52a0\u51cf\u4e58\u9664\u7b26\u53f7\u7b49\u3002 \u3010\u5f3a\u5236\u3011 \u91c7\u7528 4 \u4e2a\u7a7a\u683c\u7f29\u8fdb\uff0c\u7981\u6b62\u4f7f\u7528 tab \u5b57\u7b26\u3002 !!! note \"\u8bf4\u660e\" \u5982\u679c\u4f7f\u7528 tab \u7f29\u8fdb\uff0c\u5fc5\u987b\u8bbe\u7f6e 1 \u4e2a tab \u4e3a 4 \u4e2a\u7a7a\u683c\u3002IDEA \u8bbe\u7f6e tab \u4e3a 4 \u4e2a\u7a7a\u683c\u65f6\uff0c\u8bf7\u52ff\u52fe\u9009 Use tab character \uff1b \u800c\u5728 eclipse \u4e2d\uff0c\u5fc5\u987b\u52fe\u9009 insert spaces for tabs \u3002 \u6b63\u4f8b\uff08\u6d89\u53ca1-5\u70b9\uff09 public static void main ( String [] args ) { // \u7f29\u8fdb 4 \u4e2a\u7a7a\u683c String say = \"hello\" ; // \u8fd0\u7b97\u7b26\u7684\u5de6\u53f3\u5fc5\u987b\u6709\u4e00\u4e2a\u7a7a\u683c int flag = 0 ; // \u5173\u952e\u8bcd if \u4e0e\u62ec\u53f7\u4e4b\u95f4\u5fc5\u987b\u6709\u4e00\u4e2a\u7a7a\u683c\uff0c\u62ec\u53f7\u5185\u7684 f \u4e0e\u5de6\u62ec\u53f7\uff0c0 \u4e0e\u53f3\u62ec\u53f7\u4e0d\u9700\u8981\u7a7a\u683c if ( flag == 0 ) { System . out . println ( say ); } // \u5de6\u5927\u62ec\u53f7\u524d\u52a0\u7a7a\u683c\u4e14\u4e0d\u6362\u884c\uff1b\u5de6\u5927\u62ec\u53f7\u540e\u6362\u884c if ( flag == 1 ) { System . out . println ( \"world\" ); // \u53f3\u5927\u62ec\u53f7\u524d\u6362\u884c\uff0c\u53f3\u5927\u62ec\u53f7\u540e\u6709 else\uff0c\u4e0d\u7528\u6362\u884c } else { System . out . println ( \"ok\" ); // \u5728\u53f3\u5927\u62ec\u53f7\u540e\u76f4\u63a5\u7ed3\u675f\uff0c\u5219\u5fc5\u987b\u6362\u884c } } \u3010\u5f3a\u5236\u3011 \u6ce8\u91ca\u7684\u53cc\u659c\u7ebf\u4e0e\u6ce8\u91ca\u5185\u5bb9\u4e4b\u95f4\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a\u7a7a\u683c\u3002 \u6b63\u4f8b // \u8fd9\u662f\u793a\u4f8b\u6ce8\u91ca\uff0c\u8bf7\u6ce8\u610f\u5728\u53cc\u659c\u7ebf\u4e4b\u540e\u6709\u4e00\u4e2a\u7a7a\u683c String ygb = new String (); \u3010\u5f3a\u5236\u3011 \u5355\u884c\u5b57\u7b26\u6570\u9650\u5236\u4e0d\u8d85\u8fc7 120 \u4e2a\uff0c\u8d85\u51fa\u9700\u8981\u6362\u884c\uff0c\u6362\u884c\u65f6\u9075\u5faa\u5982\u4e0b\u539f\u5219\uff1a \u7b2c\u4e8c\u884c\u76f8\u5bf9\u7b2c\u4e00\u884c\u7f29\u8fdb 4 \u4e2a\u7a7a\u683c\uff0c\u4ece\u7b2c\u4e09\u884c\u5f00\u59cb\uff0c\u4e0d\u518d\u7ee7\u7eed\u7f29\u8fdb\uff0c\u53c2\u8003\u793a\u4f8b\u3002 \u8fd0\u7b97\u7b26\u4e0e\u4e0b\u6587\u4e00\u8d77\u6362\u884c\u3002 \u65b9\u6cd5\u8c03\u7528\u7684\u70b9\u7b26\u53f7\u4e0e\u4e0b\u6587\u4e00\u8d77\u6362\u884c\u3002 \u65b9\u6cd5\u8c03\u7528\u4e2d\u7684\u591a\u4e2a\u53c2\u6570\u9700\u8981\u6362\u884c\u65f6\uff0c\u5728\u9017\u53f7\u540e\u8fdb\u884c\u3002 \u5728\u62ec\u53f7\u524d\u4e0d\u8981\u6362\u884c\uff0c\u89c1\u53cd\u4f8b\u3002 \u6b63\u4f8b StringBuffer sb = new StringBuffer (); // \u8d85\u8fc7 120 \u4e2a\u5b57\u7b26\u7684\u60c5\u51b5\u4e0b\uff0c\u6362\u884c\u7f29\u8fdb 4 \u4e2a\u7a7a\u683c\uff0c\u70b9\u53f7\u548c\u65b9\u6cd5\u540d\u79f0\u4e00\u8d77\u6362\u884c sb . append ( \"zi\" ). append ( \"xin\" )... . append ( \"huang\" )... . append ( \"huang\" )... . append ( \"huang\" ); \u53cd\u4f8b StringBuffer sb = new StringBuffer (); // \u8d85\u8fc7 120 \u4e2a\u5b57\u7b26\u7684\u60c5\u51b5\u4e0b\uff0c\u4e0d\u8981\u5728\u62ec\u53f7\u524d\u6362\u884c sb . append ( \"zi\" ). append ( \"xin\" )... append ( \"huang\" ); // \u53c2\u6570\u5f88\u591a\u7684\u65b9\u6cd5\u8c03\u7528\u53ef\u80fd\u8d85\u8fc7 120 \u4e2a\u5b57\u7b26\uff0c\u4e0d\u8981\u5728\u9017\u53f7\u524d\u6362\u884c method ( args1 , args2 , args3 , ... , argsX ); \u3010\u5f3a\u5236\u3011 \u65b9\u6cd5\u53c2\u6570\u5728\u5b9a\u4e49\u548c\u4f20\u5165\u65f6\uff0c\u591a\u4e2a\u53c2\u6570\u9017\u53f7\u540e\u8fb9\u5fc5\u987b\u52a0\u7a7a\u683c\u3002 \u6b63\u4f8b \u4e0b\u4f8b\u4e2d\u5b9e\u53c2\u7684 args1\uff0c\u540e\u8fb9\u5fc5\u987b\u8981\u6709\u4e00\u4e2a\u7a7a\u683c\u3002 method ( args1 , args2 , args3 ); \u3010\u5f3a\u5236\u3011 IDE \u7684 text file encoding \u8bbe\u7f6e\u4e3a UTF-8 ; IDE \u4e2d\u6587\u4ef6\u7684\u6362\u884c\u7b26\u4f7f\u7528 Unix \u683c\u5f0f\uff0c \u4e0d\u8981\u4f7f\u7528 Windows \u683c\u5f0f\u3002 \u3010\u63a8\u8350\u3011 \u5355\u4e2a\u65b9\u6cd5\u7684\u603b\u884c\u6570\u4e0d\u8d85\u8fc7 80 \u884c\u3002 \u8bf4\u660e \u5305\u62ec\u65b9\u6cd5\u7b7e\u540d\u3001\u7ed3\u675f\u53f3\u5927\u62ec\u53f7\u3001\u65b9\u6cd5\u5185\u4ee3\u7801\u3001\u6ce8\u91ca\u3001\u7a7a\u884c\u3001\u56de\u8f66\u53ca\u4efb\u4f55\u4e0d\u53ef\u89c1\u5b57\u7b26\u7684\u603b\u884c\u6570\u4e0d\u8d85\u8fc7 80 \u884c\u3002 \u6b63\u4f8b \u4ee3\u7801\u903b\u8f91\u5206\u6e05\u7ea2\u82b1\u548c\u7eff\u53f6\uff0c\u4e2a\u6027\u548c\u5171\u6027\uff0c\u7eff\u53f6\u903b\u8f91\u5355\u72ec\u51fa\u6765\u6210\u4e3a\u989d\u5916\u65b9\u6cd5\uff0c\u4f7f\u4e3b\u5e72\u4ee3\u7801\u66f4\u52a0\u6e05\u6670\uff1b\u5171\u6027\u903b\u8f91\u62bd\u53d6\u6210\u4e3a\u5171\u6027\u65b9\u6cd5\uff0c\u4fbf\u4e8e\u590d\u7528\u548c\u7ef4\u62a4\u3002 \u3010\u63a8\u8350\u3011 \u6ca1\u6709\u5fc5\u8981\u589e\u52a0\u82e5\u5e72\u7a7a\u683c\u6765\u4f7f\u67d0\u4e00\u884c\u7684\u5b57\u7b26\u4e0e\u4e0a\u4e00\u884c\u5bf9\u5e94\u4f4d\u7f6e\u7684\u5b57\u7b26\u5bf9\u9f50\u3002 \u6b63\u4f8b int one = 1 ; long two = 2L ; float three = 3F ; StringBuffer sb = new StringBuffer (); \u8bf4\u660e \u589e\u52a0 sb \u8fd9\u4e2a\u53d8\u91cf\uff0c\u5982\u679c\u9700\u8981\u5bf9\u9f50\uff0c\u5219\u7ed9 a\u3001b\u3001c \u90fd\u8981\u589e\u52a0\u51e0\u4e2a\u7a7a\u683c\uff0c\u5728\u53d8\u91cf\u6bd4\u8f83\u591a\u7684\u60c5\u51b5\u4e0b\uff0c\u662f\u975e\u5e38\u7d2f\u8d58\u7684\u4e8b\u60c5\u3002 \u3010\u63a8\u8350\u3011 \u4e0d\u540c\u903b\u8f91\u3001\u4e0d\u540c\u8bed\u4e49\u3001\u4e0d\u540c\u4e1a\u52a1\u7684\u4ee3\u7801\u4e4b\u95f4\u63d2\u5165\u4e00\u4e2a\u7a7a\u884c\u5206\u9694\u5f00\u6765\u4ee5\u63d0\u5347\u53ef\u8bfb\u6027\u3002 \u8bf4\u660e \u4efb\u4f55\u60c5\u5f62\uff0c\u6ca1\u6709\u5fc5\u8981\u63d2\u5165\u591a\u4e2a\u7a7a\u884c\u8fdb\u884c\u9694\u5f00\u3002 OOP\u89c4\u7ea6 \u00b6 \u3010\u5f3a\u5236\u3011 \u907f\u514d\u901a\u8fc7\u4e00\u4e2a\u7c7b\u7684\u5bf9\u8c61\u5f15\u7528\u8bbf\u95ee\u6b64\u7c7b\u7684\u9759\u6001\u53d8\u91cf\u6216\u9759\u6001\u65b9\u6cd5\uff0c\u65e0\u8c13\u589e\u52a0\u7f16\u8bd1\u5668\u89e3\u6790\u6210\u672c\uff0c\u76f4\u63a5\u7528\u7c7b\u540d\u6765\u8bbf\u95ee\u5373\u53ef\u3002 \u3010\u5f3a\u5236\u3011 \u6240\u6709\u7684\u8986\u5199\u65b9\u6cd5\uff0c\u5fc5\u987b\u52a0 @Override \u6ce8\u89e3\u3002 \u8bf4\u660e getObject() \u4e0e get0bject() \u7684\u95ee\u9898\u3002\u4e00\u4e2a\u662f\u5b57\u6bcd\u7684 O \uff0c\u4e00\u4e2a\u662f\u6570\u5b57\u7684 0 \uff0c\u52a0 @Override \u53ef\u4ee5\u51c6\u786e\u5224\u65ad\u662f\u5426\u8986\u76d6\u6210\u529f\u3002\u53e6\u5916\uff0c\u5982\u679c\u5728\u62bd\u8c61\u7c7b\u4e2d\u5bf9\u65b9\u6cd5\u7b7e\u540d\u8fdb\u884c\u4fee\u6539\uff0c\u5176\u5b9e\u73b0\u7c7b\u4f1a\u9a6c\u4e0a\u7f16\u8bd1\u62a5\u9519\u3002 \u3010\u5f3a\u5236\u3011 \u76f8\u540c\u53c2\u6570\u7c7b\u578b\uff0c\u76f8\u540c\u4e1a\u52a1\u542b\u4e49\uff0c\u624d\u53ef\u4ee5\u4f7f\u7528 Java \u7684\u53ef\u53d8\u53c2\u6570\uff0c\u907f\u514d\u4f7f\u7528 Object \u3002 \u8bf4\u660e \u53ef\u53d8\u53c2\u6570\u5fc5\u987b\u653e\u7f6e\u5728\u53c2\u6570\u5217\u8868\u7684\u6700\u540e\u3002\uff08\u63d0\u5021\u540c\u5b66\u4eec\u5c3d\u91cf\u4e0d\u7528\u53ef\u53d8\u53c2\u6570\u7f16\u7a0b\uff09 \u6b63\u4f8b public List < User > listUsers ( String type , Long ... ids ) {...} \u3010\u5f3a\u5236\u3011 \u5916\u90e8\u6b63\u5728\u8c03\u7528\u6216\u8005\u4e8c\u65b9\u5e93\u4f9d\u8d56\u7684\u63a5\u53e3\uff0c\u4e0d\u5141\u8bb8\u4fee\u6539\u65b9\u6cd5\u7b7e\u540d\uff0c\u907f\u514d\u5bf9\u63a5\u53e3\u8c03\u7528\u65b9\u4ea7\u751f\u5f71\u54cd\u3002\u63a5\u53e3\u8fc7\u65f6\u5fc5\u987b\u52a0 @Deprecated \u6ce8\u89e3\uff0c\u5e76\u6e05\u6670\u5730\u8bf4\u660e\u91c7\u7528\u7684\u65b0\u63a5\u53e3\u6216\u8005\u65b0\u670d\u52a1\u662f\u4ec0\u4e48\u3002 \u3010\u5f3a\u5236\u3011 \u4e0d\u80fd\u4f7f\u7528\u8fc7\u65f6\u7684\u7c7b\u6216\u65b9\u6cd5\u3002 \u8bf4\u660e java.net.URLDecoder \u4e2d\u7684\u65b9\u6cd5 decode(String encodeStr) \u8fd9\u4e2a\u65b9\u6cd5\u5df2\u7ecf\u8fc7\u65f6\uff0c\u5e94\u8be5\u4f7f\u7528\u53cc\u53c2\u6570 decode(String source, String encode) \u3002\u63a5\u53e3\u63d0\u4f9b\u65b9\u65e2\u7136\u660e\u786e\u662f\u8fc7\u65f6\u63a5\u53e3\uff0c\u90a3\u4e48\u6709\u4e49\u52a1\u540c\u65f6\u63d0\u4f9b\u65b0\u7684\u63a5\u53e3\uff1b\u4f5c\u4e3a\u8c03\u7528\u65b9\u6765\u8bf4\uff0c\u6709\u4e49\u52a1\u53bb\u8003\u8bc1\u8fc7\u65f6\u65b9\u6cd5\u7684\u65b0\u5b9e\u73b0\u662f\u4ec0\u4e48\u3002 \u3010\u5f3a\u5236\u3011 Object \u7684 equals \u65b9\u6cd5\u5bb9\u6613\u629b\u7a7a\u6307\u9488\u5f02\u5e38\uff0c\u5e94\u4f7f\u7528\u5e38\u91cf\u6216\u786e\u5b9a\u6709\u503c\u7684\u5bf9\u8c61\u6765\u8c03\u7528 equals \u3002 \u6b63\u4f8b \"test\" . equals ( object ); \u53cd\u4f8b object . equals ( \"test\" ); \u8bf4\u660e \u63a8\u8350\u4f7f\u7528 ` java . util . Objects # equals ` \uff08 ` JDK7 ` \u5f15\u5165\u7684\u5de5\u5177\u7c7b \uff09 \u3010\u5f3a\u5236\u3011 \u6240\u6709\u7684\u76f8\u540c\u7c7b\u578b\u7684\u5305\u88c5\u7c7b\u5bf9\u8c61\u4e4b\u95f4\u503c\u7684\u6bd4\u8f83\uff0c\u5168\u90e8\u4f7f\u7528 equals \u65b9\u6cd5\u6bd4\u8f83\u3002 \u8bf4\u660e \u5bf9\u4e8e Integer var = ? \u5728 -128 \u81f3 127 \u8303\u56f4\u5185\u7684\u8d4b\u503c\uff0c Integer \u5bf9\u8c61\u662f\u5728 IntegerCache.cache \u4ea7\u751f\uff0c\u4f1a\u590d\u7528\u5df2\u6709\u5bf9\u8c61\uff0c\u8fd9\u4e2a\u533a\u95f4\u5185\u7684 Integer \u503c\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 == \u8fdb\u884c\u5224\u65ad\uff0c\u4f46\u662f\u8fd9\u4e2a\u533a\u95f4\u4e4b\u5916\u7684\u6240\u6709\u6570\u636e\uff0c \u90fd\u4f1a\u5728\u5806\u4e0a\u4ea7\u751f\uff0c\u5e76\u4e0d\u4f1a\u590d\u7528\u5df2\u6709\u5bf9\u8c61\uff0c\u8fd9\u662f\u4e00\u4e2a\u5927\u5751\uff0c\u63a8\u8350\u4f7f\u7528 equals \u65b9\u6cd5\u8fdb\u884c\u5224\u65ad\u3002 \u5173\u4e8e\u57fa\u672c\u6570\u636e\u7c7b\u578b\u4e0e\u5305\u88c5\u6570\u636e\u7c7b\u578b\u7684\u4f7f\u7528\u6807\u51c6\u5982\u4e0b\uff1a \u3010\u5f3a\u5236\u3011 \u6240\u6709\u7684 POJO \u7c7b\u5c5e\u6027\u5fc5\u987b\u4f7f\u7528\u5305\u88c5\u6570\u636e\u7c7b\u578b\u3002 \u3010\u5f3a\u5236\u3011 RPC \u65b9\u6cd5\u7684\u8fd4\u56de\u503c\u548c\u53c2\u6570\u5fc5\u987b\u4f7f\u7528\u5305\u88c5\u6570\u636e\u7c7b\u578b\u3002 \u3010\u63a8\u8350\u3011 \u6240\u6709\u7684\u5c40\u90e8\u53d8\u91cf\u4f7f\u7528\u57fa\u672c\u6570\u636e\u7c7b\u578b\u3002 \u8bf4\u660e POJO \u7c7b\u5c5e\u6027\u6ca1\u6709\u521d\u503c\u662f\u63d0\u9192\u4f7f\u7528\u8005\u5728\u9700\u8981\u4f7f\u7528\u65f6\uff0c\u5fc5\u987b\u81ea\u5df1\u663e\u5f0f\u5730\u8fdb\u884c\u8d4b\u503c\uff0c\u4efb\u4f55 NPE \u95ee\u9898\uff0c\u6216\u8005\u5165\u5e93\u68c0\u67e5\uff0c\u90fd\u7531\u4f7f\u7528\u8005\u6765\u4fdd\u8bc1\u3002 \u6b63\u4f8b \u6570\u636e\u5e93\u7684\u67e5\u8be2\u7ed3\u679c\u53ef\u80fd\u662f null \uff0c\u56e0\u4e3a\u81ea\u52a8\u62c6\u7bb1\uff0c\u7528\u57fa\u672c\u6570\u636e\u7c7b\u578b\u63a5\u6536\u6709 NPE \u98ce\u9669\u3002 \u53cd\u4f8b \u6bd4\u5982\u663e\u793a\u6210\u4ea4\u603b\u989d\u6da8\u8dcc\u60c5\u51b5\uff0c\u5373\u6b63\u8d1f x% \uff0c x \u4e3a\u57fa\u672c\u6570\u636e\u7c7b\u578b\uff0c\u8c03\u7528\u7684 RPC \u670d\u52a1\uff0c\u8c03\u7528\u4e0d\u6210\u529f\u65f6\uff0c\u8fd4\u56de\u7684\u662f\u9ed8\u8ba4\u503c\uff0c\u9875\u9762\u663e\u793a\u4e3a 0% \uff0c\u8fd9\u662f\u4e0d\u5408\u7406\u7684\uff0c \u5e94\u8be5\u663e\u793a\u6210\u4e2d\u5212\u7ebf\u3002\u6240\u4ee5\u5305\u88c5\u6570\u636e\u7c7b\u578b\u7684 null \u503c\uff0c\u80fd\u591f\u8868\u793a\u989d\u5916\u7684\u4fe1\u606f\uff0c\u5982\uff1a\u8fdc\u7a0b\u8c03\u7528\u5931\u8d25\uff0c\u5f02\u5e38\u9000\u51fa\u3002 \u3010\u5f3a\u5236\u3011 \u5b9a\u4e49 DO/DTO/VO \u7b49 POJO \u7c7b\u65f6\uff0c\u4e0d\u8981\u8bbe\u5b9a\u4efb\u4f55\u5c5e\u6027\u9ed8\u8ba4\u503c\u3002 \u53cd\u4f8b POJO \u7c7b\u7684 gmtCreate \u9ed8\u8ba4\u503c\u4e3a new Date() \uff0c\u4f46\u662f\u8fd9\u4e2a\u5c5e\u6027\u5728\u6570\u636e\u63d0\u53d6\u65f6\u5e76\u6ca1\u6709\u7f6e\u5165\u5177\u4f53\u503c\uff0c\u5728\u66f4\u65b0\u5176\u5b83\u5b57\u6bb5\u65f6\u53c8\u9644\u5e26\u66f4\u65b0\u4e86\u6b64\u5b57\u6bb5\uff0c\u5bfc\u81f4\u521b\u5efa\u65f6\u95f4\u88ab\u4fee\u6539\u6210\u5f53\u524d\u65f6\u95f4\u3002 \u3010\u5f3a\u5236\u3011 \u5e8f\u5217\u5316\u7c7b\u65b0\u589e\u5c5e\u6027\u65f6\uff0c\u8bf7\u4e0d\u8981\u4fee\u6539 serialVersionUID \u5b57\u6bb5\uff0c\u907f\u514d\u53cd\u5e8f\u5217\u5931\u8d25\uff1b\u5982\u679c\u5b8c\u5168\u4e0d\u517c\u5bb9\u5347\u7ea7\uff0c\u907f\u514d\u53cd\u5e8f\u5217\u5316\u6df7\u4e71\uff0c \u90a3\u4e48\u8bf7\u4fee\u6539 serialVersionUID \u503c\u3002 \u8bf4\u660e \u6ce8\u610f serialVersionUID \u4e0d\u4e00\u81f4\u4f1a\u629b\u51fa\u5e8f\u5217\u5316\u8fd0\u884c\u65f6\u5f02\u5e38\u3002 \u3010\u5f3a\u5236\u3011 \u6784\u9020\u65b9\u6cd5\u91cc\u9762\u7981\u6b62\u52a0\u5165\u4efb\u4f55\u4e1a\u52a1\u903b\u8f91\uff0c\u5982\u679c\u6709\u521d\u59cb\u5316\u903b\u8f91\uff0c\u8bf7\u653e\u5728 init \u65b9\u6cd5\u4e2d\u3002 \u3010\u5f3a\u5236\u3011 POJO \u7c7b\u5fc5\u987b\u5199 toString \u65b9\u6cd5\u3002\u4f7f\u7528 IDE \u4e2d\u7684\u5de5\u5177\uff1asource > generate toString \u65f6\uff0c \u5982\u679c\u7ee7\u627f\u4e86\u53e6\u4e00\u4e2a POJO \u7c7b\uff0c\u6ce8\u610f\u5728\u524d\u9762\u52a0\u4e00\u4e0b super.toString \u3002 \u8bf4\u660e \u5728\u65b9\u6cd5\u6267\u884c\u629b\u51fa\u5f02\u5e38\u65f6\uff0c\u53ef\u4ee5\u76f4\u63a5\u8c03\u7528 POJO \u7684 toString() \u65b9\u6cd5\u6253\u5370\u5176\u5c5e\u6027\u503c\uff0c\u4fbf\u4e8e\u6392\u67e5\u95ee\u9898\u3002 \u3010\u5f3a\u5236\u3011 \u7981\u6b62\u5728 POJO \u7c7b\u4e2d\uff0c\u540c\u65f6\u5b58\u5728\u5bf9\u5e94\u5c5e\u6027 xxx \u7684 isXxx() \u548c getXxx() \u65b9\u6cd5\u3002 \u8bf4\u660e \u6846\u67b6\u5728\u8c03\u7528\u5c5e\u6027 xxx \u7684\u63d0\u53d6\u65b9\u6cd5\u65f6\uff0c\u5e76\u4e0d\u80fd\u786e\u5b9a\u54ea\u4e2a\u65b9\u6cd5\u4e00\u5b9a\u662f\u88ab\u4f18\u5148\u8c03\u7528\u5230\u3002 \u3010\u63a8\u8350\u3011 \u4f7f\u7528\u7d22\u5f15\u8bbf\u95ee\u7528 String \u7684 split \u65b9\u6cd5\u5f97\u5230\u7684\u6570\u7ec4\u65f6\uff0c\u9700\u505a\u6700\u540e\u4e00\u4e2a\u5206\u9694\u7b26\u540e\u6709\u65e0\u5185\u5bb9\u7684\u68c0\u67e5\uff0c \u5426\u5219\u4f1a\u6709\u629b IndexOutOfBoundsException \u7684\u98ce\u9669\u3002 \u8bf4\u660e String str = \"a,b,c,,\" ; String [] ary = str . split ( \",\" ); // \u9884\u671f\u5927\u4e8e 3\uff0c\u7ed3\u679c\u662f 3 System . out . println ( ary . length ); \u3010\u63a8\u8350\u3011 \u5f53\u4e00\u4e2a\u7c7b\u6709\u591a\u4e2a\u6784\u9020\u65b9\u6cd5\uff0c\u6216\u8005\u591a\u4e2a\u540c\u540d\u65b9\u6cd5\uff0c\u8fd9\u4e9b\u65b9\u6cd5\u5e94\u8be5\u6309\u987a\u5e8f\u653e\u7f6e\u5728\u4e00\u8d77\uff0c\u4fbf\u4e8e\u9605\u8bfb\uff0c\u6b64\u6761\u89c4\u5219\u4f18\u5148\u4e8e\u7b2c 16 \u6761\u89c4\u5219\u3002 \u3010\u63a8\u8350\u3011 \u7c7b\u5185\u65b9\u6cd5\u5b9a\u4e49\u7684\u987a\u5e8f\u4f9d\u6b21\u662f\uff1a\u516c\u6709\u65b9\u6cd5\u6216\u4fdd\u62a4\u65b9\u6cd5 > \u79c1\u6709\u65b9\u6cd5 > getter/setter \u65b9\u6cd5\u3002 \u8bf4\u660e \u516c\u6709\u65b9\u6cd5\u662f\u7c7b\u7684\u8c03\u7528\u8005\u548c\u7ef4\u62a4\u8005\u6700\u5173\u5fc3\u7684\u65b9\u6cd5\uff0c\u9996\u5c4f\u5c55\u793a\u6700\u597d\uff1b\u4fdd\u62a4\u65b9\u6cd5\u867d\u7136\u53ea\u662f\u5b50\u7c7b\u5173\u5fc3\uff0c\u4e5f\u53ef\u80fd\u662f\u201c\u6a21\u677f\u8bbe\u8ba1\u6a21\u5f0f\u201d\u4e0b\u7684\u6838\u5fc3\u65b9\u6cd5\uff1b \u800c\u79c1\u6709\u65b9\u6cd5\u5916\u90e8\u4e00\u822c\u4e0d\u9700\u8981\u7279\u522b\u5173\u5fc3\uff0c\u662f\u4e00\u4e2a\u9ed1\u76d2\u5b9e\u73b0\uff1b\u56e0\u4e3a\u627f\u8f7d\u7684\u4fe1\u606f\u4ef7\u503c\u8f83\u4f4e\uff0c\u6240\u6709 Service \u548c DAO \u7684 getter/setter \u65b9\u6cd5\u653e\u5728\u7c7b\u4f53\u6700\u540e\u3002 \u3010\u63a8\u8350\u3011 setter \u65b9\u6cd5\u4e2d\uff0c\u53c2\u6570\u540d\u79f0\u4e0e\u7c7b\u6210\u5458\u53d8\u91cf\u540d\u79f0\u4e00\u81f4\uff0cthis.\u6210\u5458\u540d = \u53c2\u6570\u540d\u3002\u5728 getter/setter \u65b9\u6cd5\u4e2d\uff0c\u4e0d\u8981\u589e\u52a0\u4e1a\u52a1\u903b\u8f91\uff0c\u589e\u52a0\u6392\u67e5\u95ee\u9898\u7684\u96be\u5ea6\u3002 \u53cd\u4f8b public Integer getData () { if ( condition ) { return this . data + 100 ; } else { return this . data - 100 ; } } \u3010\u63a8\u8350\u3011 \u5faa\u73af\u4f53\u5185\uff0c\u5b57\u7b26\u4e32\u7684\u8fde\u63a5\u65b9\u5f0f\uff0c\u4f7f\u7528 StringBuilder \u7684 append \u65b9\u6cd5\u8fdb\u884c\u6269\u5c55\u3002 \u8bf4\u660e \u4e0b\u4f8b\u4e2d\uff0c\u53cd\u7f16\u8bd1\u51fa\u7684\u5b57\u8282\u7801\u6587\u4ef6\u663e\u793a\u6bcf\u6b21\u5faa\u73af\u90fd\u4f1a new \u51fa\u4e00\u4e2a StringBuilder \u5bf9\u8c61\uff0c\u7136\u540e\u8fdb\u884c append \u64cd\u4f5c\uff0c \u6700\u540e\u901a\u8fc7 toString \u65b9\u6cd5\u8fd4\u56de String \u5bf9\u8c61\uff0c\u9020\u6210\u5185\u5b58\u8d44\u6e90\u6d6a\u8d39\u3002 String str = \"start\" ; for ( int i = 0 ; i < 100 ; i ++ ) { str = str + \"hello\" ; } \u3010\u63a8\u8350\u3011 final \u53ef\u4ee5\u58f0\u660e\u7c7b\u3001\u6210\u5458\u53d8\u91cf\u3001\u65b9\u6cd5\u3001\u4ee5\u53ca\u672c\u5730\u53d8\u91cf\uff0c\u4e0b\u5217\u60c5\u51b5\u4f7f\u7528 final \u5173\u952e\u5b57\uff1a \u4e0d\u5141\u8bb8\u88ab\u7ee7\u627f\u7684\u7c7b\uff0c\u5982\uff1a String \u7c7b\u3002 \u4e0d\u5141\u8bb8\u4fee\u6539\u5f15\u7528\u7684\u57df\u5bf9\u8c61\u3002 \u4e0d\u5141\u8bb8\u88ab\u91cd\u5199\u7684\u65b9\u6cd5\uff0c\u5982\uff1a POJO \u7c7b\u7684 setter \u65b9\u6cd5\u3002 \u4e0d\u5141\u8bb8\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u91cd\u65b0\u8d4b\u503c\u7684\u5c40\u90e8\u53d8\u91cf\u3002 \u907f\u514d\u4e0a\u4e0b\u6587\u91cd\u590d\u4f7f\u7528\u4e00\u4e2a\u53d8\u91cf\uff0c\u4f7f\u7528 final \u63cf\u8ff0\u53ef\u4ee5\u5f3a\u5236\u91cd\u65b0\u5b9a\u4e49\u4e00\u4e2a\u53d8\u91cf\uff0c\u65b9\u4fbf\u66f4\u597d\u5730\u8fdb\u884c\u91cd\u6784\u3002 \u3010\u63a8\u8350\u3011 \u614e\u7528 Object \u7684 clone \u65b9\u6cd5\u6765\u62f7\u8d1d\u5bf9\u8c61\u3002 \u8bf4\u660e \u5bf9\u8c61\u7684 clone \u65b9\u6cd5\u9ed8\u8ba4\u662f\u6d45\u62f7\u8d1d\uff0c\u82e5\u60f3\u5b9e\u73b0\u6df1\u62f7\u8d1d\u9700\u8981\u91cd\u5199 clone \u65b9\u6cd5\u5b9e\u73b0\u57df\u5bf9\u8c61\u7684\u6df1\u5ea6\u904d\u5386\u5f0f\u62f7\u8d1d\u3002 \u3010\u63a8\u8350\u3011 \u7c7b\u6210\u5458\u4e0e\u65b9\u6cd5\u8bbf\u95ee\u63a7\u5236\u4ece\u4e25\uff1a \u5982\u679c\u4e0d\u5141\u8bb8\u5916\u90e8\u76f4\u63a5\u901a\u8fc7 new \u6765\u521b\u5efa\u5bf9\u8c61\uff0c\u90a3\u4e48\u6784\u9020\u65b9\u6cd5\u5fc5\u987b\u662f private \u3002 \u5de5\u5177\u7c7b\u4e0d\u5141\u8bb8\u6709 public \u6216 default \u6784\u9020\u65b9\u6cd5\u3002 \u7c7b\u975e static \u6210\u5458\u53d8\u91cf\u5e76\u4e14\u4e0e\u5b50\u7c7b\u5171\u4eab\uff0c\u5fc5\u987b\u662f protected \u3002 \u7c7b\u975e static \u6210\u5458\u53d8\u91cf\u5e76\u4e14\u4ec5\u5728\u672c\u7c7b\u4f7f\u7528\uff0c\u5fc5\u987b\u662f private \u3002 \u7c7b static \u6210\u5458\u53d8\u91cf\u5982\u679c\u4ec5\u5728\u672c\u7c7b\u4f7f\u7528\uff0c\u5fc5\u987b\u662f private \u3002 \u82e5\u662f static \u6210\u5458\u53d8\u91cf\uff0c\u8003\u8651\u662f\u5426\u4e3a final \u3002 \u7c7b\u6210\u5458\u65b9\u6cd5\u53ea\u4f9b\u7c7b\u5185\u90e8\u8c03\u7528\uff0c\u5fc5\u987b\u662f private \u3002 \u7c7b\u6210\u5458\u65b9\u6cd5\u53ea\u5bf9\u7ee7\u627f\u7c7b\u516c\u5f00\uff0c\u90a3\u4e48\u9650\u5236\u4e3a protected \u3002 \u8bf4\u660e \u4efb\u4f55\u7c7b\u3001\u65b9\u6cd5\u3001\u53c2\u6570\u3001\u53d8\u91cf\uff0c\u4e25\u63a7\u8bbf\u95ee\u8303\u56f4\u3002\u8fc7\u4e8e\u5bbd\u6cdb\u7684\u8bbf\u95ee\u8303\u56f4\uff0c\u4e0d\u5229\u4e8e\u6a21\u5757\u89e3\u8026\u3002 \u601d\u8003 \u5982\u679c\u662f\u4e00\u4e2a private \u7684\u65b9\u6cd5\uff0c\u60f3\u5220\u9664\u5c31\u5220\u9664\uff0c\u53ef\u662f\u4e00\u4e2a public \u7684 Service \u6210\u5458\u65b9\u6cd5\u6216\u6210\u5458\u53d8\u91cf\uff0c\u5220\u9664\u4e00\u4e0b\uff0c\u4e0d\u5f97\u624b\u5fc3\u5192\u70b9\u6c57\u5417\uff1f\u53d8\u91cf\u50cf\u81ea\u5df1\u7684\u5c0f\u5b69\uff0c\u5c3d\u91cf\u5728\u81ea\u5df1\u7684\u89c6\u7ebf\u5185\uff0c\u53d8\u91cf\u4f5c\u7528\u57df\u592a\u5927\uff0c\u65e0\u9650\u5236\u7684\u5230\u5904\u8dd1\uff0c\u90a3\u4e48\u4f60\u4f1a\u62c5\u5fc3\u7684\u3002 \u96c6\u5408\u5904\u7406 \u00b6 \u3010\u5f3a\u5236\u3011 \u5173\u4e8e hashCode \u548c equals \u7684\u5904\u7406\uff0c\u9075\u5faa\u5982\u4e0b\u89c4\u5219\uff1a \u53ea\u8981\u91cd\u5199 equals \uff0c\u5c31\u5fc5\u987b\u91cd\u5199 hashCode \u3002 \u56e0\u4e3a Set \u5b58\u50a8\u7684\u662f\u4e0d\u91cd\u590d\u7684\u5bf9\u8c61\uff0c\u4f9d\u636e hashCode \u548c equals \u8fdb\u884c\u5224\u65ad\uff0c\u6240\u4ee5 Set \u5b58\u50a8\u7684\u5bf9\u8c61\u5fc5\u987b\u91cd\u5199\u8fd9\u4e24\u4e2a\u65b9\u6cd5\u3002 \u5982\u679c\u81ea\u5b9a\u4e49\u5bf9\u8c61\u4f5c\u4e3a Map \u7684\u952e\uff0c\u90a3\u4e48\u5fc5\u987b\u91cd\u5199 hashCode \u548c equals \u3002 \u8bf4\u660e String \u91cd\u5199\u4e86 hashCode \u548c equals \u65b9\u6cd5\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u975e\u5e38\u6109\u5feb\u5730\u4f7f\u7528 String \u5bf9\u8c61\u4f5c\u4e3a key \u6765\u4f7f\u7528\u3002 \u3010\u5f3a\u5236\u3011 ArrayList \u7684 subList \u7ed3\u679c\u4e0d\u53ef\u5f3a\u8f6c\u6210 ArrayList \uff0c\u5426\u5219\u4f1a\u629b\u51fa ClassCastException \u5f02\u5e38\uff0c\u5373 java.util.RandomAccessSubList cannot be cast to java.util.ArrayList \u3002 \u8bf4\u660e subList \u8fd4\u56de\u7684\u662f ArrayList \u7684\u5185\u90e8\u7c7b subList \uff0c\u5e76\u4e0d\u662f ArrayList \u800c\u662f ArrayList \u7684\u4e00\u4e2a\u89c6\u56fe\uff0c \u5bf9\u4e8e subList \u5b50\u5217\u8868\u7684\u6240\u6709\u64cd\u4f5c\u6700\u7ec8\u4f1a\u53cd\u6620\u5230\u539f\u5217\u8868\u4e0a\u3002 \u3010\u5f3a\u5236\u3011 \u5728 subList \u573a\u666f\u4e2d\uff0c\u9ad8\u5ea6\u6ce8\u610f\u5bf9\u539f\u96c6\u5408\u5143\u7d20\u7684\u589e\u52a0\u6216\u5220\u9664\uff0c \u5747\u4f1a\u5bfc\u81f4\u5b50\u5217\u8868\u7684\u904d\u5386\u3001\u589e\u52a0\u3001\u5220\u9664\u4ea7\u751f ConcurrentModificationException \u5f02\u5e38\u3002 \u3010\u5f3a\u5236\u3011 \u4f7f\u7528\u96c6\u5408\u8f6c\u6570\u7ec4\u7684\u65b9\u6cd5\uff0c\u5fc5\u987b\u4f7f\u7528\u96c6\u5408\u7684 toArray(T[] array) \uff0c\u4f20\u5165\u7684\u662f\u7c7b\u578b\u5b8c\u5168\u4e00\u6837\u7684\u6570\u7ec4\uff0c\u5927\u5c0f\u5c31\u662f list.size() \u3002 \u8bf4\u660e \u4f7f\u7528 toArray \u5e26\u53c2\u65b9\u6cd5\uff0c\u5165\u53c2\u5206\u914d\u7684\u6570\u7ec4\u7a7a\u95f4\u4e0d\u591f\u5927\u65f6\uff0c toArray \u65b9\u6cd5\u5185\u90e8\u5c06\u91cd\u65b0\u5206\u914d\u5185\u5b58\u7a7a\u95f4\uff0c\u5e76\u8fd4\u56de\u65b0\u6570\u7ec4\u5730\u5740\uff1b \u5982\u679c\u6570\u7ec4\u5143\u7d20\u4e2a\u6570\u5927\u4e8e\u5b9e\u9645\u6240\u9700\uff0c\u4e0b\u6807\u4e3a[ list.size() ] \u7684\u6570\u7ec4\u5143\u7d20\u5c06\u88ab\u7f6e\u4e3a null \uff0c\u5176\u5b83\u6570\u7ec4\u5143\u7d20\u4fdd\u6301\u539f\u503c\uff0c\u56e0\u6b64\u6700\u597d\u5c06\u65b9\u6cd5\u5165\u53c2\u6570\u7ec4\u5927\u5c0f\u5b9a\u4e49\u4e0e\u96c6\u5408\u5143\u7d20\u4e2a\u6570\u4e00\u81f4\u3002 \u6b63\u4f8b List < String > list = new ArrayList < String > ( 2 ); list . add ( \"guan\" ); list . add ( \"bao\" ); String [] array = new String [ list . size () ] ; array = list . toArray ( array ); \u53cd\u4f8b \u76f4\u63a5\u4f7f\u7528 toArray \u65e0\u53c2\u65b9\u6cd5\u5b58\u5728\u95ee\u9898\uff0c\u6b64\u65b9\u6cd5\u8fd4\u56de\u503c\u53ea\u80fd\u662f Object[] \u7c7b\uff0c \u82e5\u5f3a\u8f6c\u5176\u5b83\u7c7b\u578b\u6570\u7ec4\u5c06\u51fa\u73b0 ClassCastException \u9519\u8bef\u3002 \u3010\u5f3a\u5236\u3011 \u4f7f\u7528\u5de5\u5177\u7c7b Arrays.asList() \u628a\u6570\u7ec4\u8f6c\u6362\u6210\u96c6\u5408\u65f6\uff0c\u4e0d\u80fd\u4f7f\u7528\u5176\u4fee\u6539\u96c6\u5408\u76f8\u5173\u7684\u65b9\u6cd5\uff0c \u5b83\u7684 add/remove/clear \u65b9\u6cd5\u4f1a\u629b\u51fa UnsupportedOperationException \u5f02\u5e38\u3002 \u8bf4\u660e asList \u7684\u8fd4\u56de\u5bf9\u8c61\u662f\u4e00\u4e2a Arrays \u5185\u90e8\u7c7b\uff0c\u5e76\u6ca1\u6709\u5b9e\u73b0\u96c6\u5408\u7684\u4fee\u6539\u65b9\u6cd5\u3002 Arrays.asList \u4f53\u73b0\u7684\u662f\u9002\u914d\u5668\u6a21\u5f0f\uff0c\u53ea\u662f\u8f6c\u6362\u63a5\u53e3\uff0c\u540e\u53f0\u7684\u6570\u636e\u4ecd\u662f\u6570\u7ec4\u3002 String [] str = new String [] { \"you\" , \"wu\" }; List list = Arrays . asList ( str ); \u7b2c\u4e00\u79cd\u60c5\u51b5 \uff1a list . add ( \"yangguanbao\" ); \u8fd0\u884c\u65f6\u5f02\u5e38 \u3002 \u7b2c\u4e8c\u79cd\u60c5\u51b5 \uff1a str [ 0 ] = \"gujin\" ; \u90a3\u4e48 list . get ( 0 ) \u4e5f\u4f1a\u968f\u4e4b\u4fee\u6539 \u3002 \u3010\u5f3a\u5236\u3011 \u6cdb\u578b\u901a\u914d\u7b26 <? extends T> \u6765\u63a5\u6536\u8fd4\u56de\u7684\u6570\u636e\uff0c\u6b64\u5199\u6cd5\u7684\u6cdb\u578b\u96c6\u5408\u4e0d\u80fd\u4f7f\u7528 add \u65b9\u6cd5\uff0c \u800c <? super T> \u4e0d\u80fd\u4f7f\u7528 get \u65b9\u6cd5\uff0c\u4f5c\u4e3a\u63a5\u53e3\u8c03\u7528\u8d4b\u503c\u65f6\u6613\u51fa\u9519\u3002 \u8bf4\u660e \u6269\u5c55\u8bf4\u4e00\u4e0b PECS(Producer Extends Consumer Super) \u539f\u5219\uff1a \u7b2c\u4e00\u3001\u9891\u7e41\u5f80\u5916\u8bfb\u53d6\u5185\u5bb9\u7684\uff0c\u9002\u5408\u7528 <? extends T> \u3002 \u7b2c\u4e8c\u3001\u7ecf\u5e38\u5f80\u91cc\u63d2\u5165\u7684\uff0c\u9002\u5408\u7528 <? super T> \u3002 \u3010\u5f3a\u5236\u3011 \u4e0d\u8981\u5728 foreach \u5faa\u73af\u91cc\u8fdb\u884c\u5143\u7d20\u7684 remove/add \u64cd\u4f5c\u3002 remove \u5143\u7d20\u8bf7\u4f7f\u7528 Iterator \u65b9\u5f0f\uff0c \u5982\u679c\u5e76\u53d1\u64cd\u4f5c\uff0c\u9700\u8981\u5bf9 Iterator \u5bf9\u8c61\u52a0\u9501\u3002 \u6b63\u4f8b List < String > list = new ArrayList <> (); list . add ( \"1\" ); list . add ( \"2\" ); Iterator < String > iterator = list . iterator (); while ( iterator . hasNext ()) { String item = iterator . next (); if ( \u5220\u9664\u5143\u7d20\u7684\u6761\u4ef6 ) { iterator . remove (); } } \u53cd\u4f8b for ( String item : list ) { if ( \"1\" . equals ( item )) { list . remove ( item ); } } \u601d\u8003 \u4ee5\u4e0a\u4ee3\u7801\u7684\u6267\u884c\u7ed3\u679c\u80af\u5b9a\u4f1a\u51fa\u4e4e\u5927\u5bb6\u7684\u610f\u6599\uff0c\u90a3\u4e48\u8bd5\u4e00\u4e0b\u628a\u201c1\u201d\u6362\u6210\u201c2\u201d\uff0c\u4f1a\u662f\u540c\u6837\u7684\u7ed3\u679c\u5417\uff1f \u3010\u5f3a\u5236\u3011 \u5728 JDK7 \u7248\u672c\u53ca\u4ee5\u4e0a\uff0c Comparator \u5b9e\u73b0\u7c7b\u8981\u6ee1\u8db3\u5982\u4e0b\u4e09\u4e2a\u6761\u4ef6\uff0c \u4e0d\u7136 Arrays.sort \uff0c Collections.sort \u4f1a\u62a5 IllegalArgumentException \u5f02\u5e38\u3002 \u8bf4\u660e \u4e09\u4e2a\u6761\u4ef6\u5982\u4e0b\uff1a 1. x\uff0cy \u7684\u6bd4\u8f83\u7ed3\u679c\u548c y\uff0cx \u7684\u6bd4\u8f83\u7ed3\u679c\u76f8\u53cd\u3002 2. x>y \uff0c y>z \uff0c\u5219 x>z \u3002 3. x=y \uff0c\u5219 x \uff0c z \u6bd4\u8f83\u7ed3\u679c\u548c y \uff0c z \u6bd4\u8f83\u7ed3\u679c\u76f8\u540c\u3002 \u53cd\u4f8b \u4e0b\u4f8b\u4e2d\u6ca1\u6709\u5904\u7406\u76f8\u7b49\u7684\u60c5\u51b5\uff0c\u5b9e\u9645\u4f7f\u7528\u4e2d\u53ef\u80fd\u4f1a\u51fa\u73b0\u5f02\u5e38\uff1a new Comparator < Student > () { @Override public int compare ( Student o1 , Student o2 ) { return o1 . getId () > o2 . getId () ? 1 : - 1 ; } }; \u3010\u63a8\u8350\u3011 \u96c6\u5408\u6cdb\u578b\u5b9a\u4e49\u65f6\uff0c\u5728 JDK7 \u53ca\u4ee5\u4e0a\uff0c\u4f7f\u7528 diamond \u8bed\u6cd5\u6216\u5168\u7701\u7565\u3002 \u8bf4\u660e \u83f1\u5f62\u6cdb\u578b\uff0c\u5373 diamond \uff0c\u76f4\u63a5\u4f7f\u7528 <> \u6765\u6307\u4ee3\u524d\u8fb9\u5df2\u7ecf\u6307\u5b9a\u7684\u7c7b\u578b\u3002 \u6b63\u4f8b // <> diamond \u65b9\u5f0f HashMap < String , String > userCache = new HashMap <> ( 16 ); // \u5168\u7701\u7565\u65b9\u5f0f ArrayList < User > users = new ArrayList ( 10 ); \u3010\u63a8\u8350\u3011 \u96c6\u5408\u521d\u59cb\u5316\u65f6\uff0c\u6307\u5b9a\u96c6\u5408\u521d\u59cb\u503c\u5927\u5c0f\u3002 \u8bf4\u660e HashMap \u4f7f\u7528 HashMap(int initialCapacity) \u521d\u59cb\u5316\u3002 \u6b63\u4f8b initialCapacity = (\u9700\u8981\u5b58\u50a8\u7684\u5143\u7d20\u4e2a\u6570 / \u8d1f\u8f7d\u56e0\u5b50) + 1 \u3002\u6ce8\u610f\u8d1f\u8f7d\u56e0\u5b50\uff08\u5373 loader factor\uff09\u9ed8\u8ba4\u4e3a 0.75 \uff0c \u5982\u679c\u6682\u65f6\u65e0\u6cd5\u786e\u5b9a\u521d\u59cb\u503c\u5927\u5c0f\uff0c\u8bf7\u8bbe\u7f6e\u4e3a 16 \uff08\u5373\u9ed8\u8ba4\u503c\uff09\u3002 \u53cd\u4f8b HashMap \u9700\u8981\u653e\u7f6e 1024 \u4e2a\u5143\u7d20\uff0c\u7531\u4e8e\u6ca1\u6709\u8bbe\u7f6e\u5bb9\u91cf\u521d\u59cb\u5927\u5c0f\uff0c\u968f\u7740\u5143\u7d20\u4e0d\u65ad\u589e\u52a0\uff0c\u5bb9\u91cf 7 \u6b21\u88ab\u8feb\u6269\u5927\uff0c resize \u9700\u8981\u91cd\u5efa hash \u8868\uff0c\u4e25\u91cd\u5f71\u54cd\u6027\u80fd\u3002 \u3010\u63a8\u8350\u3011 \u4f7f\u7528 entrySet \u904d\u5386 Map \u7c7b\u96c6\u5408 KV \uff0c\u800c\u4e0d\u662f keySet \u65b9\u5f0f\u8fdb\u884c\u904d\u5386\u3002 \u8bf4\u660e keySet \u5176\u5b9e\u662f\u904d\u5386\u4e86 2 \u6b21\uff0c\u4e00\u6b21\u662f\u8f6c\u4e3a Iterator \u5bf9\u8c61\uff0c\u53e6\u4e00\u6b21\u662f\u4ece hashMap \u4e2d\u53d6\u51fa key \u6240\u5bf9\u5e94\u7684 value . \u800c entrySet \u53ea\u662f\u904d\u5386\u4e86\u4e00\u6b21\u5c31\u628a key \u548c value \u90fd\u653e\u5230\u4e86 entry \u4e2d\uff0c\u6548\u7387\u66f4\u9ad8\u3002 \u5982\u679c\u662f JDK8 \uff0c\u4f7f\u7528 Map.foreach \u65b9\u6cd5\u3002 \u6b63\u4f8b values() \u8fd4\u56de\u7684\u662f V \u503c\u96c6\u5408\uff0c\u662f\u4e00\u4e2a list \u96c6\u5408\u5bf9\u8c61\uff1b keySet() \u8fd4\u56de\u7684\u662f K \u503c\u96c6\u5408\uff0c\u662f\u4e00\u4e2a Set \u96c6\u5408\u5bf9\u8c61\uff1b entrySet() \u8fd4\u56de\u7684\u662f K-V \u503c\u7ec4\u5408\u96c6\u5408\u3002 \u3010\u63a8\u8350\u3011 \u9ad8\u5ea6\u6ce8\u610f Map \u7c7b\u96c6\u5408 K/V \u80fd\u4e0d\u80fd\u5b58\u50a8 null \u503c\u7684\u60c5\u51b5\uff0c\u5982\u4e0b\u8868\u683c\uff1a | \u96c6\u5408\u7c7b | Key (nullable) | Value(nullable) | Super | \u8bf4\u660e | | :-------------------| :------------------| :-----------------| :---------------| :------------------------| | Hashtable | :material-close: | :material-close: | Dictionary | \u7ebf\u7a0b\u5b89\u5168 | | ConcurrentHashMap | :material-close: | :material-close: | AbstractMap | \u9501\u5206\u6bb5\u6280\u672f\uff08JDK8:CAS\uff09 | | TreeMap | :material-close: | :material-check: | AbstractMap | \u7ebf\u7a0b\u4e0d\u5b89\u5168 | | HashMap | :material-check: | :material-check: | AbstractMap | \u7ebf\u7a0b\u4e0d\u5b89\u5168 | !!! fail \"\u53cd\u4f8b\" \u7531\u4e8e `HashMap` \u7684\u5e72\u6270\uff0c\u5f88\u591a\u4eba\u8ba4\u4e3a `ConcurrentHashMap` \u662f\u53ef\u4ee5\u7f6e\u5165 `null` \u503c\uff0c \u800c\u4e8b\u5b9e\u4e0a\uff0c\u5b58\u50a8 `null` \u503c\u65f6\u4f1a\u629b\u51fa `NPE` \u5f02\u5e38\u3002 \u3010\u53c2\u8003\u3011 \u5408\u7406\u5229\u7528\u597d\u96c6\u5408\u7684\u6709\u5e8f\u6027( sort )\u548c\u7a33\u5b9a\u6027( order )\uff0c\u907f\u514d\u96c6\u5408\u7684\u65e0\u5e8f\u6027( unsort )\u548c\u4e0d\u7a33\u5b9a\u6027( unorder) \u5e26\u6765\u7684\u8d1f\u9762\u5f71\u54cd\u3002 \u8bf4\u660e \u6709\u5e8f\u6027\u662f\u6307\u904d\u5386\u7684\u7ed3\u679c\u662f\u6309\u67d0\u79cd\u6bd4\u8f83\u89c4\u5219\u4f9d\u6b21\u6392\u5217\u7684\u3002\u7a33\u5b9a\u6027\u6307\u96c6\u5408\u6bcf\u6b21\u904d\u5386\u7684\u5143\u7d20\u6b21\u5e8f\u662f\u4e00\u5b9a\u7684\u3002\u5982\uff1a ArrayList \u662f order/unsort \uff1b HashMap \u662f unorder/unsort \uff1b TreeSet \u662f order/sort \u3002 \u3010\u53c2\u8003\u3011 \u5229\u7528 Set \u5143\u7d20\u552f\u4e00\u7684\u7279\u6027\uff0c\u53ef\u4ee5\u5feb\u901f\u5bf9\u4e00\u4e2a\u96c6\u5408\u8fdb\u884c\u53bb\u91cd\u64cd\u4f5c\uff0c\u907f\u514d\u4f7f\u7528 List \u7684 contains \u65b9\u6cd5\u8fdb\u884c\u904d\u5386\u3001\u5bf9\u6bd4\u3001\u53bb\u91cd\u64cd\u4f5c\u3002 \u5e76\u53d1\u5904\u7406 \u00b6 \u3010\u5f3a\u5236\u3011 \u83b7\u53d6\u5355\u4f8b\u5bf9\u8c61\u9700\u8981\u4fdd\u8bc1\u7ebf\u7a0b\u5b89\u5168\uff0c\u5176\u4e2d\u7684\u65b9\u6cd5\u4e5f\u8981\u4fdd\u8bc1\u7ebf\u7a0b\u5b89\u5168\u3002 !!! note \"\u8bf4\u660e\" \u8d44\u6e90\u9a71\u52a8\u7c7b\u3001\u5de5\u5177\u7c7b\u3001\u5355\u4f8b\u5de5\u5382\u7c7b\u90fd\u9700\u8981\u6ce8\u610f\u3002 \u3010\u5f3a\u5236\u3011 \u521b\u5efa\u7ebf\u7a0b\u6216\u7ebf\u7a0b\u6c60\u65f6\u8bf7\u6307\u5b9a\u6709\u610f\u4e49\u7684\u7ebf\u7a0b\u540d\u79f0\uff0c\u65b9\u4fbf\u51fa\u9519\u65f6\u56de\u6eaf\u3002 \u6b63\u4f8b public class TimerTaskThread extends Thread { public TimerTaskThread () { super . setName ( \"TimerTaskThread\" ); ... } } \u3010\u5f3a\u5236\u3011 \u7ebf\u7a0b\u8d44\u6e90\u5fc5\u987b\u901a\u8fc7\u7ebf\u7a0b\u6c60\u63d0\u4f9b\uff0c\u4e0d\u5141\u8bb8\u5728\u5e94\u7528\u4e2d\u81ea\u884c\u663e\u5f0f\u521b\u5efa\u7ebf\u7a0b\u3002 \u8bf4\u660e \u4f7f\u7528\u7ebf\u7a0b\u6c60\u7684\u597d\u5904\u662f\u51cf\u5c11\u5728\u521b\u5efa\u548c\u9500\u6bc1\u7ebf\u7a0b\u4e0a\u6240\u6d88\u8017\u7684\u65f6\u95f4\u4ee5\u53ca\u7cfb\u7edf\u8d44\u6e90\u7684\u5f00\u9500\uff0c\u89e3\u51b3\u8d44\u6e90\u4e0d\u8db3\u7684\u95ee\u9898\u3002\u5982\u679c\u4e0d\u4f7f\u7528\u7ebf\u7a0b\u6c60\uff0c\u6709\u53ef\u80fd\u9020\u6210\u7cfb\u7edf\u521b\u5efa\u5927\u91cf\u540c\u7c7b\u7ebf\u7a0b\u800c\u5bfc\u81f4\u6d88\u8017\u5b8c\u5185\u5b58\u6216\u8005\u201c\u8fc7\u5ea6\u5207\u6362\u201d\u7684\u95ee\u9898\u3002 \u3010\u5f3a\u5236\u3011 \u7ebf\u7a0b\u6c60\u4e0d\u5141\u8bb8\u4f7f\u7528 Executors \u53bb\u521b\u5efa\uff0c\u800c\u662f\u901a\u8fc7 ThreadPoolExecutor \u7684\u65b9\u5f0f\uff0c\u8fd9\u6837\u7684\u5904\u7406\u65b9\u5f0f\u8ba9\u5199\u7684\u540c\u5b66\u66f4\u52a0\u660e\u786e\u7ebf\u7a0b\u6c60\u7684\u8fd0\u884c\u89c4\u5219\uff0c\u89c4\u907f\u8d44\u6e90\u8017\u5c3d\u7684\u98ce\u9669\u3002 \u8bf4\u660e Executors \u8fd4\u56de\u7684\u7ebf\u7a0b\u6c60\u5bf9\u8c61\u7684\u5f0a\u7aef\u5982\u4e0b\uff1a 1. FixedThreadPool \u548c SingleThreadPool: \u5141\u8bb8\u7684\u8bf7\u6c42\u961f\u5217\u957f\u5ea6\u4e3a Integer.MAX_VALUE\uff0c\u53ef\u80fd\u4f1a\u5806\u79ef\u5927\u91cf\u7684\u8bf7\u6c42\uff0c\u4ece\u800c\u5bfc\u81f4 OOM\u3002 2. CachedThreadPool \u548c ScheduledThreadPool: \u5141\u8bb8\u7684\u521b\u5efa\u7ebf\u7a0b\u6570\u91cf\u4e3a Integer.MAX_VALUE\uff0c\u53ef\u80fd\u4f1a\u521b\u5efa\u5927\u91cf\u7684\u7ebf\u7a0b\uff0c\u4ece\u800c\u5bfc\u81f4 OOM\u3002 \u3010\u5f3a\u5236\u3011 SimpleDateFormat \u662f\u7ebf\u7a0b\u4e0d\u5b89\u5168\u7684\u7c7b\uff0c\u4e00\u822c\u4e0d\u8981\u5b9a\u4e49\u4e3a static \u53d8\u91cf\uff0c\u5982\u679c\u5b9a\u4e49\u4e3astatic\uff0c \u5fc5\u987b\u52a0\u9501\uff0c\u6216\u8005\u4f7f\u7528 DateUtils \u5de5\u5177\u7c7b\u3002 \u6b63\u4f8b private static final ThreadLocal < DateFormat > df = new ThreadLocal < DateFormat > () { @Override protected DateFormat initialValue () { return new SimpleDateFormat ( \"yyyy-MM-dd\" ); } }; \u8bf4\u660e \u5982\u679c\u662f JDK8 \u7684\u5e94\u7528\uff0c\u53ef\u4ee5\u4f7f\u7528 Instant \u4ee3\u66ff Date\uff0cLocalDateTime \u4ee3\u66ff Calendar\uff0c DateTimeFormatter \u4ee3\u66ff SimpleDateFormat\uff0c \u5b98\u65b9\u7ed9\u51fa\u7684\u89e3\u91ca\uff1asimple beautiful strong immutable thread-safe\u3002 \u3010\u5f3a\u5236\u3011 \u9ad8\u5e76\u53d1\u65f6\uff0c\u540c\u6b65\u8c03\u7528\u5e94\u8be5\u53bb\u8003\u91cf\u9501\u7684\u6027\u80fd\u635f\u8017\u3002\u80fd\u7528\u65e0\u9501\u6570\u636e\u7ed3\u6784\uff0c\u5c31\u4e0d\u8981\u7528\u9501\uff1b\u80fd\u9501\u533a\u5757\uff0c\u5c31\u4e0d\u8981\u9501\u6574\u4e2a\u65b9\u6cd5\u4f53\uff1b\u80fd\u7528\u5bf9\u8c61\u9501\uff0c\u5c31\u4e0d\u8981\u7528\u7c7b\u9501\u3002 \u8bf4\u660e \u5c3d\u53ef\u80fd\u4f7f\u52a0\u9501\u7684\u4ee3\u7801\u5757\u5de5\u4f5c\u91cf\u5c3d\u53ef\u80fd\u7684\u5c0f\uff0c\u907f\u514d\u5728\u9501\u4ee3\u7801\u5757\u4e2d\u8c03\u7528 RPC \u65b9\u6cd5\u3002 \u3010\u5f3a\u5236\u3011 \u5bf9\u591a\u4e2a\u8d44\u6e90\u3001\u6570\u636e\u5e93\u8868\u3001\u5bf9\u8c61\u540c\u65f6\u52a0\u9501\u65f6\uff0c\u9700\u8981\u4fdd\u6301\u4e00\u81f4\u7684\u52a0\u9501\u987a\u5e8f\uff0c\u5426\u5219\u53ef\u80fd\u4f1a\u9020\u6210\u6b7b\u9501\u3002 \u8bf4\u660e \u7ebf\u7a0b\u4e00\u9700\u8981\u5bf9\u8868 A\u3001B\u3001C \u4f9d\u6b21\u5168\u90e8\u52a0\u9501\u540e\u624d\u53ef\u4ee5\u8fdb\u884c\u66f4\u65b0\u64cd\u4f5c\uff0c\u90a3\u4e48\u7ebf\u7a0b\u4e8c\u7684\u52a0\u9501\u987a\u5e8f\u4e5f\u5fc5\u987b\u662f A\u3001B\u3001C\uff0c\u5426\u5219\u53ef\u80fd\u51fa\u73b0\u6b7b\u9501\u3002 \u3010\u5f3a\u5236\u3011 \u5e76\u53d1\u4fee\u6539\u540c\u4e00\u8bb0\u5f55\u65f6\uff0c\u907f\u514d\u66f4\u65b0\u4e22\u5931\uff0c\u9700\u8981\u52a0\u9501\u3002\u8981\u4e48\u5728\u5e94\u7528\u5c42\u52a0\u9501\uff0c\u8981\u4e48\u5728\u7f13\u5b58\u52a0\u9501\uff0c\u8981\u4e48\u5728\u6570\u636e\u5e93\u5c42\u4f7f\u7528\u4e50\u89c2\u9501\uff0c\u4f7f\u7528 version \u4f5c\u4e3a\u66f4\u65b0\u4f9d\u636e\u3002 \u8bf4\u660e \u5982\u679c\u6bcf\u6b21\u8bbf\u95ee\u51b2\u7a81\u6982\u7387\u5c0f\u4e8e 20%\uff0c\u63a8\u8350\u4f7f\u7528\u4e50\u89c2\u9501\uff0c\u5426\u5219\u4f7f\u7528\u60b2\u89c2\u9501\u3002\u4e50\u89c2\u9501\u7684\u91cd\u8bd5\u6b21\u6570\u4e0d\u5f97\u5c0f\u4e8e 3 \u6b21\u3002 \u3010\u5f3a\u5236\u3011 \u591a\u7ebf\u7a0b\u5e76\u884c\u5904\u7406\u5b9a\u65f6\u4efb\u52a1\u65f6\uff0cTimer \u8fd0\u884c\u591a\u4e2a TimeTask \u65f6\uff0c\u53ea\u8981\u5176\u4e2d\u4e4b\u4e00\u6ca1\u6709\u6355\u83b7\u629b\u51fa\u7684\u5f02\u5e38\uff0c\u5176\u5b83\u4efb\u52a1\u4fbf\u4f1a\u81ea\u52a8\u7ec8\u6b62\u8fd0\u884c\uff0c \u4f7f\u7528 ScheduledExecutorService \u5219\u6ca1\u6709\u8fd9\u4e2a\u95ee\u9898\u3002 \u3010\u63a8\u8350\u3011 \u4f7f\u7528 CountDownLatch \u8fdb\u884c\u5f02\u6b65\u8f6c\u540c\u6b65\u64cd\u4f5c\uff0c\u6bcf\u4e2a\u7ebf\u7a0b\u9000\u51fa\u524d\u5fc5\u987b\u8c03\u7528 countDown\u65b9\u6cd5\uff0c\u7ebf\u7a0b\u6267\u884c\u4ee3\u7801\u6ce8\u610f catch \u5f02\u5e38\uff0c \u786e\u4fdd countDown \u65b9\u6cd5\u88ab\u6267\u884c\u5230\uff0c\u907f\u514d\u4e3b\u7ebf\u7a0b\u65e0\u6cd5\u6267\u884c\u81f3 await \u65b9\u6cd5\uff0c\u76f4\u5230\u8d85\u65f6\u624d\u8fd4\u56de\u7ed3\u679c\u3002 \u8bf4\u660e \u6ce8\u610f\uff0c\u5b50\u7ebf\u7a0b\u629b\u51fa\u5f02\u5e38\u5806\u6808\uff0c\u4e0d\u80fd\u5728\u4e3b\u7ebf\u7a0b try-catch \u5230\u3002 \u3010\u63a8\u8350\u3011 \u907f\u514d Random \u5b9e\u4f8b\u88ab\u591a\u7ebf\u7a0b\u4f7f\u7528\uff0c\u867d\u7136\u5171\u4eab\u8be5\u5b9e\u4f8b\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\uff0c\u4f46\u4f1a\u56e0\u7ade\u4e89\u540c\u4e00 seed \u5bfc\u81f4\u7684\u6027\u80fd\u4e0b\u964d\u3002 \u8bf4\u660e Random \u5b9e\u4f8b\u5305\u62ec java.util.Random \u7684\u5b9e\u4f8b\u6216\u8005 Math.random()\u7684\u65b9\u5f0f\u3002 \u6b63\u4f8b \u5728 JDK7 \u4e4b\u540e\uff0c\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 API ThreadLocalRandom\uff0c\u800c\u5728 JDK7 \u4e4b\u524d\uff0c\u9700\u8981\u7f16\u7801\u4fdd\u8bc1\u6bcf\u4e2a\u7ebf\u7a0b\u6301\u6709\u4e00\u4e2a\u5b9e\u4f8b\u3002 \u3010\u63a8\u8350\u3011 \u5728\u5e76\u53d1\u573a\u666f\u4e0b\uff0c\u901a\u8fc7\u53cc\u91cd\u68c0\u67e5\u9501\uff08double-checked locking\uff09\u5b9e\u73b0\u5ef6\u8fdf\u521d\u59cb\u5316\u7684\u4f18\u5316\u95ee\u9898\u9690\u60a3(\u53ef\u53c2\u8003 The \"Double-Checked Locking is Broken\" Declaration)\uff0c\u63a8\u8350\u89e3\u51b3\u65b9\u6848\u4e2d\u8f83\u4e3a\u7b80\u5355\u4e00\u79cd\uff08\u9002\u7528\u4e8e JDK5 \u53ca\u4ee5\u4e0a\u7248\u672c\uff09\uff0c \u5c06\u76ee\u6807\u5c5e\u6027\u58f0\u660e\u4e3a volatile \u578b\u3002 \u53cd\u4f8b class LazyInitDemo { private Helper helper = null ; public Helper getHelper () { if ( helper == null ) synchronized ( this ) { if ( helper == null ) helper = new Helper (); } return helper ; } // other methods and fields... } \u3010\u53c2\u8003\u3011 volatile \u89e3\u51b3\u591a\u7ebf\u7a0b\u5185\u5b58\u4e0d\u53ef\u89c1\u95ee\u9898\u3002\u5bf9\u4e8e\u4e00\u5199\u591a\u8bfb\uff0c\u662f\u53ef\u4ee5\u89e3\u51b3\u53d8\u91cf\u540c\u6b65\u95ee\u9898\uff0c\u4f46\u662f\u5982\u679c\u591a\u5199\uff0c\u540c\u6837\u65e0\u6cd5\u89e3\u51b3\u7ebf\u7a0b\u5b89\u5168\u95ee\u9898\u3002 \u5982\u679c\u662f count++\u64cd\u4f5c\uff0c\u4f7f\u7528\u5982\u4e0b\u7c7b\u5b9e\u73b0\uff1aAtomicInteger count = new AtomicInteger(); count.addAndGet(1); \u5982\u679c\u662f JDK8\uff0c\u63a8\u8350\u4f7f\u7528 LongAdder \u5bf9\u8c61\uff0c\u6bd4 AtomicLong \u6027\u80fd\u66f4\u597d\uff08\u51cf\u5c11\u4e50\u89c2\u9501\u7684\u91cd\u8bd5\u6b21\u6570\uff09\u3002 \u3010\u53c2\u8003\u3011 HashMap \u5728\u5bb9\u91cf\u4e0d\u591f\u8fdb\u884c resize \u65f6\u7531\u4e8e\u9ad8\u5e76\u53d1\u53ef\u80fd\u51fa\u73b0\u6b7b\u94fe\uff0c\u5bfc\u81f4 CPU \u98d9\u5347\uff0c\u5728\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u53ef\u4ee5\u4f7f\u7528\u5176\u5b83\u6570\u636e\u7ed3\u6784\u6216\u52a0\u9501\u6765\u89c4\u907f\u6b64\u98ce\u9669\u3002 \u3010\u53c2\u8003\u3011 ThreadLocal \u65e0\u6cd5\u89e3\u51b3\u5171\u4eab\u5bf9\u8c61\u7684\u66f4\u65b0\u95ee\u9898\uff0cThreadLocal \u5bf9\u8c61\u5efa\u8bae\u4f7f\u7528 static\u4fee\u9970\u3002\u8fd9\u4e2a\u53d8\u91cf\u662f\u9488\u5bf9\u4e00\u4e2a\u7ebf\u7a0b\u5185\u6240\u6709\u64cd\u4f5c\u5171\u4eab\u7684\uff0c \u6240\u4ee5\u8bbe\u7f6e\u4e3a\u9759\u6001\u53d8\u91cf\uff0c\u6240\u6709\u6b64\u7c7b\u5b9e\u4f8b\u5171\u4eab\u6b64\u9759\u6001\u53d8\u91cf \uff0c\u4e5f\u5c31\u662f\u8bf4\u5728\u7c7b\u7b2c\u4e00\u6b21\u88ab\u4f7f\u7528\u65f6\u88c5\u8f7d\uff0c\u53ea\u5206\u914d\u4e00\u5757\u5b58\u50a8\u7a7a\u95f4\uff0c\u6240\u6709\u6b64\u7c7b\u7684\u5bf9\u8c61(\u53ea\u8981\u662f\u8fd9\u4e2a\u7ebf\u7a0b\u5185\u5b9a\u4e49\u7684)\u90fd\u53ef\u4ee5\u64cd\u63a7\u8fd9\u4e2a\u53d8\u91cf. \u63a7\u5236\u8bed\u53e5 \u00b6 \u3010\u5f3a\u5236\u3011 \u5728\u4e00\u4e2a switch \u5757\u5185\uff0c\u6bcf\u4e2a case \u8981\u4e48\u901a\u8fc7 break/return \u7b49\u6765\u7ec8\u6b62\uff0c\u8981\u4e48\u6ce8\u91ca\u8bf4\u660e\u7a0b\u5e8f\u5c06\u7ee7\u7eed\u6267\u884c\u5230\u54ea\u4e00\u4e2a case \u4e3a\u6b62\uff1b\u5728\u4e00\u4e2a switch \u5757\u5185\uff0c\u90fd\u5fc5\u987b\u5305\u542b\u4e00\u4e2a default \u8bed\u53e5\u5e76\u4e14\u653e\u5728\u6700\u540e\uff0c\u5373\u4f7f\u7a7a\u4ee3\u7801\u3002 \u3010\u5f3a\u5236\u3011 \u5728 if/else/for/while/do \u8bed\u53e5\u4e2d\u5fc5\u987b\u4f7f\u7528\u5927\u62ec\u53f7\u3002\u5373\u4f7f\u53ea\u6709\u4e00\u884c\u4ee3\u7801\uff0c\u907f\u514d\u91c7\u7528\u5355\u884c\u7684\u7f16\u7801\u65b9\u5f0f\uff1a if (condition) statements ; \u3010\u5f3a\u5236\u3011 \u5728\u9ad8\u5e76\u53d1\u573a\u666f\u4e2d\uff0c\u907f\u514d\u4f7f\u7528\u201d\u7b49\u4e8e\u201d\u5224\u65ad\u4f5c\u4e3a\u4e2d\u65ad\u6216\u9000\u51fa\u7684\u6761\u4ef6\u3002 \u8bf4\u660e \u5982\u679c\u5e76\u53d1\u63a7\u5236\u6ca1\u6709\u5904\u7406\u597d\uff0c\u5bb9\u6613\u4ea7\u751f\u7b49\u503c\u5224\u65ad\u88ab\u201c\u51fb\u7a7f\u201d\u7684\u60c5\u51b5\uff0c\u4f7f\u7528\u5927\u4e8e\u6216\u5c0f\u4e8e\u7684\u533a\u95f4\u5224\u65ad\u6761\u4ef6\u6765\u4ee3\u66ff\u3002 \u53cd\u4f8b \u5224\u65ad\u5269\u4f59\u5956\u54c1\u6570\u91cf\u7b49\u4e8e 0 \u65f6\uff0c\u7ec8\u6b62\u53d1\u653e\u5956\u54c1\uff0c\u4f46\u56e0\u4e3a\u5e76\u53d1\u5904\u7406\u9519\u8bef\u5bfc\u81f4\u5956\u54c1\u6570\u91cf\u77ac\u95f4\u53d8\u6210\u4e86\u8d1f\u6570\uff0c\u8fd9\u6837\u7684\u8bdd\uff0c\u6d3b\u52a8\u65e0\u6cd5\u7ec8\u6b62\u3002 \u3010\u63a8\u8350\u3011 \u8868\u8fbe\u5f02\u5e38\u7684\u5206\u652f\u65f6\uff0c\u5c11\u7528 if-else \u65b9\u5f0f\uff0c\u8fd9\u79cd\u65b9\u5f0f\u53ef\u4ee5\u6539\u5199\u6210\uff1a if ( condition ) { ... return obj ; } // \u63a5\u7740\u5199 else \u7684\u4e1a\u52a1\u903b\u8f91\u4ee3\u7801; \u8bf4\u660e \u5982\u679c\u975e\u5f97\u4f7f\u7528 if()...else if()...else... \u65b9\u5f0f\u8868\u8fbe\u903b\u8f91\uff0c \u3010\u5f3a\u5236\u3011 \u907f\u514d\u540e\u7eed\u4ee3\u7801\u7ef4\u62a4\u56f0\u96be\uff0c\u8bf7\u52ff\u8d85\u8fc7 3 \u5c42\u3002 \u6b63\u4f8b \u8d85\u8fc7 3 \u5c42\u7684 if-else \u7684\u903b\u8f91\u5224\u65ad\u4ee3\u7801\u53ef\u4ee5\u4f7f\u7528\u536b\u8bed\u53e5\u3001\u7b56\u7565\u6a21\u5f0f\u3001\u72b6\u6001\u6a21\u5f0f\u7b49\u6765\u5b9e\u73b0\uff0c\u5176\u4e2d\u536b\u8bed\u53e5\u793a\u4f8b\u5982\u4e0b\uff1a public void today () { if ( isBusy ()) { System . out . println ( \u201c change time . \u201d ); return ; } if ( isFree ()) { System . out . println ( \u201c go to travel . \u201d ); return ; } System . out . println ( \u201c stay at home to learn Alibaba Java Coding Guidelines . \u201d ); return ; } \u3010\u63a8\u8350\u3011 \u9664\u5e38\u7528\u65b9\u6cd5\uff08\u5982 getXxx/isXxx \uff09\u7b49\u5916\uff0c\u4e0d\u8981\u5728\u6761\u4ef6\u5224\u65ad\u4e2d\u6267\u884c\u5176\u5b83\u590d\u6742\u7684\u8bed\u53e5\uff0c\u5c06\u590d\u6742\u903b\u8f91\u5224\u65ad\u7684\u7ed3\u679c\u8d4b\u503c\u7ed9\u4e00\u4e2a\u6709\u610f\u4e49\u7684\u5e03\u5c14\u53d8\u91cf\u540d\uff0c\u4ee5\u63d0\u9ad8\u53ef\u8bfb\u6027\u3002 \u8bf4\u660e \u5f88\u591a if \u8bed\u53e5\u5185\u7684\u903b\u8f91\u76f8\u5f53\u590d\u6742\uff0c\u9605\u8bfb\u8005\u9700\u8981\u5206\u6790\u6761\u4ef6\u8868\u8fbe\u5f0f\u7684\u6700\u7ec8\u7ed3\u679c\uff0c\u624d\u80fd\u660e\u786e\u4ec0\u4e48\u6837\u7684\u6761\u4ef6\u6267\u884c\u4ec0\u4e48\u6837\u7684\u8bed\u53e5\uff0c\u90a3\u4e48\uff0c\u5982\u679c\u9605\u8bfb\u8005\u5206\u6790\u903b\u8f91\u8868\u8fbe\u5f0f\u9519\u8bef\u5462\uff1f \u6b63\u4f8b // \u4f2a\u4ee3\u7801\u5982\u4e0b final boolean existed = ( file . open ( fileName , \"w\" ) != null ) && (...) || (...); if ( existed ) { ... } \u53cd\u4f8b if (( file . open ( fileName , \"w\" ) != null ) && (...) || (...)) { \u3010\u63a8\u8350\u3011 \u5faa\u73af\u4f53\u4e2d\u7684\u8bed\u53e5\u8981\u8003\u91cf\u6027\u80fd\uff0c\u4ee5\u4e0b\u64cd\u4f5c\u5c3d\u91cf\u79fb\u81f3\u5faa\u73af\u4f53\u5916\u5904\u7406\uff0c\u5982\u5b9a\u4e49\u5bf9\u8c61\u3001\u53d8\u91cf\u3001\u83b7\u53d6\u6570\u636e\u5e93\u8fde\u63a5\uff0c\u8fdb\u884c\u4e0d\u5fc5\u8981\u7684 try-catch \u64cd\u4f5c \uff08\u8fd9\u4e2a try-catch \u662f\u5426\u53ef\u4ee5\u79fb\u81f3\u5faa\u73af\u4f53\u5916\uff09\u3002 \u3010\u63a8\u8350\u3011 \u907f\u514d\u91c7\u7528\u53d6\u53cd\u903b\u8f91\u8fd0\u7b97\u7b26\u3002 \u8bf4\u660e \u53d6\u53cd\u903b\u8f91\u4e0d\u5229\u4e8e\u5feb\u901f\u7406\u89e3\uff0c\u5e76\u4e14\u53d6\u53cd\u903b\u8f91\u5199\u6cd5\u5fc5\u7136\u5b58\u5728\u5bf9\u5e94\u7684\u6b63\u5411\u903b\u8f91\u5199\u6cd5\u3002 \u6b63\u4f8b \u4f7f\u7528 if (x < 628) \u6765\u8868\u8fbe x \u5c0f\u4e8e 628\u3002 \u53cd\u4f8b \u4f7f\u7528 if (!(x >= 628)) \u6765\u8868\u8fbe x \u5c0f\u4e8e 628\u3002 \u3010\u63a8\u8350\u3011 \u63a5\u53e3\u5165\u53c2\u4fdd\u62a4\uff0c\u8fd9\u79cd\u573a\u666f\u5e38\u89c1\u7684\u662f\u7528\u4f5c\u6279\u91cf\u64cd\u4f5c\u7684\u63a5\u53e3\u3002 \u3010\u53c2\u8003\u3011 \u4e0b\u5217\u60c5\u5f62\uff0c\u9700\u8981\u8fdb\u884c\u53c2\u6570\u6821\u9a8c\uff1a \u8c03\u7528\u9891\u6b21\u4f4e\u7684\u65b9\u6cd5\u3002 \u6267\u884c\u65f6\u95f4\u5f00\u9500\u5f88\u5927\u7684\u65b9\u6cd5\u3002\u6b64\u60c5\u5f62\u4e2d\uff0c\u53c2\u6570\u6821\u9a8c\u65f6\u95f4\u51e0\u4e4e\u53ef\u4ee5\u5ffd\u7565\u4e0d\u8ba1\uff0c\u4f46\u5982\u679c\u56e0\u4e3a\u53c2\u6570\u9519\u8bef\u5bfc\u81f4\u4e2d\u95f4\u6267\u884c\u56de\u9000\uff0c\u6216\u8005\u9519\u8bef\uff0c\u90a3\u5f97\u4e0d\u507f\u5931\u3002 \u9700\u8981\u6781\u9ad8\u7a33\u5b9a\u6027\u548c\u53ef\u7528\u6027\u7684\u65b9\u6cd5\u3002 \u5bf9\u5916\u63d0\u4f9b\u7684\u5f00\u653e\u63a5\u53e3\uff0c\u4e0d\u7ba1\u662f RPC/API/HTTP \u63a5\u53e3\u3002 \u654f\u611f\u6743\u9650\u5165\u53e3\u3002 \u3010\u53c2\u8003\u3011 \u4e0b\u5217\u60c5\u5f62\uff0c\u4e0d\u9700\u8981\u8fdb\u884c\u53c2\u6570\u6821\u9a8c\uff1a \u6781\u6709\u53ef\u80fd\u88ab\u5faa\u73af\u8c03\u7528\u7684\u65b9\u6cd5\u3002\u4f46\u5728\u65b9\u6cd5\u8bf4\u660e\u91cc\u5fc5\u987b\u6ce8\u660e\u5916\u90e8\u53c2\u6570\u68c0\u67e5\u8981\u6c42\u3002 \u5e95\u5c42\u8c03\u7528\u9891\u5ea6\u6bd4\u8f83\u9ad8\u7684\u65b9\u6cd5\u3002\u6bd5\u7adf\u662f\u50cf\u7eaf\u51c0\u6c34\u8fc7\u6ee4\u7684\u6700\u540e\u4e00\u9053\uff0c\u53c2\u6570\u9519\u8bef\u4e0d\u592a\u53ef\u80fd\u5230\u5e95\u5c42\u624d\u4f1a\u66b4\u9732\u95ee\u9898\u3002\u4e00\u822c DAO \u5c42\u4e0e Service \u5c42\u90fd\u5728\u540c\u4e00\u4e2a\u5e94\u7528\u4e2d\uff0c \u90e8\u7f72\u5728\u540c\u4e00\u53f0\u670d\u52a1\u5668\u4e2d\uff0c\u6240\u4ee5 DAO \u7684\u53c2\u6570\u6821\u9a8c\uff0c\u53ef\u4ee5\u7701\u7565\u3002 \u88ab\u58f0\u660e\u6210 private \u53ea\u4f1a\u88ab\u81ea\u5df1\u4ee3\u7801\u6240\u8c03\u7528\u7684\u65b9\u6cd5\uff0c\u5982\u679c\u80fd\u591f\u786e\u5b9a\u8c03\u7528\u65b9\u6cd5\u7684\u4ee3\u7801\u4f20\u5165\u53c2\u6570\u5df2\u7ecf\u505a\u8fc7\u68c0\u67e5\u6216\u8005\u80af\u5b9a\u4e0d\u4f1a\u6709\u95ee\u9898\uff0c\u6b64\u65f6\u53ef\u4ee5\u4e0d\u6821\u9a8c\u53c2\u6570\u3002 \u6ce8\u91ca\u89c4\u7ea6 \u00b6 \u3010\u5f3a\u5236\u3011 \u7c7b\u3001\u7c7b\u5c5e\u6027\u3001\u7c7b\u65b9\u6cd5\u7684\u6ce8\u91ca\u5fc5\u987b\u4f7f\u7528 Javadoc \u89c4\u8303\uff0c\u4f7f\u7528/**\u5185\u5bb9*/\u683c\u5f0f\uff0c\u4e0d\u5f97\u4f7f\u7528// xxx \u65b9\u5f0f\u3002 \u8bf4\u660e \u5728 IDE \u7f16\u8f91\u7a97\u53e3\u4e2d\uff0cJavadoc \u65b9\u5f0f\u4f1a\u63d0\u793a\u76f8\u5173\u6ce8\u91ca\uff0c\u751f\u6210 Javadoc \u53ef\u4ee5\u6b63\u786e\u8f93\u51fa\u76f8\u5e94\u6ce8\u91ca\uff1b \u5728 IDE \u4e2d\uff0c\u5de5\u7a0b\u8c03\u7528\u65b9\u6cd5\u65f6\uff0c\u4e0d\u8fdb\u5165\u65b9\u6cd5\u5373\u53ef\u60ac\u6d6e\u63d0\u793a\u65b9\u6cd5\u3001\u53c2\u6570\u3001\u8fd4\u56de\u503c\u7684\u610f\u4e49\uff0c\u63d0\u9ad8\u9605\u8bfb\u6548\u7387\u3002 \u3010\u5f3a\u5236\u3011 \u65b9\u6cd5\u5185\u90e8\u5355\u884c\u6ce8\u91ca\uff0c\u5728\u88ab\u6ce8\u91ca\u8bed\u53e5\u4e0a\u65b9\u53e6\u8d77\u4e00\u884c\uff0c\u4f7f\u7528 // \u6ce8\u91ca\u3002\u65b9\u6cd5\u5185\u90e8\u591a\u884c\u6ce8\u91ca\u4f7f\u7528 /**/ \u6ce8\u91ca\uff0c\u6ce8\u610f\u4e0e\u4ee3\u7801\u5bf9\u9f50\u3002 \u3010\u63a8\u8350\u3011 \u4e0e\u5176 \u201c\u534a\u540a\u5b50\u201d \u82f1\u6587\u6765\u6ce8\u91ca\uff0c\u4e0d\u5982\u7528\u4e2d\u6587\u6ce8\u91ca\u628a\u95ee\u9898\u8bf4\u6e05\u695a\u3002\u4e13\u6709\u540d\u8bcd\u4e0e\u5173\u952e\u5b57\u4fdd\u6301\u82f1\u6587\u539f\u6587\u5373\u53ef\u3002 \u53cd\u4f8b \u201cTCP \u8fde\u63a5\u8d85\u65f6\u201d \u89e3\u91ca\u6210 \u201c\u4f20\u8f93\u63a7\u5236\u534f\u8bae\u8fde\u63a5\u8d85\u65f6\u201d\uff0c\u7406\u89e3\u53cd\u800c\u8d39\u8111\u7b4b\u3002 \u3010\u63a8\u8350\u3011 \u4ee3\u7801\u4fee\u6539\u7684\u540c\u65f6\uff0c\u6ce8\u91ca\u4e5f\u8981\u8fdb\u884c\u76f8\u5e94\u7684\u4fee\u6539\uff0c\u5c24\u5176\u662f\u53c2\u6570\u3001\u8fd4\u56de\u503c\u3001\u5f02\u5e38\u3001\u6838\u5fc3\u903b\u8f91\u7b49\u7684\u4fee\u6539\u3002 \u8bf4\u660e \u4ee3\u7801\u4e0e\u6ce8\u91ca\u66f4\u65b0\u4e0d\u540c\u6b65\uff0c\u5c31\u50cf\u8def\u7f51\u4e0e\u5bfc\u822a\u8f6f\u4ef6\u66f4\u65b0\u4e0d\u540c\u6b65\u4e00\u6837\uff0c\u5982\u679c\u5bfc\u822a\u8f6f\u4ef6\u4e25\u91cd\u6ede\u540e\uff0c\u5c31\u5931\u53bb\u4e86\u5bfc\u822a\u7684\u610f\u4e49\u3002 \u3010\u53c2\u8003\u3011 \u8c28\u614e\u6ce8\u91ca\u6389\u4ee3\u7801\u3002\u5728\u4e0a\u65b9\u8be6\u7ec6\u8bf4\u660e\uff0c\u800c\u4e0d\u662f\u7b80\u5355\u5730\u6ce8\u91ca\u6389\u3002\u5982\u679c\u65e0\u7528\uff0c\u5219\u5220\u9664\u3002 \u8bf4\u660e \u4ee3\u7801\u88ab\u6ce8\u91ca\u6389\u6709\u4e24\u79cd\u53ef\u80fd\u6027\uff1a 1. \u540e\u7eed\u4f1a\u6062\u590d\u6b64\u6bb5\u4ee3\u7801\u903b\u8f91\u3002 2. \u6c38\u4e45\u4e0d\u7528\u3002\u524d\u8005\u5982\u679c\u6ca1\u6709\u5907\u6ce8\u4fe1\u606f\uff0c\u96be\u4ee5\u77e5\u6653\u6ce8\u91ca\u52a8\u673a\u3002\u540e\u8005\u5efa\u8bae\u76f4\u63a5\u5220\u6389\uff08\u4ee3\u7801\u4ed3\u5e93\u4fdd\u5b58\u4e86\u5386\u53f2\u4ee3\u7801\uff09\u3002 \u3010\u53c2\u8003\u3011 \u5bf9\u4e8e\u6ce8\u91ca\u7684\u8981\u6c42\uff1a| \u80fd\u591f\u51c6\u786e\u53cd\u5e94\u8bbe\u8ba1\u601d\u60f3\u548c\u4ee3\u7801\u903b\u8f91\uff1b \u80fd\u591f\u63cf\u8ff0\u4e1a\u52a1\u542b\u4e49\uff0c\u4f7f\u522b\u7684\u7a0b\u5e8f\u5458\u80fd\u591f\u8fc5\u901f\u4e86\u89e3\u5230\u4ee3\u7801\u80cc\u540e\u7684\u4fe1\u606f\u3002\u5b8c\u5168\u6ca1\u6709\u6ce8\u91ca\u7684\u5927\u6bb5\u4ee3\u7801\u5bf9\u4e8e\u9605\u8bfb\u8005\u5f62\u540c\u5929\u4e66\uff0c\u6ce8\u91ca\u662f\u7ed9\u81ea\u5df1\u770b\u7684\uff0c\u5373\u4f7f\u9694\u5f88\u957f\u65f6\u95f4\uff0c\u4e5f\u80fd\u6e05\u6670\u7406\u89e3\u5f53\u65f6\u7684\u601d\u8def\uff1b\u6ce8\u91ca\u4e5f\u662f\u7ed9\u7ee7\u4efb\u8005\u770b\u7684\uff0c\u4f7f\u5176\u80fd\u591f\u5feb\u901f\u63a5\u66ff\u81ea\u5df1\u7684\u5de5\u4f5c\u3002 \u3010\u53c2\u8003\u3011 \u597d\u7684\u547d\u540d\u3001\u4ee3\u7801\u7ed3\u6784\u662f\u81ea\u89e3\u91ca\u7684\uff0c\u6ce8\u91ca\u529b\u6c42\u7cbe\u7b80\u51c6\u786e\u3001\u8868\u8fbe\u5230\u4f4d\u3002\u907f\u514d\u51fa\u73b0\u6ce8\u91ca\u7684\u4e00\u4e2a\u6781\u7aef\uff1a\u8fc7\u591a\u8fc7\u6ee5\u7684\u6ce8\u91ca\uff0c\u4ee3\u7801\u7684\u903b\u8f91\u4e00\u65e6\u4fee\u6539\uff0c\u4fee\u6539\u6ce8\u91ca\u662f\u76f8\u5f53\u5927\u7684\u8d1f\u62c5\u3002 \u53cd\u4f8b // put elephant into fridge put(elephant, fridge); \u65b9\u6cd5\u540d put \uff0c \u52a0\u4e0a\u4e24\u4e2a\u6709\u610f\u4e49\u7684\u53d8\u91cf\u540d elephant \u548c fridge \uff0c \u5df2\u7ecf\u8bf4\u660e\u4e86\u8fd9\u662f\u5728\u5e72\u4ec0\u4e48 \uff0c \u8bed\u4e49\u6e05\u6670\u7684\u4ee3\u7801\u4e0d\u9700\u8981\u989d\u5916\u7684\u6ce8\u91ca \u3002 \u3010\u53c2\u8003\u3011 \u7279\u6b8a\u6ce8\u91ca\u6807\u8bb0\uff0c\u8bf7\u6ce8\u660e\u6807\u8bb0\u4eba\u4e0e\u6807\u8bb0\u65f6\u95f4\u3002\u6ce8\u610f\u53ca\u65f6\u5904\u7406\u8fd9\u4e9b\u6807\u8bb0\uff0c\u901a\u8fc7\u6807\u8bb0\u626b\u63cf\uff0c\u7ecf\u5e38\u6e05\u7406\u6b64\u7c7b\u6807\u8bb0\u3002\u7ebf\u4e0a\u6545\u969c\u6709\u65f6\u5019\u5c31\u662f\u6765\u6e90\u4e8e\u8fd9\u4e9b\u6807\u8bb0\u5904\u7684\u4ee3\u7801\u3002 \u5f85\u529e\u4e8b\u5b9c\uff08 TODO \uff09:\uff08 \u6807\u8bb0\u4eba\uff0c\u6807\u8bb0\u65f6\u95f4\uff0c[\u9884\u8ba1\u5904\u7406\u65f6\u95f4]\uff09 \u8868\u793a\u9700\u8981\u5b9e\u73b0\uff0c\u4f46\u76ee\u524d\u8fd8\u672a\u5b9e\u73b0\u7684\u529f\u80fd\u3002\u8fd9\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a Javadoc \u7684\u6807\u7b7e\uff0c\u76ee\u524d\u7684 Javadoc \u8fd8\u6ca1\u6709\u5b9e\u73b0\uff0c\u4f46\u5df2\u7ecf\u88ab\u5e7f\u6cdb\u4f7f\u7528\u3002\u53ea\u80fd\u5e94\u7528\u4e8e\u7c7b\uff0c \u63a5\u53e3\u548c\u65b9\u6cd5\uff08\u56e0\u4e3a\u5b83\u662f\u4e00\u4e2a Javadoc \u6807\u7b7e\uff09\u3002 \u9519\u8bef\uff0c\u4e0d\u80fd\u5de5\u4f5c\uff08 FIXME \uff09:\uff08\u6807\u8bb0\u4eba\uff0c\u6807\u8bb0\u65f6\u95f4\uff0c[\u9884\u8ba1\u5904\u7406\u65f6\u95f4]\uff09 \u5728\u6ce8\u91ca\u4e2d\u7528 FIXME \u6807\u8bb0\u67d0\u4ee3\u7801\u662f\u9519\u8bef\u7684\uff0c\u800c\u4e14\u4e0d\u80fd\u5de5\u4f5c\uff0c\u9700\u8981\u53ca\u65f6\u7ea0\u6b63\u7684\u60c5\u51b5\u3002 \u5176\u5b83 \u00b6 \u3010\u5f3a\u5236\u3011 \u5728\u4f7f\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u65f6\uff0c\u5229\u7528\u597d\u5176\u9884\u7f16\u8bd1\u529f\u80fd\uff0c\u53ef\u4ee5\u6709\u6548\u52a0\u5feb\u6b63\u5219\u5339\u914d\u901f\u5ea6\u3002\u8bf4\u660e\uff1a\u4e0d\u8981\u5728\u65b9\u6cd5\u4f53\u5185\u5b9a\u4e49\uff1a Pattern pattern = Pattern.compile (\u201c\u89c4\u5219\u201d); \u3010\u5f3a\u5236\u3011 \u6ce8\u610f Math.random() \u8fd9\u4e2a\u65b9\u6cd5\u8fd4\u56de\u662f double \u7c7b\u578b\uff0c\u6ce8\u610f\u53d6\u503c\u7684\u8303\u56f4 0\u2264x<1 \uff08\u80fd\u591f\u53d6\u5230\u96f6\u503c\uff0c\u6ce8\u610f\u9664\u96f6\u5f02\u5e38\uff09\uff0c \u5982\u679c\u60f3\u83b7\u53d6\u6574\u6570\u7c7b\u578b\u7684\u968f\u673a\u6570\uff0c\u4e0d\u8981\u5c06 x \u653e\u5927 10 \u7684\u82e5\u5e72\u500d\u7136\u540e\u53d6\u6574\uff0c\u76f4\u63a5\u4f7f\u7528 Random \u5bf9\u8c61\u7684 nextInt \u6216\u8005 nextLong \u65b9\u6cd5\u3002 \u3010\u5f3a\u5236\u3011 \u83b7\u53d6\u5f53\u524d\u6beb\u79d2\u6570 System.currentTimeMillis() ; \u800c\u4e0d\u662f new Date().getTime() ; \u8bf4\u660e \u5982\u679c\u60f3\u83b7\u53d6\u66f4\u52a0\u7cbe\u786e\u7684\u7eb3\u79d2\u7ea7\u65f6\u95f4\u503c\uff0c\u4f7f\u7528 System.nanoTime() \u7684\u65b9\u5f0f\u3002\u5728 JDK8 \u4e2d\uff0c\u9488\u5bf9\u7edf\u8ba1\u65f6\u95f4\u7b49\u573a\u666f\uff0c \u63a8\u8350\u4f7f\u7528 Instant \u7c7b\u3002 \u3010\u63a8\u8350\u3011 \u4e0d\u8981\u5728\u89c6\u56fe\u6a21\u677f\u4e2d\u52a0\u5165\u4efb\u4f55\u590d\u6742\u7684\u903b\u8f91\u3002 \u8bf4\u660e\uff1a\u6839\u636e MVC \u7406\u8bba\uff0c\u89c6\u56fe\u7684\u804c\u8d23\u662f\u5c55\u793a\uff0c\u4e0d\u8981\u62a2\u6a21\u578b\u548c\u63a7\u5236\u5668\u7684\u6d3b\u3002 \u3010\u63a8\u8350\u3011 \u4efb\u4f55\u6570\u636e\u7ed3\u6784\u7684\u6784\u9020\u6216\u521d\u59cb\u5316\uff0c\u90fd\u5e94\u6307\u5b9a\u5927\u5c0f\uff0c\u907f\u514d\u6570\u636e\u7ed3\u6784\u65e0\u9650\u589e\u957f\u5403\u5149\u5185\u5b58\u3002 \u3010\u63a8\u8350\u3011 \u53ca\u65f6\u6e05\u7406\u4e0d\u518d\u4f7f\u7528\u7684\u4ee3\u7801\u6bb5\u6216\u914d\u7f6e\u4fe1\u606f\u3002 \u8bf4\u660e \u5982\u5bf9\u4e8e\u5783\u573e\u4ee3\u7801\u6216\u8fc7\u65f6\u914d\u7f6e\uff0c\u575a\u51b3\u6e05\u7406\u5e72\u51c0\uff0c\u907f\u514d\u7a0b\u5e8f\u8fc7\u5ea6\u81c3\u80bf\uff0c\u4ee3\u7801\u5197\u4f59\u3002 \u6b63\u4f8b \u5bf9\u4e8e\u6682\u65f6\u88ab\u6ce8\u91ca\u6389\uff0c\u540e\u7eed\u53ef\u80fd\u6062\u590d\u4f7f\u7528\u7684\u4ee3\u7801\u7247\u65ad\uff0c\u5728\u6ce8\u91ca\u4ee3\u7801\u4e0a\u65b9\uff0c\u7edf\u4e00\u89c4\u5b9a\u4f7f\u7528\u4e09\u4e2a\u659c\u6760( /// )\u6765\u8bf4\u660e \u6ce8\u91ca\u6389\u4ee3\u7801\u7684\u7406\u7531\u3002 \u5f02\u5e38\u65e5\u5fd7 \u00b6 \u5f02\u5e38\u5904\u7406 \u00b6 \u3010\u5f3a\u5236\u3011 Java \u7c7b\u5e93\u4e2d\u5b9a\u4e49\u7684\u53ef\u4ee5\u901a\u8fc7\u9884\u68c0\u67e5\u65b9\u5f0f\u89c4\u907f\u7684 RuntimeException \u5f02\u5e38\u4e0d\u5e94\u8be5\u901a\u8fc7catch \u7684\u65b9\u5f0f\u6765\u5904\u7406\uff0c \u6bd4\u5982\uff1aNullPointerException\uff0cIndexOutOfBoundsException \u7b49\u7b49\u3002 \u8bf4\u660e \u65e0\u6cd5\u901a\u8fc7\u9884\u68c0\u67e5\u7684\u5f02\u5e38\u9664\u5916\uff0c\u6bd4\u5982\uff0c\u5728\u89e3\u6790\u5b57\u7b26\u4e32\u5f62\u5f0f\u7684\u6570\u5b57\u65f6\uff0c\u4e0d\u5f97\u4e0d\u901a\u8fc7 catchNumberFormatException \u6765\u5b9e\u73b0\u3002 \u6b63\u4f8b if ( obj != null ) {...} \u53cd\u4f8b try { obj . method (); } catch ( NullPointerException e ) { \u2026 } \u3010\u5f3a\u5236\u3011 \u5f02\u5e38\u4e0d\u8981\u7528\u6765\u505a\u6d41\u7a0b\u63a7\u5236\uff0c\u6761\u4ef6\u63a7\u5236\u3002 \u8bf4\u660e \u5f02\u5e38\u8bbe\u8ba1\u7684\u521d\u8877\u662f\u89e3\u51b3\u7a0b\u5e8f\u8fd0\u884c\u4e2d\u7684\u5404\u79cd\u610f\u5916\u60c5\u51b5\uff0c\u4e14\u5f02\u5e38\u7684\u5904\u7406\u6548\u7387\u6bd4\u6761\u4ef6\u5224\u65ad\u65b9\u5f0f\u8981\u4f4e\u5f88\u591a\u3002 \u3010\u5f3a\u5236\u3011 catch \u65f6\u8bf7\u5206\u6e05\u7a33\u5b9a\u4ee3\u7801\u548c\u975e\u7a33\u5b9a\u4ee3\u7801\uff0c\u7a33\u5b9a\u4ee3\u7801\u6307\u7684\u662f\u65e0\u8bba\u5982\u4f55\u4e0d\u4f1a\u51fa\u9519\u7684\u4ee3\u7801\u3002\u5bf9\u4e8e\u975e\u7a33\u5b9a\u4ee3\u7801\u7684 catch \u5c3d\u53ef\u80fd\u8fdb\u884c\u533a\u5206\u5f02\u5e38\u7c7b\u578b\uff0c\u518d\u505a\u5bf9\u5e94\u7684\u5f02\u5e38\u5904\u7406\u3002 \u8bf4\u660e \u5bf9\u5927\u6bb5\u4ee3\u7801\u8fdb\u884c try-catch\uff0c\u4f7f\u7a0b\u5e8f\u65e0\u6cd5\u6839\u636e\u4e0d\u540c\u7684\u5f02\u5e38\u505a\u51fa\u6b63\u786e\u7684\u5e94\u6fc0\u53cd\u5e94\uff0c\u4e5f\u4e0d\u5229\u4e8e\u5b9a\u4f4d\u95ee\u9898\uff0c\u8fd9\u662f\u4e00\u79cd\u4e0d\u8d1f\u8d23\u4efb\u7684\u8868\u73b0\u3002 \u6b63\u4f8b \u7528\u6237\u6ce8\u518c\u7684\u573a\u666f\u4e2d\uff0c\u5982\u679c\u7528\u6237\u8f93\u5165\u975e\u6cd5\u5b57\u7b26\uff0c\u6216\u7528\u6237\u540d\u79f0\u5df2\u5b58\u5728\uff0c\u6216\u7528\u6237\u8f93\u5165\u5bc6\u7801\u8fc7\u4e8e\u7b80\u5355\uff0c\u5728\u7a0b\u5e8f\u4e0a\u4f5c\u51fa\u5206\u95e8\u522b\u7c7b\u7684\u5224\u65ad\uff0c\u5e76\u63d0\u793a\u7ed9\u7528\u6237\u3002 \u3010\u5f3a\u5236\u3011 \u6355\u83b7\u5f02\u5e38\u662f\u4e3a\u4e86\u5904\u7406\u5b83\uff0c\u4e0d\u8981\u6355\u83b7\u4e86\u5374\u4ec0\u4e48\u90fd\u4e0d\u5904\u7406\u800c\u629b\u5f03\u4e4b\uff0c\u5982\u679c\u4e0d\u60f3\u5904\u7406\u5b83\uff0c\u8bf7\u5c06\u8be5\u5f02\u5e38\u629b\u7ed9\u5b83\u7684\u8c03\u7528\u8005\u3002\u6700\u5916\u5c42\u7684\u4e1a\u52a1\u4f7f\u7528\u8005\uff0c\u5fc5\u987b\u5904\u7406\u5f02\u5e38\uff0c\u5c06\u5176\u8f6c\u5316\u4e3a\u7528\u6237\u53ef\u4ee5\u7406\u89e3\u7684\u5185\u5bb9\u3002 \u3010\u5f3a\u5236\u3011 \u6709 try \u5757\u653e\u5230\u4e86\u4e8b\u52a1\u4ee3\u7801\u4e2d\uff0ccatch \u5f02\u5e38\u540e\uff0c\u5982\u679c\u9700\u8981\u56de\u6eda\u4e8b\u52a1\uff0c\u4e00\u5b9a\u8981\u6ce8\u610f\u624b\u52a8\u56de\u6eda\u4e8b\u52a1\u3002 \u3010\u5f3a\u5236\u3011 finally \u5757\u5fc5\u987b\u5bf9\u8d44\u6e90\u5bf9\u8c61\u3001\u6d41\u5bf9\u8c61\u8fdb\u884c\u5173\u95ed\uff0c\u6709\u5f02\u5e38\u4e5f\u8981\u505a try-catch\u3002 \u8bf4\u660e \u5982\u679c JDK7 \u53ca\u4ee5\u4e0a\uff0c\u53ef\u4ee5\u4f7f\u7528 try-with-resources \u65b9\u5f0f\u3002 \u3010\u5f3a\u5236\u3011 \u4e0d\u8981\u5728 finally \u5757\u4e2d\u4f7f\u7528 return\u3002 \u8bf4\u660e finally \u5757\u4e2d\u7684 return \u8fd4\u56de\u540e\u65b9\u6cd5\u7ed3\u675f\u6267\u884c\uff0c\u4e0d\u4f1a\u518d\u6267\u884c try \u5757\u4e2d\u7684 return \u8bed\u53e5\u3002 \u3010\u5f3a\u5236\u3011 \u6355\u83b7\u5f02\u5e38\u4e0e\u629b\u5f02\u5e38\uff0c\u5fc5\u987b\u662f\u5b8c\u5168\u5339\u914d\uff0c\u6216\u8005\u6355\u83b7\u5f02\u5e38\u662f\u629b\u5f02\u5e38\u7684\u7236\u7c7b\u3002 !!! note \"\u8bf4\u660e\" \u5982\u679c\u9884\u671f\u5bf9\u65b9\u629b\u7684\u662f\u7ee3\u7403\uff0c\u5b9e\u9645\u63a5\u5230\u7684\u662f\u94c5\u7403\uff0c\u5c31\u4f1a\u4ea7\u751f\u610f\u5916\u60c5\u51b5\u3002 \u3010\u63a8\u8350\u3011 \u65b9\u6cd5\u7684\u8fd4\u56de\u503c\u53ef\u4ee5\u4e3a null\uff0c\u4e0d\u5f3a\u5236\u8fd4\u56de\u7a7a\u96c6\u5408\uff0c\u6216\u8005\u7a7a\u5bf9\u8c61\u7b49\uff0c\u5fc5\u987b\u6dfb\u52a0\u6ce8\u91ca\u5145\u5206\u8bf4\u660e\u4ec0\u4e48\u60c5\u51b5\u4e0b\u4f1a\u8fd4\u56de null \u503c\u3002 \u8bf4\u660e \u672c\u624b\u518c\u660e\u786e\u9632\u6b62 NPE \u662f\u8c03\u7528\u8005\u7684\u8d23\u4efb\u3002\u5373\u4f7f\u88ab\u8c03\u7528\u65b9\u6cd5\u8fd4\u56de\u7a7a\u96c6\u5408\u6216\u8005\u7a7a\u5bf9\u8c61\uff0c\u5bf9\u8c03\u7528\u8005\u6765\u8bf4\uff0c\u4e5f\u5e76\u975e\u9ad8\u6795\u65e0\u5fe7\uff0c\u5fc5\u987b\u8003\u8651\u5230\u8fdc\u7a0b\u8c03\u7528\u5931\u8d25\u3001\u5e8f\u5217\u5316\u5931\u8d25\u3001 \u8fd0\u884c\u65f6\u5f02\u5e38\u7b49\u573a\u666f\u8fd4\u56denull \u7684\u60c5\u51b5\u3002 \u3010\u63a8\u8350\u3011 \u9632\u6b62 NPE\uff0c\u662f\u7a0b\u5e8f\u5458\u7684\u57fa\u672c\u4fee\u517b\uff0c\u6ce8\u610f NPE \u4ea7\u751f\u7684\u573a\u666f\uff1a \u8fd4\u56de\u7c7b\u578b\u4e3a\u57fa\u672c\u6570\u636e\u7c7b\u578b\uff0creturn \u5305\u88c5\u6570\u636e\u7c7b\u578b\u7684\u5bf9\u8c61\u65f6\uff0c\u81ea\u52a8\u62c6\u7bb1\u6709\u53ef\u80fd\u4ea7\u751f NPE\u3002 \u53cd\u4f8b public int f () { return Integer \u5bf9\u8c61 } \uff0c \u5982\u679c\u4e3a null \uff0c \u81ea\u52a8\u89e3\u7bb1\u629b NPE \u3002 \u6570\u636e\u5e93\u7684\u67e5\u8be2\u7ed3\u679c\u53ef\u80fd\u4e3a null\u3002 \u96c6\u5408\u91cc\u7684\u5143\u7d20\u5373\u4f7f isNotEmpty\uff0c\u53d6\u51fa\u7684\u6570\u636e\u5143\u7d20\u4e5f\u53ef\u80fd\u4e3a null\u3002 \u8fdc\u7a0b\u8c03\u7528\u8fd4\u56de\u5bf9\u8c61\u65f6\uff0c\u4e00\u5f8b\u8981\u6c42\u8fdb\u884c\u7a7a\u6307\u9488\u5224\u65ad\uff0c\u9632\u6b62 NPE\u3002 \u5bf9\u4e8e Session \u4e2d\u83b7\u53d6\u7684\u6570\u636e\uff0c\u5efa\u8bae NPE \u68c0\u67e5\uff0c\u907f\u514d\u7a7a\u6307\u9488\u3002 \u7ea7\u8054\u8c03\u7528 obj.getA().getB().getC()\uff1b\u4e00\u8fde\u4e32\u8c03\u7528\uff0c\u6613\u4ea7\u751f NPE\u3002 \u6b63\u4f8b \u4f7f\u7528 JDK8 \u7684 Optional \u7c7b\u6765\u9632\u6b62 NPE \u95ee\u9898\u3002 \u3010\u63a8\u8350\u3011 \u5b9a\u4e49\u65f6\u533a\u5206 unchecked / checked \u5f02\u5e38\uff0c\u907f\u514d\u76f4\u63a5\u629b\u51fa new RuntimeException()\uff0c \u66f4\u4e0d\u5141\u8bb8\u629b\u51fa Exception \u6216\u8005 Throwable\uff0c\u5e94\u4f7f\u7528\u6709\u4e1a\u52a1\u542b\u4e49\u7684\u81ea\u5b9a\u4e49\u5f02\u5e38\u3002\u63a8\u8350\u4e1a\u754c\u5df2\u5b9a\u4e49\u8fc7\u7684\u81ea\u5b9a\u4e49\u5f02\u5e38\uff0c \u5982\uff1aDAOException / ServiceException \u7b49\u3002 \u3010\u53c2\u8003\u3011 \u5bf9\u4e8e\u516c\u53f8\u5916\u7684 http/api \u5f00\u653e\u63a5\u53e3\u5fc5\u987b\u4f7f\u7528\u201c\u9519\u8bef\u7801\u201d\uff1b\u800c\u5e94\u7528\u5185\u90e8\u63a8\u8350\u5f02\u5e38\u629b\u51fa\uff1b\u8de8\u5e94\u7528\u95f4 RPC \u8c03\u7528\u4f18\u5148\u8003\u8651\u4f7f\u7528 Result \u65b9\u5f0f\uff0c \u5c01\u88c5 isSuccess()\u65b9\u6cd5\u3001\u201c\u9519\u8bef\u7801\u201d\u3001\u201c\u9519\u8bef\u7b80\u77ed\u4fe1\u606f\u201d\u3002 \u8bf4\u660e \u5173\u4e8e RPC \u65b9\u6cd5\u8fd4\u56de\u65b9\u5f0f\u4f7f\u7528 Result \u65b9\u5f0f\u7684\u7406\u7531\uff1a 1. \u4f7f\u7528\u629b\u5f02\u5e38\u8fd4\u56de\u65b9\u5f0f\uff0c\u8c03\u7528\u65b9\u5982\u679c\u6ca1\u6709\u6355\u83b7\u5230\u5c31\u4f1a\u4ea7\u751f\u8fd0\u884c\u65f6\u9519\u8bef\u3002 2. \u5982\u679c\u4e0d\u52a0\u6808\u4fe1\u606f\uff0c\u53ea\u662f new \u81ea\u5b9a\u4e49\u5f02\u5e38\uff0c\u52a0\u5165\u81ea\u5df1\u7684\u7406\u89e3\u7684 error message\uff0c\u5bf9\u4e8e\u8c03\u7528\u7aef\u89e3\u51b3\u95ee\u9898\u7684\u5e2e\u52a9\u4e0d\u4f1a\u592a\u591a\u3002\u5982\u679c\u52a0\u4e86\u6808\u4fe1\u606f\uff0c\u5728\u9891\u7e41\u8c03\u7528\u51fa\u9519\u7684\u60c5\u51b5\u4e0b\uff0c\u6570\u636e\u5e8f\u5217\u5316\u548c\u4f20\u8f93\u7684\u6027\u80fd\u635f\u8017\u4e5f\u662f\u95ee\u9898\u3002 \u3010\u53c2\u8003\u3011 \u907f\u514d\u51fa\u73b0\u91cd\u590d\u7684\u4ee3\u7801\uff08Don\u2019t Repeat Yourself\uff09\uff0c\u5373 DRY \u539f\u5219\u3002 \u8bf4\u660e \u968f\u610f\u590d\u5236\u548c\u7c98\u8d34\u4ee3\u7801\uff0c\u5fc5\u7136\u4f1a\u5bfc\u81f4\u4ee3\u7801\u7684\u91cd\u590d\uff0c\u5728\u4ee5\u540e\u9700\u8981\u4fee\u6539\u65f6\uff0c\u9700\u8981\u4fee\u6539\u6240\u6709\u7684\u526f\u672c\uff0c\u5bb9\u6613\u9057\u6f0f\u3002\u5fc5\u8981\u65f6\u62bd\u53d6\u5171\u6027\u65b9\u6cd5\uff0c\u6216\u8005\u62bd\u8c61\u516c\u5171\u7c7b\uff0c\u751a\u81f3\u662f\u7ec4\u4ef6\u5316\u3002 \u6b63\u4f8b \u4e00\u4e2a\u7c7b\u4e2d\u6709\u591a\u4e2a public \u65b9\u6cd5\uff0c\u90fd\u9700\u8981\u8fdb\u884c\u6570\u884c\u76f8\u540c\u7684\u53c2\u6570\u6821\u9a8c\u64cd\u4f5c\uff0c\u8fd9\u4e2a\u65f6\u5019\u8bf7\u62bd\u53d6\uff1a private boolean checkParam ( DTO dto ) {...} \u65e5\u5fd7\u89c4\u7ea6 \u00b6 \u3010\u5f3a\u5236\u3011 \u5e94\u7528\u4e2d\u4e0d\u53ef\u76f4\u63a5\u4f7f\u7528\u65e5\u5fd7\u7cfb\u7edf\uff08Log4j\u3001Logback\uff09\u4e2d\u7684 API\uff0c\u800c\u5e94\u4f9d\u8d56\u4f7f\u7528\u65e5\u5fd7\u6846\u67b6SLF4J \u4e2d\u7684 API\uff0c\u4f7f\u7528\u95e8\u9762\u6a21\u5f0f\u7684\u65e5\u5fd7\u6846\u67b6\uff0c\u6709\u5229\u4e8e\u7ef4\u62a4\u548c\u5404\u4e2a\u7c7b\u7684\u65e5\u5fd7\u5904\u7406\u65b9\u5f0f\u7edf\u4e00\u3002 import org.slf4j.Logger ; import org.slf4j.LoggerFactory ; private static final Logger logger = LoggerFactory . getLogger ( Abc . class ); \u3010\u5f3a\u5236\u3011 \u65e5\u5fd7\u6587\u4ef6\u81f3\u5c11\u4fdd\u5b58 15 \u5929\uff0c\u56e0\u4e3a\u6709\u4e9b\u5f02\u5e38\u5177\u5907\u4ee5 \u201c\u5468\u201d \u4e3a\u9891\u6b21\u53d1\u751f\u7684\u7279\u70b9\u3002 \u3010\u5f3a\u5236\u3011 \u5e94\u7528\u4e2d\u7684\u6269\u5c55\u65e5\u5fd7\uff08\u5982\u6253\u70b9\u3001\u4e34\u65f6\u76d1\u63a7\u3001\u8bbf\u95ee\u65e5\u5fd7\u7b49\uff09\u547d\u540d\u65b9\u5f0f\uff1aappName_logType_logName.log\u3002 logType:\u65e5\u5fd7\u7c7b\u578b\uff0c\u5982 stats/monitor/access \u7b49\uff1b logName:\u65e5\u5fd7\u63cf\u8ff0\u3002\u8fd9\u79cd\u547d\u540d\u7684\u597d\u5904\uff1a\u901a\u8fc7\u6587\u4ef6\u540d\u5c31\u53ef\u77e5\u9053\u65e5\u5fd7\u6587\u4ef6\u5c5e\u4e8e\u4ec0\u4e48\u5e94\u7528\uff0c\u4ec0\u4e48\u7c7b\u578b\uff0c\u4ec0\u4e48\u76ee\u7684\uff0c\u4e5f\u6709\u5229\u4e8e\u5f52\u7c7b\u67e5\u627e\u3002 \u6b63\u4f8b mppserver \u5e94\u7528\u4e2d\u5355\u72ec\u76d1\u63a7\u65f6\u533a\u8f6c\u6362\u5f02\u5e38\uff0c\u5982\uff1amppserver_monitor_timeZoneConvert.log \u8bf4\u660e \u63a8\u8350\u5bf9\u65e5\u5fd7\u8fdb\u884c\u5206\u7c7b\uff0c\u5982\u5c06\u9519\u8bef\u65e5\u5fd7\u548c\u4e1a\u52a1\u65e5\u5fd7\u5206\u5f00\u5b58\u653e\uff0c\u4fbf\u4e8e\u5f00\u53d1\u4eba\u5458\u67e5\u770b\uff0c\u4e5f\u4fbf\u4e8e\u901a\u8fc7\u65e5\u5fd7\u5bf9\u7cfb\u7edf\u8fdb\u884c\u53ca\u65f6\u76d1\u63a7\u3002 \u3010\u5f3a\u5236\u3011 \u5bf9 trace/debug/info \u7ea7\u522b\u7684\u65e5\u5fd7\u8f93\u51fa\uff0c\u5fc5\u987b\u4f7f\u7528\u6761\u4ef6\u8f93\u51fa\u5f62\u5f0f\u6216\u8005\u4f7f\u7528\u5360\u4f4d\u7b26\u7684\u65b9\u5f0f\u3002 \u8bf4\u660e logger . debug ( \"Processing trade with id: \" + id + \" and symbol: \" + symbol ); \u5982\u679c\u65e5\u5fd7\u7ea7\u522b\u662f warn \uff0c \u4e0a\u8ff0\u65e5\u5fd7\u4e0d\u4f1a\u6253\u5370 \uff0c \u4f46\u662f\u4f1a\u6267\u884c\u5b57\u7b26\u4e32\u62fc\u63a5\u64cd\u4f5c \uff0c \u5982\u679c symbol \u662f\u5bf9\u8c61 \uff0c \u4f1a\u6267\u884c toString () \u65b9\u6cd5 \uff0c \u6d6a\u8d39\u4e86\u7cfb\u7edf\u8d44\u6e90 \uff0c \u6267\u884c\u4e86\u4e0a\u8ff0\u64cd\u4f5c \uff0c \u6700\u7ec8\u65e5\u5fd7\u5374\u6ca1\u6709\u6253\u5370 \u3002 \u6b63\u4f8b\uff08\u6761\u4ef6\uff09\u5efa\u8bbe\u91c7\u7528\u5982\u4e0b\u65b9\u5f0f if ( logger . isDebugEnabled ()) { logger . debug ( \"Processing trade with id: \" + id + \" and symbol: \" + symbol ); } \u6b63\u4f8b\uff08\u5360\u4f4d\u7b26\uff09 logger . debug ( \"Processing trade with id: {} and symbol : {} \" , id , symbol ); \u3010\u5f3a\u5236\u3011 \u907f\u514d\u91cd\u590d\u6253\u5370\u65e5\u5fd7\uff0c\u6d6a\u8d39\u78c1\u76d8\u7a7a\u95f4\uff0c\u52a1\u5fc5\u5728 log4j.xml \u4e2d\u8bbe\u7f6e additivity=false\u3002 \u6b63\u4f8b <logger name= \"com.taobao.dubbo.config\" additivity= \"false\" > \u3010\u5f3a\u5236\u3011 \u5f02\u5e38\u4fe1\u606f\u5e94\u8be5\u5305\u62ec\u4e24\u7c7b\u4fe1\u606f\uff1a\u6848\u53d1\u73b0\u573a\u4fe1\u606f\u548c\u5f02\u5e38\u5806\u6808\u4fe1\u606f\u3002\u5982\u679c\u4e0d\u5904\u7406\uff0c\u90a3\u4e48\u901a\u8fc7\u5173\u952e\u5b57 throws \u5f80\u4e0a\u629b\u51fa\u3002 \u6b63\u4f8b logger . error ( \u5404\u7c7b\u53c2\u6570\u6216\u8005\u5bf9\u8c61 toString () + \"_\" + e . getMessage (), e ); \u3010\u63a8\u8350\u3011 \u8c28\u614e\u5730\u8bb0\u5f55\u65e5\u5fd7\u3002\u751f\u4ea7\u73af\u5883\u7981\u6b62\u8f93\u51fa debug \u65e5\u5fd7\uff1b\u6709\u9009\u62e9\u5730\u8f93\u51fa info \u65e5\u5fd7\uff1b\u5982\u679c\u4f7f\u7528 warn \u6765\u8bb0\u5f55\u521a\u4e0a\u7ebf\u65f6\u7684\u4e1a\u52a1\u884c\u4e3a\u4fe1\u606f\uff0c\u4e00\u5b9a\u8981\u6ce8\u610f\u65e5\u5fd7\u8f93\u51fa\u91cf\u7684\u95ee\u9898\uff0c\u907f\u514d\u628a\u670d\u52a1\u5668\u78c1\u76d8\u6491\u7206\uff0c\u5e76\u8bb0\u5f97\u53ca\u65f6\u5220\u9664\u8fd9\u4e9b\u89c2\u5bdf\u65e5\u5fd7\u3002 \u8bf4\u660e \u5927\u91cf\u5730\u8f93\u51fa\u65e0\u6548\u65e5\u5fd7\uff0c\u4e0d\u5229\u4e8e\u7cfb\u7edf\u6027\u80fd\u63d0\u5347\uff0c\u4e5f\u4e0d\u5229\u4e8e\u5feb\u901f\u5b9a\u4f4d\u9519\u8bef\u70b9\u3002\u8bb0\u5f55\u65e5\u5fd7\u65f6\u8bf7\u601d\u8003\uff1a\u8fd9\u4e9b\u65e5\u5fd7\u771f\u7684\u6709\u4eba\u770b\u5417\uff1f\u770b\u5230\u8fd9\u6761\u65e5\u5fd7\u4f60\u80fd\u505a\u4ec0\u4e48\uff1f\u80fd\u4e0d\u80fd\u7ed9\u95ee\u9898\u6392\u67e5\u5e26\u6765\u597d\u5904\uff1f \u3010\u63a8\u8350\u3011 \u53ef\u4ee5\u4f7f\u7528 warn \u65e5\u5fd7\u7ea7\u522b\u6765\u8bb0\u5f55\u7528\u6237\u8f93\u5165\u53c2\u6570\u9519\u8bef\u7684\u60c5\u51b5\uff0c\u907f\u514d\u7528\u6237\u6295\u8bc9\u65f6\uff0c\u65e0\u6240\u9002\u4ece\u3002\u5982\u975e\u5fc5\u8981\uff0c\u8bf7\u4e0d\u8981\u5728\u6b64\u573a\u666f\u6253\u51fa error \u7ea7\u522b\uff0c\u907f\u514d\u9891\u7e41\u62a5\u8b66\u3002 \u8bf4\u660e \u6ce8\u610f\u65e5\u5fd7\u8f93\u51fa\u7684\u7ea7\u522b\uff0cerror \u7ea7\u522b\u53ea\u8bb0\u5f55\u7cfb\u7edf\u903b\u8f91\u51fa\u9519\u3001\u5f02\u5e38\u6216\u8005\u91cd\u8981\u7684\u9519\u8bef\u4fe1\u606f\u3002 \u3010\u63a8\u8350\u3011 \u5c3d\u91cf\u7528\u82f1\u6587\u6765\u63cf\u8ff0\u65e5\u5fd7\u9519\u8bef\u4fe1\u606f\uff0c\u5982\u679c\u65e5\u5fd7\u4e2d\u7684\u9519\u8bef\u4fe1\u606f\u7528\u82f1\u6587\u63cf\u8ff0\u4e0d\u6e05\u695a\u7684\u8bdd\u4f7f\u7528\u4e2d\u6587\u63cf\u8ff0\u5373\u53ef\uff0c\u5426\u5219\u5bb9\u6613\u4ea7\u751f\u6b67\u4e49\u3002 \u56fd\u9645\u5316\u56e2\u961f\u6216\u6d77\u5916\u90e8\u7f72\u7684\u670d\u52a1\u5668\u7531\u4e8e\u5b57\u7b26\u96c6\u95ee\u9898\uff0c \u3010\u5f3a\u5236\u3011 \u4f7f\u7528\u5168\u82f1\u6587\u6765\u6ce8\u91ca\u548c\u63cf\u8ff0\u65e5\u5fd7\u9519\u8bef\u4fe1\u606f.","title":"\u8bed\u8a00\u89c4\u8303"},{"location":"standard/language_rules/#java","text":"","title":"Java \u8bed\u8a00\u89c4\u8303"},{"location":"standard/language_rules/#_1","text":"","title":"\u7f16\u7a0b\u89c4\u7ea6"},{"location":"standard/language_rules/#_2","text":"\u3010\u5f3a\u5236\u3011 \u4ee3\u7801\u4e2d\u7684\u547d\u540d\u5747\u4e0d\u80fd\u4ee5\u4e0b\u5212\u7ebf\u6216\u7f8e\u5143\u7b26\u53f7\u5f00\u59cb\uff0c\u4e5f\u4e0d\u80fd\u4ee5\u4e0b\u5212\u7ebf\u6216\u7f8e\u5143\u7b26\u53f7\u7ed3\u675f\u3002 \u53cd\u4f8b _name / __name /$name / name_ / name$ / name__ \u3010\u5f3a\u5236\u3011 \u4ee3\u7801\u4e2d\u7684\u547d\u540d\u4e25\u7981\u4f7f\u7528\u62fc\u97f3\u4e0e\u82f1\u6587\u6df7\u5408\u7684\u65b9\u5f0f\uff0c\u66f4\u4e0d\u5141\u8bb8\u76f4\u63a5\u4f7f\u7528\u4e2d\u6587\u7684\u65b9\u5f0f\u3002 \u8bf4\u660e\uff1a\u6b63\u786e\u7684\u82f1\u6587\u62fc\u5199\u548c\u8bed\u6cd5\u53ef\u4ee5\u8ba9\u9605\u8bfb\u8005\u6613\u4e8e\u7406\u89e3\uff0c\u907f\u514d\u6b67\u4e49\u3002\u6ce8\u610f\uff0c\u5373\u4f7f\u7eaf\u62fc\u97f3\u547d\u540d\u65b9\u5f0f\u4e5f\u8981\u907f\u514d\u91c7\u7528\u3002 \u6b63\u4f8b alibaba / taobao / youku / hangzhou \u7b49\u56fd\u9645\u901a\u7528\u7684\u540d\u79f0\uff0c\u53ef\u89c6\u540c\u82f1\u6587\u3002 \u53cd\u4f8b DaZhePromotion [\u6253\u6298] / getPingfenByName() [\u8bc4\u5206] / int \u67d0\u53d8\u91cf = 3 \u3010\u5f3a\u5236\u3011 \u7c7b\u540d\u4f7f\u7528 UpperCamelCase \u98ce\u683c\uff0c\u4f46\u4ee5\u4e0b\u60c5\u5f62\u4f8b\u5916\uff1a DO / BO / DTO / VO / AO /PO / UID \u7b49\u3002 \u6b63\u4f8b MarcoPolo / UserDO / XmlService / TcpUdpDeal / TaPromotion \u53cd\u4f8b macroPolo / UserDo / XMLService / TCPUDPDeal / TAPromotion \u3010\u5f3a\u5236\u3011 \u65b9\u6cd5\u540d\u3001\u53c2\u6570\u540d\u3001\u6210\u5458\u53d8\u91cf\u3001\u5c40\u90e8\u53d8\u91cf\u90fd\u7edf\u4e00\u4f7f\u7528 lowerCamelCase \u98ce\u683c\uff0c\u5fc5\u987b\u9075\u4ece\u9a7c\u5cf0\u5f62\u5f0f\u3002 \u6b63\u4f8b localValue / getHttpMessage() / inputUserId \u3010\u5f3a\u5236\u3011 \u5e38\u91cf\u547d\u540d\u5168\u90e8\u5927\u5199\uff0c\u5355\u8bcd\u95f4\u7528\u4e0b\u5212\u7ebf\u9694\u5f00\uff0c\u529b\u6c42\u8bed\u4e49\u8868\u8fbe\u5b8c\u6574\u6e05\u695a\uff0c\u4e0d\u8981\u5acc\u540d\u5b57\u957f\u3002 \u6b63\u4f8b MAX_STOCK_COUNT \u53cd\u4f8b MAX_COUNT \u3010\u5f3a\u5236\u3011 \u62bd\u8c61\u7c7b\u547d\u540d\u4f7f\u7528 Abstract \u5f00\u5934\uff1b\u5f02\u5e38\u7c7b\u547d\u540d\u4f7f\u7528 Exception \u7ed3\u5c3e\uff1b\u6d4b\u8bd5\u7c7b\u547d\u540d\u4ee5\u5b83\u8981\u6d4b\u8bd5\u7684\u7c7b\u7684\u540d\u79f0\u5f00\u59cb\uff0c \u4ee5 Test \u7ed3\u5c3e\u3002 \u3010\u5f3a\u5236\u3011 \u7c7b\u578b\u4e0e\u4e2d\u62ec\u53f7\u7d27\u6328\u76f8\u8fde\u6765\u8868\u793a\u6570\u7ec4\u3002 \u6b63\u4f8b \u5b9a\u4e49\u6574\u5f62\u6570\u7ec4 int[] arrayDemo ; \u53cd\u4f8b \u5728 main \u53c2\u6570\u4e2d\uff0c\u4f7f\u7528 String args[] \u6765\u5b9a\u4e49\u3002 \u3010\u5f3a\u5236\u3011 POJO \u7c7b\u4e2d\u5e03\u5c14\u7c7b\u578b\u7684\u53d8\u91cf\uff0c\u90fd\u4e0d\u8981\u52a0 is \u524d\u7f00\uff0c\u5426\u5219\u90e8\u5206\u6846\u67b6\u89e3\u6790\u4f1a\u5f15\u8d77\u5e8f\u5217\u5316\u9519\u8bef\u3002 \u53cd\u4f8b \u5b9a\u4e49\u4e3a\u57fa\u672c\u6570\u636e\u7c7b\u578b Boolean isDeleted \u7684\u5c5e\u6027\uff0c\u5b83\u7684\u65b9\u6cd5\u4e5f\u662f isDeleted() \uff0c RPC \u6846\u67b6\u5728\u53cd\u5411\u89e3\u6790\u7684\u65f6\u5019\uff0c \u201c\u8bef\u4ee5\u4e3a\u201d\u5bf9\u5e94\u7684\u5c5e\u6027\u540d\u79f0\u662f deleted \uff0c\u5bfc\u81f4\u5c5e\u6027\u83b7\u53d6\u4e0d\u5230\uff0c\u8fdb\u800c\u629b\u51fa\u5f02\u5e38\u3002 \u3010\u5f3a\u5236\u3011 \u5305\u540d\u7edf\u4e00\u4f7f\u7528\u5c0f\u5199\uff0c\u70b9\u5206\u9694\u7b26\u4e4b\u95f4\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a\u81ea\u7136\u8bed\u4e49\u7684\u82f1\u8bed\u5355\u8bcd\u3002\u5305\u540d\u7edf\u4e00\u4f7f\u7528\u5355\u6570\u5f62\u5f0f\uff0c\u4f46\u662f\u7c7b\u540d\u5982\u679c\u6709\u590d\u6570\u542b\u4e49\uff0c\u7c7b\u540d\u53ef\u4ee5\u4f7f\u7528\u590d\u6570\u5f62\u5f0f\u3002 \u6b63\u4f8b \u5e94\u7528\u5de5\u5177\u7c7b\u5305\u540d\u4e3a com.alibaba.ai.util \u3001\u7c7b\u540d\u4e3a MessageUtils \uff08\u6b64\u89c4\u5219\u53c2\u8003 spring \u7684\u6846\u67b6\u7ed3\u6784\uff09 \u3010\u5f3a\u5236\u3011 \u675c\u7edd\u5b8c\u5168\u4e0d\u89c4\u8303\u7684\u7f29\u5199\uff0c\u907f\u514d\u671b\u6587\u4e0d\u77e5\u4e49\u3002 \u53cd\u4f8b AbstractClass \u7f29\u5199\u547d\u540d\u6210 AbsClass \uff1b condition \u7f29\u5199\u547d\u540d\u6210 condi \uff0c\u6b64\u7c7b\u968f\u610f\u7f29\u5199\u4e25\u91cd\u964d\u4f4e\u4e86\u4ee3\u7801\u7684\u53ef\u9605\u8bfb\u6027\u3002 \u3010\u63a8\u8350\u3011 \u4e3a\u4e86\u8fbe\u5230\u4ee3\u7801\u81ea\u89e3\u91ca\u7684\u76ee\u6807\uff0c\u4efb\u4f55\u81ea\u5b9a\u4e49\u7f16\u7a0b\u5143\u7d20\u5728\u547d\u540d\u65f6\uff0c\u4f7f\u7528\u5c3d\u91cf\u5b8c\u6574\u7684\u5355\u8bcd\u7ec4\u5408\u6765\u8868\u8fbe\u5176\u610f\u3002 \u6b63\u4f8b \u5728 JDK \u4e2d\uff0c\u8868\u8fbe\u539f\u5b50\u66f4\u65b0\u7684\u7c7b\u540d\u4e3a\uff1a AtomicReferenceFieldUpdater \u3002 \u53cd\u4f8b \u53d8\u91cf int a \u7684\u968f\u610f\u547d\u540d\u65b9\u5f0f\u3002 \u3010\u63a8\u8350\u3011 \u5982\u679c\u6a21\u5757\u3001\u63a5\u53e3\u3001\u7c7b\u3001\u65b9\u6cd5\u4f7f\u7528\u4e86\u8bbe\u8ba1\u6a21\u5f0f\uff0c\u5728\u547d\u540d\u65f6\u9700\u4f53\u73b0\u51fa\u5177\u4f53\u6a21\u5f0f\u3002 \u6b63\u4f8b public class OrderFactory ; public class LoginProxy ; public class ResourceObserver ; \u8bf4\u660e \u5c06\u8bbe\u8ba1\u6a21\u5f0f\u4f53\u73b0\u5728\u540d\u5b57\u4e2d\uff0c\u6709\u5229\u4e8e\u9605\u8bfb\u8005\u5feb\u901f\u7406\u89e3\u67b6\u6784\u8bbe\u8ba1\u7406\u5ff5\u3002 \u3010\u63a8\u8350\u3011 \u63a5\u53e3\u7c7b\u4e2d\u7684\u65b9\u6cd5\u548c\u5c5e\u6027\u4e0d\u8981\u52a0\u4efb\u4f55\u4fee\u9970\u7b26\u53f7\uff08 public \u4e5f\u4e0d\u8981\u52a0\uff09\uff0c\u4fdd\u6301\u4ee3\u7801\u7684\u7b80\u6d01\u6027\u3002\u5c3d\u91cf\u4e0d\u8981\u5728\u63a5\u53e3\u91cc\u5b9a\u4e49\u53d8\u91cf\uff0c\u5982\u679c\u4e00\u5b9a\u8981\u5b9a\u4e49\u53d8\u91cf\uff0c\u80af\u5b9a\u662f\u4e0e\u63a5\u53e3\u65b9\u6cd5\u76f8\u5173\uff0c\u5e76\u4e14\u662f\u6574\u4e2a\u5e94\u7528\u7684\u57fa\u7840\u5e38\u91cf\u3002 \u6b63\u4f8b \u63a5\u53e3\u65b9\u6cd5\u7b7e\u540d void commit() ; \u63a5\u53e3\u57fa\u7840\u5e38\u91cf String COMPANY = \"alibaba\" ; \u53cd\u4f8b \u63a5\u53e3\u65b9\u6cd5\u5b9a\u4e49 public abstract void f() ; \u8bf4\u660e JDK8 \u4e2d\u63a5\u53e3\u5141\u8bb8\u6709\u9ed8\u8ba4\u5b9e\u73b0\uff0c\u90a3\u4e48\u8fd9\u4e2a default \u65b9\u6cd5\uff0c\u662f\u5bf9\u6240\u6709\u5b9e\u73b0\u7c7b\u90fd\u6709\u4ef7\u503c\u7684\u9ed8\u8ba4\u5b9e\u73b0\u3002 \u63a5\u53e3\u548c\u5b9e\u73b0\u7c7b\u7684\u547d\u540d\u6709\u4e24\u5957\u89c4\u5219\uff1a \u3010\u5f3a\u5236\u3011 \u5bf9\u4e8e Service \u548c DAO \u7c7b\uff0c\u57fa\u4e8e SOA \u7684\u7406\u5ff5\uff0c\u66b4\u9732\u51fa\u6765\u7684\u670d\u52a1\u4e00\u5b9a\u662f\u63a5\u53e3\uff0c \u5185\u90e8\u7684\u5b9e\u73b0\u7c7b\u7528 Impl \u7684\u540e\u7f00\u4e0e\u63a5\u53e3\u533a\u522b\u3002 \u6b63\u4f8b CacheServiceImpl \u5b9e\u73b0 CacheService \u63a5\u53e3\u3002 \u3010\u63a8\u8350\u3011 \u5982\u679c\u662f\u5f62\u5bb9\u80fd\u529b\u7684\u63a5\u53e3\u540d\u79f0\uff0c\u53d6\u5bf9\u5e94\u7684\u5f62\u5bb9\u8bcd\u4e3a\u63a5\u53e3\u540d\uff08\u901a\u5e38\u662f \u2013able \u7684\u5f62\u5f0f\uff09\u3002 \u6b63\u4f8b AbstractTranslator \u5b9e\u73b0 Translatable \u63a5\u53e3\u3002 \u3010\u53c2\u8003\u3011 \u679a\u4e3e\u7c7b\u540d\u5efa\u8bae\u5e26\u4e0a Enum \u540e\u7f00\uff0c\u679a\u4e3e\u6210\u5458\u540d\u79f0\u9700\u8981\u5168\u5927\u5199\uff0c\u5355\u8bcd\u95f4\u7528\u4e0b\u5212\u7ebf\u9694\u5f00\u3002 \u6b63\u4f8b \u679a\u4e3e\u540d\u5b57\u4e3a ProcessStatusEnum \u7684\u6210\u5458\u540d\u79f0\uff1a SUCCESS / UNKNOWN_REASON \u3002 \u8bf4\u660e \u679a\u4e3e\u5176\u5b9e\u5c31\u662f\u7279\u6b8a\u7684\u7c7b\uff0c\u57df\u6210\u5458\u5747\u4e3a\u5e38\u91cf\uff0c\u4e14\u6784\u9020\u65b9\u6cd5\u88ab\u9ed8\u8ba4\u5f3a\u5236\u662f\u79c1\u6709\u3002 \u3010\u53c2\u8003\u3011 \u5404\u5c42\u547d\u540d\u89c4\u7ea6\uff1a Service/DAO \u5c42\u65b9\u6cd5\u547d\u540d\u89c4\u7ea6 \u83b7\u53d6\u5355\u4e2a\u5bf9\u8c61\u7684\u65b9\u6cd5\u7528 get \u505a\u524d\u7f00\u3002 \u83b7\u53d6\u591a\u4e2a\u5bf9\u8c61\u7684\u65b9\u6cd5\u7528 list \u505a\u524d\u7f00\uff0c\u590d\u6570\u5f62\u5f0f\u7ed3\u5c3e\u5982\uff1a listObjects \u3002 \u83b7\u53d6\u7edf\u8ba1\u503c\u7684\u65b9\u6cd5\u7528 count \u505a\u524d\u7f00\u3002 \u63d2\u5165\u7684\u65b9\u6cd5\u7528 save/insert \u505a\u524d\u7f00\u3002 \u5220\u9664\u7684\u65b9\u6cd5\u7528 remove/delete \u505a\u524d\u7f00\u3002 \u4fee\u6539\u7684\u65b9\u6cd5\u7528 update \u505a\u524d\u7f00\u3002 \u9886\u57df\u6a21\u578b\u547d\u540d\u89c4\u7ea6 \u6570\u636e\u4f20\u8f93\u5bf9\u8c61\uff1a xxxDTO \uff0c xxx \u4e3a\u4e1a\u52a1\u9886\u57df\u76f8\u5173\u7684\u540d\u79f0\u3002 \u5c55\u793a\u5bf9\u8c61\uff1a xxxVO \uff0c xxx \u4e00\u822c\u4e3a\u7f51\u9875\u540d\u79f0\u3002 POJO \u662f DO/DTO/BO/VO \u7684\u7edf\u79f0\uff0c\u7981\u6b62\u547d\u540d\u6210 xxxPOJO \u3002","title":"\u547d\u540d\u98ce\u683c"},{"location":"standard/language_rules/#_3","text":"\u3010\u5f3a\u5236\u3011 \u4e0d\u5141\u8bb8\u4efb\u4f55\u9b54\u6cd5\u503c\uff08\u5373\u672a\u7ecf\u9884\u5148\u5b9a\u4e49\u7684\u5e38\u91cf\uff09\u76f4\u63a5\u51fa\u73b0\u5728\u4ee3\u7801\u4e2d\u3002 \u53cd\u4f8b String key = \"Id#taobao_\" + tradeId ; cache . put ( key , value ); \u3010\u5f3a\u5236\u3011 \u5728 long \u6216\u8005 Long \u8d4b\u503c\u65f6\uff0c\u6570\u503c\u540e\u4f7f\u7528\u5927\u5199\u7684 L \uff0c\u4e0d\u80fd\u662f\u5c0f\u5199\u7684 l \uff0c\u5c0f\u5199\u5bb9\u6613\u8ddf\u6570\u5b57 1 \u6df7\u6dc6\uff0c\u9020\u6210\u8bef\u89e3\u3002 \u8bf4\u660e Long a = 2l ; \u5199\u7684\u662f\u6570\u5b57\u7684 21 \uff0c\u8fd8\u662f Long \u578b\u7684 2 ? \u3010\u63a8\u8350\u3011 \u4e0d\u8981\u4f7f\u7528\u4e00\u4e2a\u5e38\u91cf\u7c7b\u7ef4\u62a4\u6240\u6709\u5e38\u91cf\uff0c\u8981\u6309\u5e38\u91cf\u529f\u80fd\u8fdb\u884c\u5f52\u7c7b\uff0c\u5206\u5f00\u7ef4\u62a4\u3002 \u8bf4\u660e \u5927\u800c\u5168\u7684\u5e38\u91cf\u7c7b\uff0c\u6742\u4e71\u65e0\u7ae0\uff0c\u4f7f\u7528\u67e5\u627e\u529f\u80fd\u624d\u80fd\u5b9a\u4f4d\u5230\u4fee\u6539\u7684\u5e38\u91cf\uff0c\u4e0d\u5229\u4e8e\u7406\u89e3\u548c\u7ef4\u62a4\u3002 \u6b63\u4f8b \u7f13\u5b58\u76f8\u5173\u5e38\u91cf\u653e\u5728\u7c7b CacheConsts \u4e0b\uff1b\u7cfb\u7edf\u914d\u7f6e\u76f8\u5173\u5e38\u91cf\u653e\u5728\u7c7b ConfigConst \u4e0b\u3002 \u3010\u63a8\u8350\u3011 \u5e38\u91cf\u7684\u590d\u7528\u5c42\u6b21\u6709\u4e94\u5c42\uff1a\u8de8\u5e94\u7528\u5171\u4eab\u5e38\u91cf\u3001\u5e94\u7528\u5185\u5171\u4eab\u5e38\u91cf\u3001\u5b50\u5de5\u7a0b\u5185\u5171\u4eab\u5e38\u91cf\u3001\u5305\u5185\u5171\u4eab\u5e38\u91cf\u3001\u7c7b\u5185\u5171\u4eab\u5e38\u91cf\u3002 \u8de8\u5e94\u7528\u5171\u4eab\u5e38\u91cf\uff1a\u653e\u7f6e\u5728\u4e8c\u65b9\u5e93\u4e2d\uff0c\u901a\u5e38\u662f client.jar \u4e2d\u7684 constant \u76ee\u5f55\u4e0b\u3002 \u5e94\u7528\u5185\u5171\u4eab\u5e38\u91cf\uff1a\u653e\u7f6e\u5728\u4e00\u65b9\u5e93\u4e2d\uff0c\u901a\u5e38\u662f\u5b50\u6a21\u5757\u4e2d\u7684 constant \u76ee\u5f55\u4e0b\u3002 \u53cd\u4f8b \u6613\u61c2\u53d8\u91cf\u4e5f\u8981\u7edf\u4e00\u5b9a\u4e49\u6210\u5e94\u7528\u5185\u5171\u4eab\u5e38\u91cf\uff0c\u4e24\u4f4d\u653b\u57ce\u5e08\u5728\u4e24\u4e2a\u7c7b\u4e2d\u5206\u522b\u5b9a\u4e49\u4e86\u8868\u793a\u201c\u662f\u201d\u7684\u53d8\u91cf\uff1a \u7c7b A \u4e2d\uff1a `public static final String YES = \"yes\"` ; \u7c7b B \u4e2d\uff1a `public static final String YES = \"y\"` ; `A.YES.equals(B.YES)` \uff0c\u9884\u671f\u662f `true` \uff0c\u4f46\u5b9e\u9645\u8fd4\u56de\u4e3a `false` \uff0c\u5bfc\u81f4\u7ebf\u4e0a\u95ee\u9898\u3002 \u5b50\u5de5\u7a0b\u5185\u90e8\u5171\u4eab\u5e38\u91cf\uff1a\u5373\u5728\u5f53\u524d\u5b50\u5de5\u7a0b\u7684 constant \u76ee\u5f55\u4e0b\u3002 \u5305\u5185\u5171\u4eab\u5e38\u91cf\uff1a\u5373\u5728\u5f53\u524d\u5305\u4e0b\u5355\u72ec\u7684 constant \u76ee\u5f55\u4e0b\u3002 \u7c7b\u5185\u5171\u4eab\u5e38\u91cf\uff1a\u76f4\u63a5\u5728\u7c7b\u5185\u90e8 private static final \u5b9a\u4e49 \u3010\u63a8\u8350\u3011 \u5982\u679c\u53d8\u91cf\u503c\u4ec5\u5728\u4e00\u4e2a\u56fa\u5b9a\u8303\u56f4\u5185\u53d8\u5316\u7528 enum \u7c7b\u578b\u6765\u5b9a\u4e49\u3002 \u5982\u679c\u5b58\u5728\u540d\u79f0\u4e4b\u5916\u7684\u5ef6\u4f38\u5c5e\u6027\u5e94\u4f7f\u7528 enum \u7c7b\u578b\uff0c\u4e0b\u9762\u6b63\u4f8b\u4e2d\u7684\u6570\u5b57\u5c31\u662f\u5ef6\u4f38\u4fe1\u606f\uff0c\u8868\u793a\u4e00\u5e74\u4e2d\u7684\u7b2c\u51e0\u4e2a\u5b63\u8282\u3002 \u6b63\u4f8b public enum SeasonEnum { SPRING ( 1 ), SUMMER ( 2 ), AUTUMN ( 3 ), WINTER ( 4 ); private int seq ; SeasonEnum ( int seq ){ this . seq = seq ; } }","title":"\u5e38\u91cf\u5b9a\u4e49"},{"location":"standard/language_rules/#_4","text":"\u3010\u5f3a\u5236\u3011 \u5927\u62ec\u53f7\u7684\u4f7f\u7528\u7ea6\u5b9a\u3002\u5982\u679c\u662f\u5927\u62ec\u53f7\u5185\u4e3a\u7a7a\uff0c\u5219\u7b80\u6d01\u5730\u5199\u6210 {} \u5373\u53ef\uff0c\u4e0d\u9700\u8981\u6362\u884c\uff1b\u5982\u679c\u662f\u975e\u7a7a\u4ee3\u7801\u5757\u5219\uff1a \u5de6\u5927\u62ec\u53f7\u524d\u4e0d\u6362\u884c\u3002 \u5de6\u5927\u62ec\u53f7\u540e\u6362\u884c\u3002 \u53f3\u5927\u62ec\u53f7\u524d\u6362\u884c\u3002 \u53f3\u5927\u62ec\u53f7\u540e\u8fd8\u6709 else \u7b49\u4ee3\u7801\u5219\u4e0d\u6362\u884c\uff1b\u8868\u793a\u7ec8\u6b62\u7684\u53f3\u5927\u62ec\u53f7\u540e\u5fc5\u987b\u6362\u884c\u3002 \u3010\u5f3a\u5236\u3011 \u5de6\u5c0f\u62ec\u53f7\u548c\u5b57\u7b26\u4e4b\u95f4\u4e0d\u51fa\u73b0\u7a7a\u683c\uff1b\u540c\u6837\uff0c\u53f3\u5c0f\u62ec\u53f7\u548c\u5b57\u7b26\u4e4b\u95f4\u4e5f\u4e0d\u51fa\u73b0\u7a7a\u683c\uff1b\u800c\u5de6\u5927\u62ec\u53f7\u524d\u9700\u8981\u7a7a\u683c\u3002\u8be6\u89c1\u7b2c 5 \u6761\u4e0b\u65b9\u6b63\u4f8b\u63d0\u793a\u3002 \u53cd\u4f8b if (\u7a7a\u683c a == b \u7a7a\u683c) \u3010\u5f3a\u5236\u3011 if/for/while/switch/do \u7b49\u4fdd\u7559\u5b57\u4e0e\u62ec\u53f7\u4e4b\u95f4\u90fd\u5fc5\u987b\u52a0\u7a7a\u683c\u3002 \u3010\u5f3a\u5236\u3011 \u4efb\u4f55\u4e8c\u76ee\u3001\u4e09\u76ee\u8fd0\u7b97\u7b26\u7684\u5de6\u53f3\u4e24\u8fb9\u90fd\u9700\u8981\u52a0\u4e00\u4e2a\u7a7a\u683c\u3002 !!! note \"\u8bf4\u660e\" \u8fd0\u7b97\u7b26\u5305\u62ec\u8d4b\u503c\u8fd0\u7b97\u7b26 = \u3001\u903b\u8f91\u8fd0\u7b97\u7b26 && \u3001\u52a0\u51cf\u4e58\u9664\u7b26\u53f7\u7b49\u3002 \u3010\u5f3a\u5236\u3011 \u91c7\u7528 4 \u4e2a\u7a7a\u683c\u7f29\u8fdb\uff0c\u7981\u6b62\u4f7f\u7528 tab \u5b57\u7b26\u3002 !!! note \"\u8bf4\u660e\" \u5982\u679c\u4f7f\u7528 tab \u7f29\u8fdb\uff0c\u5fc5\u987b\u8bbe\u7f6e 1 \u4e2a tab \u4e3a 4 \u4e2a\u7a7a\u683c\u3002IDEA \u8bbe\u7f6e tab \u4e3a 4 \u4e2a\u7a7a\u683c\u65f6\uff0c\u8bf7\u52ff\u52fe\u9009 Use tab character \uff1b \u800c\u5728 eclipse \u4e2d\uff0c\u5fc5\u987b\u52fe\u9009 insert spaces for tabs \u3002 \u6b63\u4f8b\uff08\u6d89\u53ca1-5\u70b9\uff09 public static void main ( String [] args ) { // \u7f29\u8fdb 4 \u4e2a\u7a7a\u683c String say = \"hello\" ; // \u8fd0\u7b97\u7b26\u7684\u5de6\u53f3\u5fc5\u987b\u6709\u4e00\u4e2a\u7a7a\u683c int flag = 0 ; // \u5173\u952e\u8bcd if \u4e0e\u62ec\u53f7\u4e4b\u95f4\u5fc5\u987b\u6709\u4e00\u4e2a\u7a7a\u683c\uff0c\u62ec\u53f7\u5185\u7684 f \u4e0e\u5de6\u62ec\u53f7\uff0c0 \u4e0e\u53f3\u62ec\u53f7\u4e0d\u9700\u8981\u7a7a\u683c if ( flag == 0 ) { System . out . println ( say ); } // \u5de6\u5927\u62ec\u53f7\u524d\u52a0\u7a7a\u683c\u4e14\u4e0d\u6362\u884c\uff1b\u5de6\u5927\u62ec\u53f7\u540e\u6362\u884c if ( flag == 1 ) { System . out . println ( \"world\" ); // \u53f3\u5927\u62ec\u53f7\u524d\u6362\u884c\uff0c\u53f3\u5927\u62ec\u53f7\u540e\u6709 else\uff0c\u4e0d\u7528\u6362\u884c } else { System . out . println ( \"ok\" ); // \u5728\u53f3\u5927\u62ec\u53f7\u540e\u76f4\u63a5\u7ed3\u675f\uff0c\u5219\u5fc5\u987b\u6362\u884c } } \u3010\u5f3a\u5236\u3011 \u6ce8\u91ca\u7684\u53cc\u659c\u7ebf\u4e0e\u6ce8\u91ca\u5185\u5bb9\u4e4b\u95f4\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a\u7a7a\u683c\u3002 \u6b63\u4f8b // \u8fd9\u662f\u793a\u4f8b\u6ce8\u91ca\uff0c\u8bf7\u6ce8\u610f\u5728\u53cc\u659c\u7ebf\u4e4b\u540e\u6709\u4e00\u4e2a\u7a7a\u683c String ygb = new String (); \u3010\u5f3a\u5236\u3011 \u5355\u884c\u5b57\u7b26\u6570\u9650\u5236\u4e0d\u8d85\u8fc7 120 \u4e2a\uff0c\u8d85\u51fa\u9700\u8981\u6362\u884c\uff0c\u6362\u884c\u65f6\u9075\u5faa\u5982\u4e0b\u539f\u5219\uff1a \u7b2c\u4e8c\u884c\u76f8\u5bf9\u7b2c\u4e00\u884c\u7f29\u8fdb 4 \u4e2a\u7a7a\u683c\uff0c\u4ece\u7b2c\u4e09\u884c\u5f00\u59cb\uff0c\u4e0d\u518d\u7ee7\u7eed\u7f29\u8fdb\uff0c\u53c2\u8003\u793a\u4f8b\u3002 \u8fd0\u7b97\u7b26\u4e0e\u4e0b\u6587\u4e00\u8d77\u6362\u884c\u3002 \u65b9\u6cd5\u8c03\u7528\u7684\u70b9\u7b26\u53f7\u4e0e\u4e0b\u6587\u4e00\u8d77\u6362\u884c\u3002 \u65b9\u6cd5\u8c03\u7528\u4e2d\u7684\u591a\u4e2a\u53c2\u6570\u9700\u8981\u6362\u884c\u65f6\uff0c\u5728\u9017\u53f7\u540e\u8fdb\u884c\u3002 \u5728\u62ec\u53f7\u524d\u4e0d\u8981\u6362\u884c\uff0c\u89c1\u53cd\u4f8b\u3002 \u6b63\u4f8b StringBuffer sb = new StringBuffer (); // \u8d85\u8fc7 120 \u4e2a\u5b57\u7b26\u7684\u60c5\u51b5\u4e0b\uff0c\u6362\u884c\u7f29\u8fdb 4 \u4e2a\u7a7a\u683c\uff0c\u70b9\u53f7\u548c\u65b9\u6cd5\u540d\u79f0\u4e00\u8d77\u6362\u884c sb . append ( \"zi\" ). append ( \"xin\" )... . append ( \"huang\" )... . append ( \"huang\" )... . append ( \"huang\" ); \u53cd\u4f8b StringBuffer sb = new StringBuffer (); // \u8d85\u8fc7 120 \u4e2a\u5b57\u7b26\u7684\u60c5\u51b5\u4e0b\uff0c\u4e0d\u8981\u5728\u62ec\u53f7\u524d\u6362\u884c sb . append ( \"zi\" ). append ( \"xin\" )... append ( \"huang\" ); // \u53c2\u6570\u5f88\u591a\u7684\u65b9\u6cd5\u8c03\u7528\u53ef\u80fd\u8d85\u8fc7 120 \u4e2a\u5b57\u7b26\uff0c\u4e0d\u8981\u5728\u9017\u53f7\u524d\u6362\u884c method ( args1 , args2 , args3 , ... , argsX ); \u3010\u5f3a\u5236\u3011 \u65b9\u6cd5\u53c2\u6570\u5728\u5b9a\u4e49\u548c\u4f20\u5165\u65f6\uff0c\u591a\u4e2a\u53c2\u6570\u9017\u53f7\u540e\u8fb9\u5fc5\u987b\u52a0\u7a7a\u683c\u3002 \u6b63\u4f8b \u4e0b\u4f8b\u4e2d\u5b9e\u53c2\u7684 args1\uff0c\u540e\u8fb9\u5fc5\u987b\u8981\u6709\u4e00\u4e2a\u7a7a\u683c\u3002 method ( args1 , args2 , args3 ); \u3010\u5f3a\u5236\u3011 IDE \u7684 text file encoding \u8bbe\u7f6e\u4e3a UTF-8 ; IDE \u4e2d\u6587\u4ef6\u7684\u6362\u884c\u7b26\u4f7f\u7528 Unix \u683c\u5f0f\uff0c \u4e0d\u8981\u4f7f\u7528 Windows \u683c\u5f0f\u3002 \u3010\u63a8\u8350\u3011 \u5355\u4e2a\u65b9\u6cd5\u7684\u603b\u884c\u6570\u4e0d\u8d85\u8fc7 80 \u884c\u3002 \u8bf4\u660e \u5305\u62ec\u65b9\u6cd5\u7b7e\u540d\u3001\u7ed3\u675f\u53f3\u5927\u62ec\u53f7\u3001\u65b9\u6cd5\u5185\u4ee3\u7801\u3001\u6ce8\u91ca\u3001\u7a7a\u884c\u3001\u56de\u8f66\u53ca\u4efb\u4f55\u4e0d\u53ef\u89c1\u5b57\u7b26\u7684\u603b\u884c\u6570\u4e0d\u8d85\u8fc7 80 \u884c\u3002 \u6b63\u4f8b \u4ee3\u7801\u903b\u8f91\u5206\u6e05\u7ea2\u82b1\u548c\u7eff\u53f6\uff0c\u4e2a\u6027\u548c\u5171\u6027\uff0c\u7eff\u53f6\u903b\u8f91\u5355\u72ec\u51fa\u6765\u6210\u4e3a\u989d\u5916\u65b9\u6cd5\uff0c\u4f7f\u4e3b\u5e72\u4ee3\u7801\u66f4\u52a0\u6e05\u6670\uff1b\u5171\u6027\u903b\u8f91\u62bd\u53d6\u6210\u4e3a\u5171\u6027\u65b9\u6cd5\uff0c\u4fbf\u4e8e\u590d\u7528\u548c\u7ef4\u62a4\u3002 \u3010\u63a8\u8350\u3011 \u6ca1\u6709\u5fc5\u8981\u589e\u52a0\u82e5\u5e72\u7a7a\u683c\u6765\u4f7f\u67d0\u4e00\u884c\u7684\u5b57\u7b26\u4e0e\u4e0a\u4e00\u884c\u5bf9\u5e94\u4f4d\u7f6e\u7684\u5b57\u7b26\u5bf9\u9f50\u3002 \u6b63\u4f8b int one = 1 ; long two = 2L ; float three = 3F ; StringBuffer sb = new StringBuffer (); \u8bf4\u660e \u589e\u52a0 sb \u8fd9\u4e2a\u53d8\u91cf\uff0c\u5982\u679c\u9700\u8981\u5bf9\u9f50\uff0c\u5219\u7ed9 a\u3001b\u3001c \u90fd\u8981\u589e\u52a0\u51e0\u4e2a\u7a7a\u683c\uff0c\u5728\u53d8\u91cf\u6bd4\u8f83\u591a\u7684\u60c5\u51b5\u4e0b\uff0c\u662f\u975e\u5e38\u7d2f\u8d58\u7684\u4e8b\u60c5\u3002 \u3010\u63a8\u8350\u3011 \u4e0d\u540c\u903b\u8f91\u3001\u4e0d\u540c\u8bed\u4e49\u3001\u4e0d\u540c\u4e1a\u52a1\u7684\u4ee3\u7801\u4e4b\u95f4\u63d2\u5165\u4e00\u4e2a\u7a7a\u884c\u5206\u9694\u5f00\u6765\u4ee5\u63d0\u5347\u53ef\u8bfb\u6027\u3002 \u8bf4\u660e \u4efb\u4f55\u60c5\u5f62\uff0c\u6ca1\u6709\u5fc5\u8981\u63d2\u5165\u591a\u4e2a\u7a7a\u884c\u8fdb\u884c\u9694\u5f00\u3002","title":"\u4ee3\u7801\u683c\u5f0f"},{"location":"standard/language_rules/#oop","text":"\u3010\u5f3a\u5236\u3011 \u907f\u514d\u901a\u8fc7\u4e00\u4e2a\u7c7b\u7684\u5bf9\u8c61\u5f15\u7528\u8bbf\u95ee\u6b64\u7c7b\u7684\u9759\u6001\u53d8\u91cf\u6216\u9759\u6001\u65b9\u6cd5\uff0c\u65e0\u8c13\u589e\u52a0\u7f16\u8bd1\u5668\u89e3\u6790\u6210\u672c\uff0c\u76f4\u63a5\u7528\u7c7b\u540d\u6765\u8bbf\u95ee\u5373\u53ef\u3002 \u3010\u5f3a\u5236\u3011 \u6240\u6709\u7684\u8986\u5199\u65b9\u6cd5\uff0c\u5fc5\u987b\u52a0 @Override \u6ce8\u89e3\u3002 \u8bf4\u660e getObject() \u4e0e get0bject() \u7684\u95ee\u9898\u3002\u4e00\u4e2a\u662f\u5b57\u6bcd\u7684 O \uff0c\u4e00\u4e2a\u662f\u6570\u5b57\u7684 0 \uff0c\u52a0 @Override \u53ef\u4ee5\u51c6\u786e\u5224\u65ad\u662f\u5426\u8986\u76d6\u6210\u529f\u3002\u53e6\u5916\uff0c\u5982\u679c\u5728\u62bd\u8c61\u7c7b\u4e2d\u5bf9\u65b9\u6cd5\u7b7e\u540d\u8fdb\u884c\u4fee\u6539\uff0c\u5176\u5b9e\u73b0\u7c7b\u4f1a\u9a6c\u4e0a\u7f16\u8bd1\u62a5\u9519\u3002 \u3010\u5f3a\u5236\u3011 \u76f8\u540c\u53c2\u6570\u7c7b\u578b\uff0c\u76f8\u540c\u4e1a\u52a1\u542b\u4e49\uff0c\u624d\u53ef\u4ee5\u4f7f\u7528 Java \u7684\u53ef\u53d8\u53c2\u6570\uff0c\u907f\u514d\u4f7f\u7528 Object \u3002 \u8bf4\u660e \u53ef\u53d8\u53c2\u6570\u5fc5\u987b\u653e\u7f6e\u5728\u53c2\u6570\u5217\u8868\u7684\u6700\u540e\u3002\uff08\u63d0\u5021\u540c\u5b66\u4eec\u5c3d\u91cf\u4e0d\u7528\u53ef\u53d8\u53c2\u6570\u7f16\u7a0b\uff09 \u6b63\u4f8b public List < User > listUsers ( String type , Long ... ids ) {...} \u3010\u5f3a\u5236\u3011 \u5916\u90e8\u6b63\u5728\u8c03\u7528\u6216\u8005\u4e8c\u65b9\u5e93\u4f9d\u8d56\u7684\u63a5\u53e3\uff0c\u4e0d\u5141\u8bb8\u4fee\u6539\u65b9\u6cd5\u7b7e\u540d\uff0c\u907f\u514d\u5bf9\u63a5\u53e3\u8c03\u7528\u65b9\u4ea7\u751f\u5f71\u54cd\u3002\u63a5\u53e3\u8fc7\u65f6\u5fc5\u987b\u52a0 @Deprecated \u6ce8\u89e3\uff0c\u5e76\u6e05\u6670\u5730\u8bf4\u660e\u91c7\u7528\u7684\u65b0\u63a5\u53e3\u6216\u8005\u65b0\u670d\u52a1\u662f\u4ec0\u4e48\u3002 \u3010\u5f3a\u5236\u3011 \u4e0d\u80fd\u4f7f\u7528\u8fc7\u65f6\u7684\u7c7b\u6216\u65b9\u6cd5\u3002 \u8bf4\u660e java.net.URLDecoder \u4e2d\u7684\u65b9\u6cd5 decode(String encodeStr) \u8fd9\u4e2a\u65b9\u6cd5\u5df2\u7ecf\u8fc7\u65f6\uff0c\u5e94\u8be5\u4f7f\u7528\u53cc\u53c2\u6570 decode(String source, String encode) \u3002\u63a5\u53e3\u63d0\u4f9b\u65b9\u65e2\u7136\u660e\u786e\u662f\u8fc7\u65f6\u63a5\u53e3\uff0c\u90a3\u4e48\u6709\u4e49\u52a1\u540c\u65f6\u63d0\u4f9b\u65b0\u7684\u63a5\u53e3\uff1b\u4f5c\u4e3a\u8c03\u7528\u65b9\u6765\u8bf4\uff0c\u6709\u4e49\u52a1\u53bb\u8003\u8bc1\u8fc7\u65f6\u65b9\u6cd5\u7684\u65b0\u5b9e\u73b0\u662f\u4ec0\u4e48\u3002 \u3010\u5f3a\u5236\u3011 Object \u7684 equals \u65b9\u6cd5\u5bb9\u6613\u629b\u7a7a\u6307\u9488\u5f02\u5e38\uff0c\u5e94\u4f7f\u7528\u5e38\u91cf\u6216\u786e\u5b9a\u6709\u503c\u7684\u5bf9\u8c61\u6765\u8c03\u7528 equals \u3002 \u6b63\u4f8b \"test\" . equals ( object ); \u53cd\u4f8b object . equals ( \"test\" ); \u8bf4\u660e \u63a8\u8350\u4f7f\u7528 ` java . util . Objects # equals ` \uff08 ` JDK7 ` \u5f15\u5165\u7684\u5de5\u5177\u7c7b \uff09 \u3010\u5f3a\u5236\u3011 \u6240\u6709\u7684\u76f8\u540c\u7c7b\u578b\u7684\u5305\u88c5\u7c7b\u5bf9\u8c61\u4e4b\u95f4\u503c\u7684\u6bd4\u8f83\uff0c\u5168\u90e8\u4f7f\u7528 equals \u65b9\u6cd5\u6bd4\u8f83\u3002 \u8bf4\u660e \u5bf9\u4e8e Integer var = ? \u5728 -128 \u81f3 127 \u8303\u56f4\u5185\u7684\u8d4b\u503c\uff0c Integer \u5bf9\u8c61\u662f\u5728 IntegerCache.cache \u4ea7\u751f\uff0c\u4f1a\u590d\u7528\u5df2\u6709\u5bf9\u8c61\uff0c\u8fd9\u4e2a\u533a\u95f4\u5185\u7684 Integer \u503c\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 == \u8fdb\u884c\u5224\u65ad\uff0c\u4f46\u662f\u8fd9\u4e2a\u533a\u95f4\u4e4b\u5916\u7684\u6240\u6709\u6570\u636e\uff0c \u90fd\u4f1a\u5728\u5806\u4e0a\u4ea7\u751f\uff0c\u5e76\u4e0d\u4f1a\u590d\u7528\u5df2\u6709\u5bf9\u8c61\uff0c\u8fd9\u662f\u4e00\u4e2a\u5927\u5751\uff0c\u63a8\u8350\u4f7f\u7528 equals \u65b9\u6cd5\u8fdb\u884c\u5224\u65ad\u3002 \u5173\u4e8e\u57fa\u672c\u6570\u636e\u7c7b\u578b\u4e0e\u5305\u88c5\u6570\u636e\u7c7b\u578b\u7684\u4f7f\u7528\u6807\u51c6\u5982\u4e0b\uff1a \u3010\u5f3a\u5236\u3011 \u6240\u6709\u7684 POJO \u7c7b\u5c5e\u6027\u5fc5\u987b\u4f7f\u7528\u5305\u88c5\u6570\u636e\u7c7b\u578b\u3002 \u3010\u5f3a\u5236\u3011 RPC \u65b9\u6cd5\u7684\u8fd4\u56de\u503c\u548c\u53c2\u6570\u5fc5\u987b\u4f7f\u7528\u5305\u88c5\u6570\u636e\u7c7b\u578b\u3002 \u3010\u63a8\u8350\u3011 \u6240\u6709\u7684\u5c40\u90e8\u53d8\u91cf\u4f7f\u7528\u57fa\u672c\u6570\u636e\u7c7b\u578b\u3002 \u8bf4\u660e POJO \u7c7b\u5c5e\u6027\u6ca1\u6709\u521d\u503c\u662f\u63d0\u9192\u4f7f\u7528\u8005\u5728\u9700\u8981\u4f7f\u7528\u65f6\uff0c\u5fc5\u987b\u81ea\u5df1\u663e\u5f0f\u5730\u8fdb\u884c\u8d4b\u503c\uff0c\u4efb\u4f55 NPE \u95ee\u9898\uff0c\u6216\u8005\u5165\u5e93\u68c0\u67e5\uff0c\u90fd\u7531\u4f7f\u7528\u8005\u6765\u4fdd\u8bc1\u3002 \u6b63\u4f8b \u6570\u636e\u5e93\u7684\u67e5\u8be2\u7ed3\u679c\u53ef\u80fd\u662f null \uff0c\u56e0\u4e3a\u81ea\u52a8\u62c6\u7bb1\uff0c\u7528\u57fa\u672c\u6570\u636e\u7c7b\u578b\u63a5\u6536\u6709 NPE \u98ce\u9669\u3002 \u53cd\u4f8b \u6bd4\u5982\u663e\u793a\u6210\u4ea4\u603b\u989d\u6da8\u8dcc\u60c5\u51b5\uff0c\u5373\u6b63\u8d1f x% \uff0c x \u4e3a\u57fa\u672c\u6570\u636e\u7c7b\u578b\uff0c\u8c03\u7528\u7684 RPC \u670d\u52a1\uff0c\u8c03\u7528\u4e0d\u6210\u529f\u65f6\uff0c\u8fd4\u56de\u7684\u662f\u9ed8\u8ba4\u503c\uff0c\u9875\u9762\u663e\u793a\u4e3a 0% \uff0c\u8fd9\u662f\u4e0d\u5408\u7406\u7684\uff0c \u5e94\u8be5\u663e\u793a\u6210\u4e2d\u5212\u7ebf\u3002\u6240\u4ee5\u5305\u88c5\u6570\u636e\u7c7b\u578b\u7684 null \u503c\uff0c\u80fd\u591f\u8868\u793a\u989d\u5916\u7684\u4fe1\u606f\uff0c\u5982\uff1a\u8fdc\u7a0b\u8c03\u7528\u5931\u8d25\uff0c\u5f02\u5e38\u9000\u51fa\u3002 \u3010\u5f3a\u5236\u3011 \u5b9a\u4e49 DO/DTO/VO \u7b49 POJO \u7c7b\u65f6\uff0c\u4e0d\u8981\u8bbe\u5b9a\u4efb\u4f55\u5c5e\u6027\u9ed8\u8ba4\u503c\u3002 \u53cd\u4f8b POJO \u7c7b\u7684 gmtCreate \u9ed8\u8ba4\u503c\u4e3a new Date() \uff0c\u4f46\u662f\u8fd9\u4e2a\u5c5e\u6027\u5728\u6570\u636e\u63d0\u53d6\u65f6\u5e76\u6ca1\u6709\u7f6e\u5165\u5177\u4f53\u503c\uff0c\u5728\u66f4\u65b0\u5176\u5b83\u5b57\u6bb5\u65f6\u53c8\u9644\u5e26\u66f4\u65b0\u4e86\u6b64\u5b57\u6bb5\uff0c\u5bfc\u81f4\u521b\u5efa\u65f6\u95f4\u88ab\u4fee\u6539\u6210\u5f53\u524d\u65f6\u95f4\u3002 \u3010\u5f3a\u5236\u3011 \u5e8f\u5217\u5316\u7c7b\u65b0\u589e\u5c5e\u6027\u65f6\uff0c\u8bf7\u4e0d\u8981\u4fee\u6539 serialVersionUID \u5b57\u6bb5\uff0c\u907f\u514d\u53cd\u5e8f\u5217\u5931\u8d25\uff1b\u5982\u679c\u5b8c\u5168\u4e0d\u517c\u5bb9\u5347\u7ea7\uff0c\u907f\u514d\u53cd\u5e8f\u5217\u5316\u6df7\u4e71\uff0c \u90a3\u4e48\u8bf7\u4fee\u6539 serialVersionUID \u503c\u3002 \u8bf4\u660e \u6ce8\u610f serialVersionUID \u4e0d\u4e00\u81f4\u4f1a\u629b\u51fa\u5e8f\u5217\u5316\u8fd0\u884c\u65f6\u5f02\u5e38\u3002 \u3010\u5f3a\u5236\u3011 \u6784\u9020\u65b9\u6cd5\u91cc\u9762\u7981\u6b62\u52a0\u5165\u4efb\u4f55\u4e1a\u52a1\u903b\u8f91\uff0c\u5982\u679c\u6709\u521d\u59cb\u5316\u903b\u8f91\uff0c\u8bf7\u653e\u5728 init \u65b9\u6cd5\u4e2d\u3002 \u3010\u5f3a\u5236\u3011 POJO \u7c7b\u5fc5\u987b\u5199 toString \u65b9\u6cd5\u3002\u4f7f\u7528 IDE \u4e2d\u7684\u5de5\u5177\uff1asource > generate toString \u65f6\uff0c \u5982\u679c\u7ee7\u627f\u4e86\u53e6\u4e00\u4e2a POJO \u7c7b\uff0c\u6ce8\u610f\u5728\u524d\u9762\u52a0\u4e00\u4e0b super.toString \u3002 \u8bf4\u660e \u5728\u65b9\u6cd5\u6267\u884c\u629b\u51fa\u5f02\u5e38\u65f6\uff0c\u53ef\u4ee5\u76f4\u63a5\u8c03\u7528 POJO \u7684 toString() \u65b9\u6cd5\u6253\u5370\u5176\u5c5e\u6027\u503c\uff0c\u4fbf\u4e8e\u6392\u67e5\u95ee\u9898\u3002 \u3010\u5f3a\u5236\u3011 \u7981\u6b62\u5728 POJO \u7c7b\u4e2d\uff0c\u540c\u65f6\u5b58\u5728\u5bf9\u5e94\u5c5e\u6027 xxx \u7684 isXxx() \u548c getXxx() \u65b9\u6cd5\u3002 \u8bf4\u660e \u6846\u67b6\u5728\u8c03\u7528\u5c5e\u6027 xxx \u7684\u63d0\u53d6\u65b9\u6cd5\u65f6\uff0c\u5e76\u4e0d\u80fd\u786e\u5b9a\u54ea\u4e2a\u65b9\u6cd5\u4e00\u5b9a\u662f\u88ab\u4f18\u5148\u8c03\u7528\u5230\u3002 \u3010\u63a8\u8350\u3011 \u4f7f\u7528\u7d22\u5f15\u8bbf\u95ee\u7528 String \u7684 split \u65b9\u6cd5\u5f97\u5230\u7684\u6570\u7ec4\u65f6\uff0c\u9700\u505a\u6700\u540e\u4e00\u4e2a\u5206\u9694\u7b26\u540e\u6709\u65e0\u5185\u5bb9\u7684\u68c0\u67e5\uff0c \u5426\u5219\u4f1a\u6709\u629b IndexOutOfBoundsException \u7684\u98ce\u9669\u3002 \u8bf4\u660e String str = \"a,b,c,,\" ; String [] ary = str . split ( \",\" ); // \u9884\u671f\u5927\u4e8e 3\uff0c\u7ed3\u679c\u662f 3 System . out . println ( ary . length ); \u3010\u63a8\u8350\u3011 \u5f53\u4e00\u4e2a\u7c7b\u6709\u591a\u4e2a\u6784\u9020\u65b9\u6cd5\uff0c\u6216\u8005\u591a\u4e2a\u540c\u540d\u65b9\u6cd5\uff0c\u8fd9\u4e9b\u65b9\u6cd5\u5e94\u8be5\u6309\u987a\u5e8f\u653e\u7f6e\u5728\u4e00\u8d77\uff0c\u4fbf\u4e8e\u9605\u8bfb\uff0c\u6b64\u6761\u89c4\u5219\u4f18\u5148\u4e8e\u7b2c 16 \u6761\u89c4\u5219\u3002 \u3010\u63a8\u8350\u3011 \u7c7b\u5185\u65b9\u6cd5\u5b9a\u4e49\u7684\u987a\u5e8f\u4f9d\u6b21\u662f\uff1a\u516c\u6709\u65b9\u6cd5\u6216\u4fdd\u62a4\u65b9\u6cd5 > \u79c1\u6709\u65b9\u6cd5 > getter/setter \u65b9\u6cd5\u3002 \u8bf4\u660e \u516c\u6709\u65b9\u6cd5\u662f\u7c7b\u7684\u8c03\u7528\u8005\u548c\u7ef4\u62a4\u8005\u6700\u5173\u5fc3\u7684\u65b9\u6cd5\uff0c\u9996\u5c4f\u5c55\u793a\u6700\u597d\uff1b\u4fdd\u62a4\u65b9\u6cd5\u867d\u7136\u53ea\u662f\u5b50\u7c7b\u5173\u5fc3\uff0c\u4e5f\u53ef\u80fd\u662f\u201c\u6a21\u677f\u8bbe\u8ba1\u6a21\u5f0f\u201d\u4e0b\u7684\u6838\u5fc3\u65b9\u6cd5\uff1b \u800c\u79c1\u6709\u65b9\u6cd5\u5916\u90e8\u4e00\u822c\u4e0d\u9700\u8981\u7279\u522b\u5173\u5fc3\uff0c\u662f\u4e00\u4e2a\u9ed1\u76d2\u5b9e\u73b0\uff1b\u56e0\u4e3a\u627f\u8f7d\u7684\u4fe1\u606f\u4ef7\u503c\u8f83\u4f4e\uff0c\u6240\u6709 Service \u548c DAO \u7684 getter/setter \u65b9\u6cd5\u653e\u5728\u7c7b\u4f53\u6700\u540e\u3002 \u3010\u63a8\u8350\u3011 setter \u65b9\u6cd5\u4e2d\uff0c\u53c2\u6570\u540d\u79f0\u4e0e\u7c7b\u6210\u5458\u53d8\u91cf\u540d\u79f0\u4e00\u81f4\uff0cthis.\u6210\u5458\u540d = \u53c2\u6570\u540d\u3002\u5728 getter/setter \u65b9\u6cd5\u4e2d\uff0c\u4e0d\u8981\u589e\u52a0\u4e1a\u52a1\u903b\u8f91\uff0c\u589e\u52a0\u6392\u67e5\u95ee\u9898\u7684\u96be\u5ea6\u3002 \u53cd\u4f8b public Integer getData () { if ( condition ) { return this . data + 100 ; } else { return this . data - 100 ; } } \u3010\u63a8\u8350\u3011 \u5faa\u73af\u4f53\u5185\uff0c\u5b57\u7b26\u4e32\u7684\u8fde\u63a5\u65b9\u5f0f\uff0c\u4f7f\u7528 StringBuilder \u7684 append \u65b9\u6cd5\u8fdb\u884c\u6269\u5c55\u3002 \u8bf4\u660e \u4e0b\u4f8b\u4e2d\uff0c\u53cd\u7f16\u8bd1\u51fa\u7684\u5b57\u8282\u7801\u6587\u4ef6\u663e\u793a\u6bcf\u6b21\u5faa\u73af\u90fd\u4f1a new \u51fa\u4e00\u4e2a StringBuilder \u5bf9\u8c61\uff0c\u7136\u540e\u8fdb\u884c append \u64cd\u4f5c\uff0c \u6700\u540e\u901a\u8fc7 toString \u65b9\u6cd5\u8fd4\u56de String \u5bf9\u8c61\uff0c\u9020\u6210\u5185\u5b58\u8d44\u6e90\u6d6a\u8d39\u3002 String str = \"start\" ; for ( int i = 0 ; i < 100 ; i ++ ) { str = str + \"hello\" ; } \u3010\u63a8\u8350\u3011 final \u53ef\u4ee5\u58f0\u660e\u7c7b\u3001\u6210\u5458\u53d8\u91cf\u3001\u65b9\u6cd5\u3001\u4ee5\u53ca\u672c\u5730\u53d8\u91cf\uff0c\u4e0b\u5217\u60c5\u51b5\u4f7f\u7528 final \u5173\u952e\u5b57\uff1a \u4e0d\u5141\u8bb8\u88ab\u7ee7\u627f\u7684\u7c7b\uff0c\u5982\uff1a String \u7c7b\u3002 \u4e0d\u5141\u8bb8\u4fee\u6539\u5f15\u7528\u7684\u57df\u5bf9\u8c61\u3002 \u4e0d\u5141\u8bb8\u88ab\u91cd\u5199\u7684\u65b9\u6cd5\uff0c\u5982\uff1a POJO \u7c7b\u7684 setter \u65b9\u6cd5\u3002 \u4e0d\u5141\u8bb8\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u91cd\u65b0\u8d4b\u503c\u7684\u5c40\u90e8\u53d8\u91cf\u3002 \u907f\u514d\u4e0a\u4e0b\u6587\u91cd\u590d\u4f7f\u7528\u4e00\u4e2a\u53d8\u91cf\uff0c\u4f7f\u7528 final \u63cf\u8ff0\u53ef\u4ee5\u5f3a\u5236\u91cd\u65b0\u5b9a\u4e49\u4e00\u4e2a\u53d8\u91cf\uff0c\u65b9\u4fbf\u66f4\u597d\u5730\u8fdb\u884c\u91cd\u6784\u3002 \u3010\u63a8\u8350\u3011 \u614e\u7528 Object \u7684 clone \u65b9\u6cd5\u6765\u62f7\u8d1d\u5bf9\u8c61\u3002 \u8bf4\u660e \u5bf9\u8c61\u7684 clone \u65b9\u6cd5\u9ed8\u8ba4\u662f\u6d45\u62f7\u8d1d\uff0c\u82e5\u60f3\u5b9e\u73b0\u6df1\u62f7\u8d1d\u9700\u8981\u91cd\u5199 clone \u65b9\u6cd5\u5b9e\u73b0\u57df\u5bf9\u8c61\u7684\u6df1\u5ea6\u904d\u5386\u5f0f\u62f7\u8d1d\u3002 \u3010\u63a8\u8350\u3011 \u7c7b\u6210\u5458\u4e0e\u65b9\u6cd5\u8bbf\u95ee\u63a7\u5236\u4ece\u4e25\uff1a \u5982\u679c\u4e0d\u5141\u8bb8\u5916\u90e8\u76f4\u63a5\u901a\u8fc7 new \u6765\u521b\u5efa\u5bf9\u8c61\uff0c\u90a3\u4e48\u6784\u9020\u65b9\u6cd5\u5fc5\u987b\u662f private \u3002 \u5de5\u5177\u7c7b\u4e0d\u5141\u8bb8\u6709 public \u6216 default \u6784\u9020\u65b9\u6cd5\u3002 \u7c7b\u975e static \u6210\u5458\u53d8\u91cf\u5e76\u4e14\u4e0e\u5b50\u7c7b\u5171\u4eab\uff0c\u5fc5\u987b\u662f protected \u3002 \u7c7b\u975e static \u6210\u5458\u53d8\u91cf\u5e76\u4e14\u4ec5\u5728\u672c\u7c7b\u4f7f\u7528\uff0c\u5fc5\u987b\u662f private \u3002 \u7c7b static \u6210\u5458\u53d8\u91cf\u5982\u679c\u4ec5\u5728\u672c\u7c7b\u4f7f\u7528\uff0c\u5fc5\u987b\u662f private \u3002 \u82e5\u662f static \u6210\u5458\u53d8\u91cf\uff0c\u8003\u8651\u662f\u5426\u4e3a final \u3002 \u7c7b\u6210\u5458\u65b9\u6cd5\u53ea\u4f9b\u7c7b\u5185\u90e8\u8c03\u7528\uff0c\u5fc5\u987b\u662f private \u3002 \u7c7b\u6210\u5458\u65b9\u6cd5\u53ea\u5bf9\u7ee7\u627f\u7c7b\u516c\u5f00\uff0c\u90a3\u4e48\u9650\u5236\u4e3a protected \u3002 \u8bf4\u660e \u4efb\u4f55\u7c7b\u3001\u65b9\u6cd5\u3001\u53c2\u6570\u3001\u53d8\u91cf\uff0c\u4e25\u63a7\u8bbf\u95ee\u8303\u56f4\u3002\u8fc7\u4e8e\u5bbd\u6cdb\u7684\u8bbf\u95ee\u8303\u56f4\uff0c\u4e0d\u5229\u4e8e\u6a21\u5757\u89e3\u8026\u3002 \u601d\u8003 \u5982\u679c\u662f\u4e00\u4e2a private \u7684\u65b9\u6cd5\uff0c\u60f3\u5220\u9664\u5c31\u5220\u9664\uff0c\u53ef\u662f\u4e00\u4e2a public \u7684 Service \u6210\u5458\u65b9\u6cd5\u6216\u6210\u5458\u53d8\u91cf\uff0c\u5220\u9664\u4e00\u4e0b\uff0c\u4e0d\u5f97\u624b\u5fc3\u5192\u70b9\u6c57\u5417\uff1f\u53d8\u91cf\u50cf\u81ea\u5df1\u7684\u5c0f\u5b69\uff0c\u5c3d\u91cf\u5728\u81ea\u5df1\u7684\u89c6\u7ebf\u5185\uff0c\u53d8\u91cf\u4f5c\u7528\u57df\u592a\u5927\uff0c\u65e0\u9650\u5236\u7684\u5230\u5904\u8dd1\uff0c\u90a3\u4e48\u4f60\u4f1a\u62c5\u5fc3\u7684\u3002","title":"OOP\u89c4\u7ea6"},{"location":"standard/language_rules/#_5","text":"\u3010\u5f3a\u5236\u3011 \u5173\u4e8e hashCode \u548c equals \u7684\u5904\u7406\uff0c\u9075\u5faa\u5982\u4e0b\u89c4\u5219\uff1a \u53ea\u8981\u91cd\u5199 equals \uff0c\u5c31\u5fc5\u987b\u91cd\u5199 hashCode \u3002 \u56e0\u4e3a Set \u5b58\u50a8\u7684\u662f\u4e0d\u91cd\u590d\u7684\u5bf9\u8c61\uff0c\u4f9d\u636e hashCode \u548c equals \u8fdb\u884c\u5224\u65ad\uff0c\u6240\u4ee5 Set \u5b58\u50a8\u7684\u5bf9\u8c61\u5fc5\u987b\u91cd\u5199\u8fd9\u4e24\u4e2a\u65b9\u6cd5\u3002 \u5982\u679c\u81ea\u5b9a\u4e49\u5bf9\u8c61\u4f5c\u4e3a Map \u7684\u952e\uff0c\u90a3\u4e48\u5fc5\u987b\u91cd\u5199 hashCode \u548c equals \u3002 \u8bf4\u660e String \u91cd\u5199\u4e86 hashCode \u548c equals \u65b9\u6cd5\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u975e\u5e38\u6109\u5feb\u5730\u4f7f\u7528 String \u5bf9\u8c61\u4f5c\u4e3a key \u6765\u4f7f\u7528\u3002 \u3010\u5f3a\u5236\u3011 ArrayList \u7684 subList \u7ed3\u679c\u4e0d\u53ef\u5f3a\u8f6c\u6210 ArrayList \uff0c\u5426\u5219\u4f1a\u629b\u51fa ClassCastException \u5f02\u5e38\uff0c\u5373 java.util.RandomAccessSubList cannot be cast to java.util.ArrayList \u3002 \u8bf4\u660e subList \u8fd4\u56de\u7684\u662f ArrayList \u7684\u5185\u90e8\u7c7b subList \uff0c\u5e76\u4e0d\u662f ArrayList \u800c\u662f ArrayList \u7684\u4e00\u4e2a\u89c6\u56fe\uff0c \u5bf9\u4e8e subList \u5b50\u5217\u8868\u7684\u6240\u6709\u64cd\u4f5c\u6700\u7ec8\u4f1a\u53cd\u6620\u5230\u539f\u5217\u8868\u4e0a\u3002 \u3010\u5f3a\u5236\u3011 \u5728 subList \u573a\u666f\u4e2d\uff0c\u9ad8\u5ea6\u6ce8\u610f\u5bf9\u539f\u96c6\u5408\u5143\u7d20\u7684\u589e\u52a0\u6216\u5220\u9664\uff0c \u5747\u4f1a\u5bfc\u81f4\u5b50\u5217\u8868\u7684\u904d\u5386\u3001\u589e\u52a0\u3001\u5220\u9664\u4ea7\u751f ConcurrentModificationException \u5f02\u5e38\u3002 \u3010\u5f3a\u5236\u3011 \u4f7f\u7528\u96c6\u5408\u8f6c\u6570\u7ec4\u7684\u65b9\u6cd5\uff0c\u5fc5\u987b\u4f7f\u7528\u96c6\u5408\u7684 toArray(T[] array) \uff0c\u4f20\u5165\u7684\u662f\u7c7b\u578b\u5b8c\u5168\u4e00\u6837\u7684\u6570\u7ec4\uff0c\u5927\u5c0f\u5c31\u662f list.size() \u3002 \u8bf4\u660e \u4f7f\u7528 toArray \u5e26\u53c2\u65b9\u6cd5\uff0c\u5165\u53c2\u5206\u914d\u7684\u6570\u7ec4\u7a7a\u95f4\u4e0d\u591f\u5927\u65f6\uff0c toArray \u65b9\u6cd5\u5185\u90e8\u5c06\u91cd\u65b0\u5206\u914d\u5185\u5b58\u7a7a\u95f4\uff0c\u5e76\u8fd4\u56de\u65b0\u6570\u7ec4\u5730\u5740\uff1b \u5982\u679c\u6570\u7ec4\u5143\u7d20\u4e2a\u6570\u5927\u4e8e\u5b9e\u9645\u6240\u9700\uff0c\u4e0b\u6807\u4e3a[ list.size() ] \u7684\u6570\u7ec4\u5143\u7d20\u5c06\u88ab\u7f6e\u4e3a null \uff0c\u5176\u5b83\u6570\u7ec4\u5143\u7d20\u4fdd\u6301\u539f\u503c\uff0c\u56e0\u6b64\u6700\u597d\u5c06\u65b9\u6cd5\u5165\u53c2\u6570\u7ec4\u5927\u5c0f\u5b9a\u4e49\u4e0e\u96c6\u5408\u5143\u7d20\u4e2a\u6570\u4e00\u81f4\u3002 \u6b63\u4f8b List < String > list = new ArrayList < String > ( 2 ); list . add ( \"guan\" ); list . add ( \"bao\" ); String [] array = new String [ list . size () ] ; array = list . toArray ( array ); \u53cd\u4f8b \u76f4\u63a5\u4f7f\u7528 toArray \u65e0\u53c2\u65b9\u6cd5\u5b58\u5728\u95ee\u9898\uff0c\u6b64\u65b9\u6cd5\u8fd4\u56de\u503c\u53ea\u80fd\u662f Object[] \u7c7b\uff0c \u82e5\u5f3a\u8f6c\u5176\u5b83\u7c7b\u578b\u6570\u7ec4\u5c06\u51fa\u73b0 ClassCastException \u9519\u8bef\u3002 \u3010\u5f3a\u5236\u3011 \u4f7f\u7528\u5de5\u5177\u7c7b Arrays.asList() \u628a\u6570\u7ec4\u8f6c\u6362\u6210\u96c6\u5408\u65f6\uff0c\u4e0d\u80fd\u4f7f\u7528\u5176\u4fee\u6539\u96c6\u5408\u76f8\u5173\u7684\u65b9\u6cd5\uff0c \u5b83\u7684 add/remove/clear \u65b9\u6cd5\u4f1a\u629b\u51fa UnsupportedOperationException \u5f02\u5e38\u3002 \u8bf4\u660e asList \u7684\u8fd4\u56de\u5bf9\u8c61\u662f\u4e00\u4e2a Arrays \u5185\u90e8\u7c7b\uff0c\u5e76\u6ca1\u6709\u5b9e\u73b0\u96c6\u5408\u7684\u4fee\u6539\u65b9\u6cd5\u3002 Arrays.asList \u4f53\u73b0\u7684\u662f\u9002\u914d\u5668\u6a21\u5f0f\uff0c\u53ea\u662f\u8f6c\u6362\u63a5\u53e3\uff0c\u540e\u53f0\u7684\u6570\u636e\u4ecd\u662f\u6570\u7ec4\u3002 String [] str = new String [] { \"you\" , \"wu\" }; List list = Arrays . asList ( str ); \u7b2c\u4e00\u79cd\u60c5\u51b5 \uff1a list . add ( \"yangguanbao\" ); \u8fd0\u884c\u65f6\u5f02\u5e38 \u3002 \u7b2c\u4e8c\u79cd\u60c5\u51b5 \uff1a str [ 0 ] = \"gujin\" ; \u90a3\u4e48 list . get ( 0 ) \u4e5f\u4f1a\u968f\u4e4b\u4fee\u6539 \u3002 \u3010\u5f3a\u5236\u3011 \u6cdb\u578b\u901a\u914d\u7b26 <? extends T> \u6765\u63a5\u6536\u8fd4\u56de\u7684\u6570\u636e\uff0c\u6b64\u5199\u6cd5\u7684\u6cdb\u578b\u96c6\u5408\u4e0d\u80fd\u4f7f\u7528 add \u65b9\u6cd5\uff0c \u800c <? super T> \u4e0d\u80fd\u4f7f\u7528 get \u65b9\u6cd5\uff0c\u4f5c\u4e3a\u63a5\u53e3\u8c03\u7528\u8d4b\u503c\u65f6\u6613\u51fa\u9519\u3002 \u8bf4\u660e \u6269\u5c55\u8bf4\u4e00\u4e0b PECS(Producer Extends Consumer Super) \u539f\u5219\uff1a \u7b2c\u4e00\u3001\u9891\u7e41\u5f80\u5916\u8bfb\u53d6\u5185\u5bb9\u7684\uff0c\u9002\u5408\u7528 <? extends T> \u3002 \u7b2c\u4e8c\u3001\u7ecf\u5e38\u5f80\u91cc\u63d2\u5165\u7684\uff0c\u9002\u5408\u7528 <? super T> \u3002 \u3010\u5f3a\u5236\u3011 \u4e0d\u8981\u5728 foreach \u5faa\u73af\u91cc\u8fdb\u884c\u5143\u7d20\u7684 remove/add \u64cd\u4f5c\u3002 remove \u5143\u7d20\u8bf7\u4f7f\u7528 Iterator \u65b9\u5f0f\uff0c \u5982\u679c\u5e76\u53d1\u64cd\u4f5c\uff0c\u9700\u8981\u5bf9 Iterator \u5bf9\u8c61\u52a0\u9501\u3002 \u6b63\u4f8b List < String > list = new ArrayList <> (); list . add ( \"1\" ); list . add ( \"2\" ); Iterator < String > iterator = list . iterator (); while ( iterator . hasNext ()) { String item = iterator . next (); if ( \u5220\u9664\u5143\u7d20\u7684\u6761\u4ef6 ) { iterator . remove (); } } \u53cd\u4f8b for ( String item : list ) { if ( \"1\" . equals ( item )) { list . remove ( item ); } } \u601d\u8003 \u4ee5\u4e0a\u4ee3\u7801\u7684\u6267\u884c\u7ed3\u679c\u80af\u5b9a\u4f1a\u51fa\u4e4e\u5927\u5bb6\u7684\u610f\u6599\uff0c\u90a3\u4e48\u8bd5\u4e00\u4e0b\u628a\u201c1\u201d\u6362\u6210\u201c2\u201d\uff0c\u4f1a\u662f\u540c\u6837\u7684\u7ed3\u679c\u5417\uff1f \u3010\u5f3a\u5236\u3011 \u5728 JDK7 \u7248\u672c\u53ca\u4ee5\u4e0a\uff0c Comparator \u5b9e\u73b0\u7c7b\u8981\u6ee1\u8db3\u5982\u4e0b\u4e09\u4e2a\u6761\u4ef6\uff0c \u4e0d\u7136 Arrays.sort \uff0c Collections.sort \u4f1a\u62a5 IllegalArgumentException \u5f02\u5e38\u3002 \u8bf4\u660e \u4e09\u4e2a\u6761\u4ef6\u5982\u4e0b\uff1a 1. x\uff0cy \u7684\u6bd4\u8f83\u7ed3\u679c\u548c y\uff0cx \u7684\u6bd4\u8f83\u7ed3\u679c\u76f8\u53cd\u3002 2. x>y \uff0c y>z \uff0c\u5219 x>z \u3002 3. x=y \uff0c\u5219 x \uff0c z \u6bd4\u8f83\u7ed3\u679c\u548c y \uff0c z \u6bd4\u8f83\u7ed3\u679c\u76f8\u540c\u3002 \u53cd\u4f8b \u4e0b\u4f8b\u4e2d\u6ca1\u6709\u5904\u7406\u76f8\u7b49\u7684\u60c5\u51b5\uff0c\u5b9e\u9645\u4f7f\u7528\u4e2d\u53ef\u80fd\u4f1a\u51fa\u73b0\u5f02\u5e38\uff1a new Comparator < Student > () { @Override public int compare ( Student o1 , Student o2 ) { return o1 . getId () > o2 . getId () ? 1 : - 1 ; } }; \u3010\u63a8\u8350\u3011 \u96c6\u5408\u6cdb\u578b\u5b9a\u4e49\u65f6\uff0c\u5728 JDK7 \u53ca\u4ee5\u4e0a\uff0c\u4f7f\u7528 diamond \u8bed\u6cd5\u6216\u5168\u7701\u7565\u3002 \u8bf4\u660e \u83f1\u5f62\u6cdb\u578b\uff0c\u5373 diamond \uff0c\u76f4\u63a5\u4f7f\u7528 <> \u6765\u6307\u4ee3\u524d\u8fb9\u5df2\u7ecf\u6307\u5b9a\u7684\u7c7b\u578b\u3002 \u6b63\u4f8b // <> diamond \u65b9\u5f0f HashMap < String , String > userCache = new HashMap <> ( 16 ); // \u5168\u7701\u7565\u65b9\u5f0f ArrayList < User > users = new ArrayList ( 10 ); \u3010\u63a8\u8350\u3011 \u96c6\u5408\u521d\u59cb\u5316\u65f6\uff0c\u6307\u5b9a\u96c6\u5408\u521d\u59cb\u503c\u5927\u5c0f\u3002 \u8bf4\u660e HashMap \u4f7f\u7528 HashMap(int initialCapacity) \u521d\u59cb\u5316\u3002 \u6b63\u4f8b initialCapacity = (\u9700\u8981\u5b58\u50a8\u7684\u5143\u7d20\u4e2a\u6570 / \u8d1f\u8f7d\u56e0\u5b50) + 1 \u3002\u6ce8\u610f\u8d1f\u8f7d\u56e0\u5b50\uff08\u5373 loader factor\uff09\u9ed8\u8ba4\u4e3a 0.75 \uff0c \u5982\u679c\u6682\u65f6\u65e0\u6cd5\u786e\u5b9a\u521d\u59cb\u503c\u5927\u5c0f\uff0c\u8bf7\u8bbe\u7f6e\u4e3a 16 \uff08\u5373\u9ed8\u8ba4\u503c\uff09\u3002 \u53cd\u4f8b HashMap \u9700\u8981\u653e\u7f6e 1024 \u4e2a\u5143\u7d20\uff0c\u7531\u4e8e\u6ca1\u6709\u8bbe\u7f6e\u5bb9\u91cf\u521d\u59cb\u5927\u5c0f\uff0c\u968f\u7740\u5143\u7d20\u4e0d\u65ad\u589e\u52a0\uff0c\u5bb9\u91cf 7 \u6b21\u88ab\u8feb\u6269\u5927\uff0c resize \u9700\u8981\u91cd\u5efa hash \u8868\uff0c\u4e25\u91cd\u5f71\u54cd\u6027\u80fd\u3002 \u3010\u63a8\u8350\u3011 \u4f7f\u7528 entrySet \u904d\u5386 Map \u7c7b\u96c6\u5408 KV \uff0c\u800c\u4e0d\u662f keySet \u65b9\u5f0f\u8fdb\u884c\u904d\u5386\u3002 \u8bf4\u660e keySet \u5176\u5b9e\u662f\u904d\u5386\u4e86 2 \u6b21\uff0c\u4e00\u6b21\u662f\u8f6c\u4e3a Iterator \u5bf9\u8c61\uff0c\u53e6\u4e00\u6b21\u662f\u4ece hashMap \u4e2d\u53d6\u51fa key \u6240\u5bf9\u5e94\u7684 value . \u800c entrySet \u53ea\u662f\u904d\u5386\u4e86\u4e00\u6b21\u5c31\u628a key \u548c value \u90fd\u653e\u5230\u4e86 entry \u4e2d\uff0c\u6548\u7387\u66f4\u9ad8\u3002 \u5982\u679c\u662f JDK8 \uff0c\u4f7f\u7528 Map.foreach \u65b9\u6cd5\u3002 \u6b63\u4f8b values() \u8fd4\u56de\u7684\u662f V \u503c\u96c6\u5408\uff0c\u662f\u4e00\u4e2a list \u96c6\u5408\u5bf9\u8c61\uff1b keySet() \u8fd4\u56de\u7684\u662f K \u503c\u96c6\u5408\uff0c\u662f\u4e00\u4e2a Set \u96c6\u5408\u5bf9\u8c61\uff1b entrySet() \u8fd4\u56de\u7684\u662f K-V \u503c\u7ec4\u5408\u96c6\u5408\u3002 \u3010\u63a8\u8350\u3011 \u9ad8\u5ea6\u6ce8\u610f Map \u7c7b\u96c6\u5408 K/V \u80fd\u4e0d\u80fd\u5b58\u50a8 null \u503c\u7684\u60c5\u51b5\uff0c\u5982\u4e0b\u8868\u683c\uff1a | \u96c6\u5408\u7c7b | Key (nullable) | Value(nullable) | Super | \u8bf4\u660e | | :-------------------| :------------------| :-----------------| :---------------| :------------------------| | Hashtable | :material-close: | :material-close: | Dictionary | \u7ebf\u7a0b\u5b89\u5168 | | ConcurrentHashMap | :material-close: | :material-close: | AbstractMap | \u9501\u5206\u6bb5\u6280\u672f\uff08JDK8:CAS\uff09 | | TreeMap | :material-close: | :material-check: | AbstractMap | \u7ebf\u7a0b\u4e0d\u5b89\u5168 | | HashMap | :material-check: | :material-check: | AbstractMap | \u7ebf\u7a0b\u4e0d\u5b89\u5168 | !!! fail \"\u53cd\u4f8b\" \u7531\u4e8e `HashMap` \u7684\u5e72\u6270\uff0c\u5f88\u591a\u4eba\u8ba4\u4e3a `ConcurrentHashMap` \u662f\u53ef\u4ee5\u7f6e\u5165 `null` \u503c\uff0c \u800c\u4e8b\u5b9e\u4e0a\uff0c\u5b58\u50a8 `null` \u503c\u65f6\u4f1a\u629b\u51fa `NPE` \u5f02\u5e38\u3002 \u3010\u53c2\u8003\u3011 \u5408\u7406\u5229\u7528\u597d\u96c6\u5408\u7684\u6709\u5e8f\u6027( sort )\u548c\u7a33\u5b9a\u6027( order )\uff0c\u907f\u514d\u96c6\u5408\u7684\u65e0\u5e8f\u6027( unsort )\u548c\u4e0d\u7a33\u5b9a\u6027( unorder) \u5e26\u6765\u7684\u8d1f\u9762\u5f71\u54cd\u3002 \u8bf4\u660e \u6709\u5e8f\u6027\u662f\u6307\u904d\u5386\u7684\u7ed3\u679c\u662f\u6309\u67d0\u79cd\u6bd4\u8f83\u89c4\u5219\u4f9d\u6b21\u6392\u5217\u7684\u3002\u7a33\u5b9a\u6027\u6307\u96c6\u5408\u6bcf\u6b21\u904d\u5386\u7684\u5143\u7d20\u6b21\u5e8f\u662f\u4e00\u5b9a\u7684\u3002\u5982\uff1a ArrayList \u662f order/unsort \uff1b HashMap \u662f unorder/unsort \uff1b TreeSet \u662f order/sort \u3002 \u3010\u53c2\u8003\u3011 \u5229\u7528 Set \u5143\u7d20\u552f\u4e00\u7684\u7279\u6027\uff0c\u53ef\u4ee5\u5feb\u901f\u5bf9\u4e00\u4e2a\u96c6\u5408\u8fdb\u884c\u53bb\u91cd\u64cd\u4f5c\uff0c\u907f\u514d\u4f7f\u7528 List \u7684 contains \u65b9\u6cd5\u8fdb\u884c\u904d\u5386\u3001\u5bf9\u6bd4\u3001\u53bb\u91cd\u64cd\u4f5c\u3002","title":"\u96c6\u5408\u5904\u7406"},{"location":"standard/language_rules/#_6","text":"\u3010\u5f3a\u5236\u3011 \u83b7\u53d6\u5355\u4f8b\u5bf9\u8c61\u9700\u8981\u4fdd\u8bc1\u7ebf\u7a0b\u5b89\u5168\uff0c\u5176\u4e2d\u7684\u65b9\u6cd5\u4e5f\u8981\u4fdd\u8bc1\u7ebf\u7a0b\u5b89\u5168\u3002 !!! note \"\u8bf4\u660e\" \u8d44\u6e90\u9a71\u52a8\u7c7b\u3001\u5de5\u5177\u7c7b\u3001\u5355\u4f8b\u5de5\u5382\u7c7b\u90fd\u9700\u8981\u6ce8\u610f\u3002 \u3010\u5f3a\u5236\u3011 \u521b\u5efa\u7ebf\u7a0b\u6216\u7ebf\u7a0b\u6c60\u65f6\u8bf7\u6307\u5b9a\u6709\u610f\u4e49\u7684\u7ebf\u7a0b\u540d\u79f0\uff0c\u65b9\u4fbf\u51fa\u9519\u65f6\u56de\u6eaf\u3002 \u6b63\u4f8b public class TimerTaskThread extends Thread { public TimerTaskThread () { super . setName ( \"TimerTaskThread\" ); ... } } \u3010\u5f3a\u5236\u3011 \u7ebf\u7a0b\u8d44\u6e90\u5fc5\u987b\u901a\u8fc7\u7ebf\u7a0b\u6c60\u63d0\u4f9b\uff0c\u4e0d\u5141\u8bb8\u5728\u5e94\u7528\u4e2d\u81ea\u884c\u663e\u5f0f\u521b\u5efa\u7ebf\u7a0b\u3002 \u8bf4\u660e \u4f7f\u7528\u7ebf\u7a0b\u6c60\u7684\u597d\u5904\u662f\u51cf\u5c11\u5728\u521b\u5efa\u548c\u9500\u6bc1\u7ebf\u7a0b\u4e0a\u6240\u6d88\u8017\u7684\u65f6\u95f4\u4ee5\u53ca\u7cfb\u7edf\u8d44\u6e90\u7684\u5f00\u9500\uff0c\u89e3\u51b3\u8d44\u6e90\u4e0d\u8db3\u7684\u95ee\u9898\u3002\u5982\u679c\u4e0d\u4f7f\u7528\u7ebf\u7a0b\u6c60\uff0c\u6709\u53ef\u80fd\u9020\u6210\u7cfb\u7edf\u521b\u5efa\u5927\u91cf\u540c\u7c7b\u7ebf\u7a0b\u800c\u5bfc\u81f4\u6d88\u8017\u5b8c\u5185\u5b58\u6216\u8005\u201c\u8fc7\u5ea6\u5207\u6362\u201d\u7684\u95ee\u9898\u3002 \u3010\u5f3a\u5236\u3011 \u7ebf\u7a0b\u6c60\u4e0d\u5141\u8bb8\u4f7f\u7528 Executors \u53bb\u521b\u5efa\uff0c\u800c\u662f\u901a\u8fc7 ThreadPoolExecutor \u7684\u65b9\u5f0f\uff0c\u8fd9\u6837\u7684\u5904\u7406\u65b9\u5f0f\u8ba9\u5199\u7684\u540c\u5b66\u66f4\u52a0\u660e\u786e\u7ebf\u7a0b\u6c60\u7684\u8fd0\u884c\u89c4\u5219\uff0c\u89c4\u907f\u8d44\u6e90\u8017\u5c3d\u7684\u98ce\u9669\u3002 \u8bf4\u660e Executors \u8fd4\u56de\u7684\u7ebf\u7a0b\u6c60\u5bf9\u8c61\u7684\u5f0a\u7aef\u5982\u4e0b\uff1a 1. FixedThreadPool \u548c SingleThreadPool: \u5141\u8bb8\u7684\u8bf7\u6c42\u961f\u5217\u957f\u5ea6\u4e3a Integer.MAX_VALUE\uff0c\u53ef\u80fd\u4f1a\u5806\u79ef\u5927\u91cf\u7684\u8bf7\u6c42\uff0c\u4ece\u800c\u5bfc\u81f4 OOM\u3002 2. CachedThreadPool \u548c ScheduledThreadPool: \u5141\u8bb8\u7684\u521b\u5efa\u7ebf\u7a0b\u6570\u91cf\u4e3a Integer.MAX_VALUE\uff0c\u53ef\u80fd\u4f1a\u521b\u5efa\u5927\u91cf\u7684\u7ebf\u7a0b\uff0c\u4ece\u800c\u5bfc\u81f4 OOM\u3002 \u3010\u5f3a\u5236\u3011 SimpleDateFormat \u662f\u7ebf\u7a0b\u4e0d\u5b89\u5168\u7684\u7c7b\uff0c\u4e00\u822c\u4e0d\u8981\u5b9a\u4e49\u4e3a static \u53d8\u91cf\uff0c\u5982\u679c\u5b9a\u4e49\u4e3astatic\uff0c \u5fc5\u987b\u52a0\u9501\uff0c\u6216\u8005\u4f7f\u7528 DateUtils \u5de5\u5177\u7c7b\u3002 \u6b63\u4f8b private static final ThreadLocal < DateFormat > df = new ThreadLocal < DateFormat > () { @Override protected DateFormat initialValue () { return new SimpleDateFormat ( \"yyyy-MM-dd\" ); } }; \u8bf4\u660e \u5982\u679c\u662f JDK8 \u7684\u5e94\u7528\uff0c\u53ef\u4ee5\u4f7f\u7528 Instant \u4ee3\u66ff Date\uff0cLocalDateTime \u4ee3\u66ff Calendar\uff0c DateTimeFormatter \u4ee3\u66ff SimpleDateFormat\uff0c \u5b98\u65b9\u7ed9\u51fa\u7684\u89e3\u91ca\uff1asimple beautiful strong immutable thread-safe\u3002 \u3010\u5f3a\u5236\u3011 \u9ad8\u5e76\u53d1\u65f6\uff0c\u540c\u6b65\u8c03\u7528\u5e94\u8be5\u53bb\u8003\u91cf\u9501\u7684\u6027\u80fd\u635f\u8017\u3002\u80fd\u7528\u65e0\u9501\u6570\u636e\u7ed3\u6784\uff0c\u5c31\u4e0d\u8981\u7528\u9501\uff1b\u80fd\u9501\u533a\u5757\uff0c\u5c31\u4e0d\u8981\u9501\u6574\u4e2a\u65b9\u6cd5\u4f53\uff1b\u80fd\u7528\u5bf9\u8c61\u9501\uff0c\u5c31\u4e0d\u8981\u7528\u7c7b\u9501\u3002 \u8bf4\u660e \u5c3d\u53ef\u80fd\u4f7f\u52a0\u9501\u7684\u4ee3\u7801\u5757\u5de5\u4f5c\u91cf\u5c3d\u53ef\u80fd\u7684\u5c0f\uff0c\u907f\u514d\u5728\u9501\u4ee3\u7801\u5757\u4e2d\u8c03\u7528 RPC \u65b9\u6cd5\u3002 \u3010\u5f3a\u5236\u3011 \u5bf9\u591a\u4e2a\u8d44\u6e90\u3001\u6570\u636e\u5e93\u8868\u3001\u5bf9\u8c61\u540c\u65f6\u52a0\u9501\u65f6\uff0c\u9700\u8981\u4fdd\u6301\u4e00\u81f4\u7684\u52a0\u9501\u987a\u5e8f\uff0c\u5426\u5219\u53ef\u80fd\u4f1a\u9020\u6210\u6b7b\u9501\u3002 \u8bf4\u660e \u7ebf\u7a0b\u4e00\u9700\u8981\u5bf9\u8868 A\u3001B\u3001C \u4f9d\u6b21\u5168\u90e8\u52a0\u9501\u540e\u624d\u53ef\u4ee5\u8fdb\u884c\u66f4\u65b0\u64cd\u4f5c\uff0c\u90a3\u4e48\u7ebf\u7a0b\u4e8c\u7684\u52a0\u9501\u987a\u5e8f\u4e5f\u5fc5\u987b\u662f A\u3001B\u3001C\uff0c\u5426\u5219\u53ef\u80fd\u51fa\u73b0\u6b7b\u9501\u3002 \u3010\u5f3a\u5236\u3011 \u5e76\u53d1\u4fee\u6539\u540c\u4e00\u8bb0\u5f55\u65f6\uff0c\u907f\u514d\u66f4\u65b0\u4e22\u5931\uff0c\u9700\u8981\u52a0\u9501\u3002\u8981\u4e48\u5728\u5e94\u7528\u5c42\u52a0\u9501\uff0c\u8981\u4e48\u5728\u7f13\u5b58\u52a0\u9501\uff0c\u8981\u4e48\u5728\u6570\u636e\u5e93\u5c42\u4f7f\u7528\u4e50\u89c2\u9501\uff0c\u4f7f\u7528 version \u4f5c\u4e3a\u66f4\u65b0\u4f9d\u636e\u3002 \u8bf4\u660e \u5982\u679c\u6bcf\u6b21\u8bbf\u95ee\u51b2\u7a81\u6982\u7387\u5c0f\u4e8e 20%\uff0c\u63a8\u8350\u4f7f\u7528\u4e50\u89c2\u9501\uff0c\u5426\u5219\u4f7f\u7528\u60b2\u89c2\u9501\u3002\u4e50\u89c2\u9501\u7684\u91cd\u8bd5\u6b21\u6570\u4e0d\u5f97\u5c0f\u4e8e 3 \u6b21\u3002 \u3010\u5f3a\u5236\u3011 \u591a\u7ebf\u7a0b\u5e76\u884c\u5904\u7406\u5b9a\u65f6\u4efb\u52a1\u65f6\uff0cTimer \u8fd0\u884c\u591a\u4e2a TimeTask \u65f6\uff0c\u53ea\u8981\u5176\u4e2d\u4e4b\u4e00\u6ca1\u6709\u6355\u83b7\u629b\u51fa\u7684\u5f02\u5e38\uff0c\u5176\u5b83\u4efb\u52a1\u4fbf\u4f1a\u81ea\u52a8\u7ec8\u6b62\u8fd0\u884c\uff0c \u4f7f\u7528 ScheduledExecutorService \u5219\u6ca1\u6709\u8fd9\u4e2a\u95ee\u9898\u3002 \u3010\u63a8\u8350\u3011 \u4f7f\u7528 CountDownLatch \u8fdb\u884c\u5f02\u6b65\u8f6c\u540c\u6b65\u64cd\u4f5c\uff0c\u6bcf\u4e2a\u7ebf\u7a0b\u9000\u51fa\u524d\u5fc5\u987b\u8c03\u7528 countDown\u65b9\u6cd5\uff0c\u7ebf\u7a0b\u6267\u884c\u4ee3\u7801\u6ce8\u610f catch \u5f02\u5e38\uff0c \u786e\u4fdd countDown \u65b9\u6cd5\u88ab\u6267\u884c\u5230\uff0c\u907f\u514d\u4e3b\u7ebf\u7a0b\u65e0\u6cd5\u6267\u884c\u81f3 await \u65b9\u6cd5\uff0c\u76f4\u5230\u8d85\u65f6\u624d\u8fd4\u56de\u7ed3\u679c\u3002 \u8bf4\u660e \u6ce8\u610f\uff0c\u5b50\u7ebf\u7a0b\u629b\u51fa\u5f02\u5e38\u5806\u6808\uff0c\u4e0d\u80fd\u5728\u4e3b\u7ebf\u7a0b try-catch \u5230\u3002 \u3010\u63a8\u8350\u3011 \u907f\u514d Random \u5b9e\u4f8b\u88ab\u591a\u7ebf\u7a0b\u4f7f\u7528\uff0c\u867d\u7136\u5171\u4eab\u8be5\u5b9e\u4f8b\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\uff0c\u4f46\u4f1a\u56e0\u7ade\u4e89\u540c\u4e00 seed \u5bfc\u81f4\u7684\u6027\u80fd\u4e0b\u964d\u3002 \u8bf4\u660e Random \u5b9e\u4f8b\u5305\u62ec java.util.Random \u7684\u5b9e\u4f8b\u6216\u8005 Math.random()\u7684\u65b9\u5f0f\u3002 \u6b63\u4f8b \u5728 JDK7 \u4e4b\u540e\uff0c\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 API ThreadLocalRandom\uff0c\u800c\u5728 JDK7 \u4e4b\u524d\uff0c\u9700\u8981\u7f16\u7801\u4fdd\u8bc1\u6bcf\u4e2a\u7ebf\u7a0b\u6301\u6709\u4e00\u4e2a\u5b9e\u4f8b\u3002 \u3010\u63a8\u8350\u3011 \u5728\u5e76\u53d1\u573a\u666f\u4e0b\uff0c\u901a\u8fc7\u53cc\u91cd\u68c0\u67e5\u9501\uff08double-checked locking\uff09\u5b9e\u73b0\u5ef6\u8fdf\u521d\u59cb\u5316\u7684\u4f18\u5316\u95ee\u9898\u9690\u60a3(\u53ef\u53c2\u8003 The \"Double-Checked Locking is Broken\" Declaration)\uff0c\u63a8\u8350\u89e3\u51b3\u65b9\u6848\u4e2d\u8f83\u4e3a\u7b80\u5355\u4e00\u79cd\uff08\u9002\u7528\u4e8e JDK5 \u53ca\u4ee5\u4e0a\u7248\u672c\uff09\uff0c \u5c06\u76ee\u6807\u5c5e\u6027\u58f0\u660e\u4e3a volatile \u578b\u3002 \u53cd\u4f8b class LazyInitDemo { private Helper helper = null ; public Helper getHelper () { if ( helper == null ) synchronized ( this ) { if ( helper == null ) helper = new Helper (); } return helper ; } // other methods and fields... } \u3010\u53c2\u8003\u3011 volatile \u89e3\u51b3\u591a\u7ebf\u7a0b\u5185\u5b58\u4e0d\u53ef\u89c1\u95ee\u9898\u3002\u5bf9\u4e8e\u4e00\u5199\u591a\u8bfb\uff0c\u662f\u53ef\u4ee5\u89e3\u51b3\u53d8\u91cf\u540c\u6b65\u95ee\u9898\uff0c\u4f46\u662f\u5982\u679c\u591a\u5199\uff0c\u540c\u6837\u65e0\u6cd5\u89e3\u51b3\u7ebf\u7a0b\u5b89\u5168\u95ee\u9898\u3002 \u5982\u679c\u662f count++\u64cd\u4f5c\uff0c\u4f7f\u7528\u5982\u4e0b\u7c7b\u5b9e\u73b0\uff1aAtomicInteger count = new AtomicInteger(); count.addAndGet(1); \u5982\u679c\u662f JDK8\uff0c\u63a8\u8350\u4f7f\u7528 LongAdder \u5bf9\u8c61\uff0c\u6bd4 AtomicLong \u6027\u80fd\u66f4\u597d\uff08\u51cf\u5c11\u4e50\u89c2\u9501\u7684\u91cd\u8bd5\u6b21\u6570\uff09\u3002 \u3010\u53c2\u8003\u3011 HashMap \u5728\u5bb9\u91cf\u4e0d\u591f\u8fdb\u884c resize \u65f6\u7531\u4e8e\u9ad8\u5e76\u53d1\u53ef\u80fd\u51fa\u73b0\u6b7b\u94fe\uff0c\u5bfc\u81f4 CPU \u98d9\u5347\uff0c\u5728\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u53ef\u4ee5\u4f7f\u7528\u5176\u5b83\u6570\u636e\u7ed3\u6784\u6216\u52a0\u9501\u6765\u89c4\u907f\u6b64\u98ce\u9669\u3002 \u3010\u53c2\u8003\u3011 ThreadLocal \u65e0\u6cd5\u89e3\u51b3\u5171\u4eab\u5bf9\u8c61\u7684\u66f4\u65b0\u95ee\u9898\uff0cThreadLocal \u5bf9\u8c61\u5efa\u8bae\u4f7f\u7528 static\u4fee\u9970\u3002\u8fd9\u4e2a\u53d8\u91cf\u662f\u9488\u5bf9\u4e00\u4e2a\u7ebf\u7a0b\u5185\u6240\u6709\u64cd\u4f5c\u5171\u4eab\u7684\uff0c \u6240\u4ee5\u8bbe\u7f6e\u4e3a\u9759\u6001\u53d8\u91cf\uff0c\u6240\u6709\u6b64\u7c7b\u5b9e\u4f8b\u5171\u4eab\u6b64\u9759\u6001\u53d8\u91cf \uff0c\u4e5f\u5c31\u662f\u8bf4\u5728\u7c7b\u7b2c\u4e00\u6b21\u88ab\u4f7f\u7528\u65f6\u88c5\u8f7d\uff0c\u53ea\u5206\u914d\u4e00\u5757\u5b58\u50a8\u7a7a\u95f4\uff0c\u6240\u6709\u6b64\u7c7b\u7684\u5bf9\u8c61(\u53ea\u8981\u662f\u8fd9\u4e2a\u7ebf\u7a0b\u5185\u5b9a\u4e49\u7684)\u90fd\u53ef\u4ee5\u64cd\u63a7\u8fd9\u4e2a\u53d8\u91cf.","title":"\u5e76\u53d1\u5904\u7406"},{"location":"standard/language_rules/#_7","text":"\u3010\u5f3a\u5236\u3011 \u5728\u4e00\u4e2a switch \u5757\u5185\uff0c\u6bcf\u4e2a case \u8981\u4e48\u901a\u8fc7 break/return \u7b49\u6765\u7ec8\u6b62\uff0c\u8981\u4e48\u6ce8\u91ca\u8bf4\u660e\u7a0b\u5e8f\u5c06\u7ee7\u7eed\u6267\u884c\u5230\u54ea\u4e00\u4e2a case \u4e3a\u6b62\uff1b\u5728\u4e00\u4e2a switch \u5757\u5185\uff0c\u90fd\u5fc5\u987b\u5305\u542b\u4e00\u4e2a default \u8bed\u53e5\u5e76\u4e14\u653e\u5728\u6700\u540e\uff0c\u5373\u4f7f\u7a7a\u4ee3\u7801\u3002 \u3010\u5f3a\u5236\u3011 \u5728 if/else/for/while/do \u8bed\u53e5\u4e2d\u5fc5\u987b\u4f7f\u7528\u5927\u62ec\u53f7\u3002\u5373\u4f7f\u53ea\u6709\u4e00\u884c\u4ee3\u7801\uff0c\u907f\u514d\u91c7\u7528\u5355\u884c\u7684\u7f16\u7801\u65b9\u5f0f\uff1a if (condition) statements ; \u3010\u5f3a\u5236\u3011 \u5728\u9ad8\u5e76\u53d1\u573a\u666f\u4e2d\uff0c\u907f\u514d\u4f7f\u7528\u201d\u7b49\u4e8e\u201d\u5224\u65ad\u4f5c\u4e3a\u4e2d\u65ad\u6216\u9000\u51fa\u7684\u6761\u4ef6\u3002 \u8bf4\u660e \u5982\u679c\u5e76\u53d1\u63a7\u5236\u6ca1\u6709\u5904\u7406\u597d\uff0c\u5bb9\u6613\u4ea7\u751f\u7b49\u503c\u5224\u65ad\u88ab\u201c\u51fb\u7a7f\u201d\u7684\u60c5\u51b5\uff0c\u4f7f\u7528\u5927\u4e8e\u6216\u5c0f\u4e8e\u7684\u533a\u95f4\u5224\u65ad\u6761\u4ef6\u6765\u4ee3\u66ff\u3002 \u53cd\u4f8b \u5224\u65ad\u5269\u4f59\u5956\u54c1\u6570\u91cf\u7b49\u4e8e 0 \u65f6\uff0c\u7ec8\u6b62\u53d1\u653e\u5956\u54c1\uff0c\u4f46\u56e0\u4e3a\u5e76\u53d1\u5904\u7406\u9519\u8bef\u5bfc\u81f4\u5956\u54c1\u6570\u91cf\u77ac\u95f4\u53d8\u6210\u4e86\u8d1f\u6570\uff0c\u8fd9\u6837\u7684\u8bdd\uff0c\u6d3b\u52a8\u65e0\u6cd5\u7ec8\u6b62\u3002 \u3010\u63a8\u8350\u3011 \u8868\u8fbe\u5f02\u5e38\u7684\u5206\u652f\u65f6\uff0c\u5c11\u7528 if-else \u65b9\u5f0f\uff0c\u8fd9\u79cd\u65b9\u5f0f\u53ef\u4ee5\u6539\u5199\u6210\uff1a if ( condition ) { ... return obj ; } // \u63a5\u7740\u5199 else \u7684\u4e1a\u52a1\u903b\u8f91\u4ee3\u7801; \u8bf4\u660e \u5982\u679c\u975e\u5f97\u4f7f\u7528 if()...else if()...else... \u65b9\u5f0f\u8868\u8fbe\u903b\u8f91\uff0c \u3010\u5f3a\u5236\u3011 \u907f\u514d\u540e\u7eed\u4ee3\u7801\u7ef4\u62a4\u56f0\u96be\uff0c\u8bf7\u52ff\u8d85\u8fc7 3 \u5c42\u3002 \u6b63\u4f8b \u8d85\u8fc7 3 \u5c42\u7684 if-else \u7684\u903b\u8f91\u5224\u65ad\u4ee3\u7801\u53ef\u4ee5\u4f7f\u7528\u536b\u8bed\u53e5\u3001\u7b56\u7565\u6a21\u5f0f\u3001\u72b6\u6001\u6a21\u5f0f\u7b49\u6765\u5b9e\u73b0\uff0c\u5176\u4e2d\u536b\u8bed\u53e5\u793a\u4f8b\u5982\u4e0b\uff1a public void today () { if ( isBusy ()) { System . out . println ( \u201c change time . \u201d ); return ; } if ( isFree ()) { System . out . println ( \u201c go to travel . \u201d ); return ; } System . out . println ( \u201c stay at home to learn Alibaba Java Coding Guidelines . \u201d ); return ; } \u3010\u63a8\u8350\u3011 \u9664\u5e38\u7528\u65b9\u6cd5\uff08\u5982 getXxx/isXxx \uff09\u7b49\u5916\uff0c\u4e0d\u8981\u5728\u6761\u4ef6\u5224\u65ad\u4e2d\u6267\u884c\u5176\u5b83\u590d\u6742\u7684\u8bed\u53e5\uff0c\u5c06\u590d\u6742\u903b\u8f91\u5224\u65ad\u7684\u7ed3\u679c\u8d4b\u503c\u7ed9\u4e00\u4e2a\u6709\u610f\u4e49\u7684\u5e03\u5c14\u53d8\u91cf\u540d\uff0c\u4ee5\u63d0\u9ad8\u53ef\u8bfb\u6027\u3002 \u8bf4\u660e \u5f88\u591a if \u8bed\u53e5\u5185\u7684\u903b\u8f91\u76f8\u5f53\u590d\u6742\uff0c\u9605\u8bfb\u8005\u9700\u8981\u5206\u6790\u6761\u4ef6\u8868\u8fbe\u5f0f\u7684\u6700\u7ec8\u7ed3\u679c\uff0c\u624d\u80fd\u660e\u786e\u4ec0\u4e48\u6837\u7684\u6761\u4ef6\u6267\u884c\u4ec0\u4e48\u6837\u7684\u8bed\u53e5\uff0c\u90a3\u4e48\uff0c\u5982\u679c\u9605\u8bfb\u8005\u5206\u6790\u903b\u8f91\u8868\u8fbe\u5f0f\u9519\u8bef\u5462\uff1f \u6b63\u4f8b // \u4f2a\u4ee3\u7801\u5982\u4e0b final boolean existed = ( file . open ( fileName , \"w\" ) != null ) && (...) || (...); if ( existed ) { ... } \u53cd\u4f8b if (( file . open ( fileName , \"w\" ) != null ) && (...) || (...)) { \u3010\u63a8\u8350\u3011 \u5faa\u73af\u4f53\u4e2d\u7684\u8bed\u53e5\u8981\u8003\u91cf\u6027\u80fd\uff0c\u4ee5\u4e0b\u64cd\u4f5c\u5c3d\u91cf\u79fb\u81f3\u5faa\u73af\u4f53\u5916\u5904\u7406\uff0c\u5982\u5b9a\u4e49\u5bf9\u8c61\u3001\u53d8\u91cf\u3001\u83b7\u53d6\u6570\u636e\u5e93\u8fde\u63a5\uff0c\u8fdb\u884c\u4e0d\u5fc5\u8981\u7684 try-catch \u64cd\u4f5c \uff08\u8fd9\u4e2a try-catch \u662f\u5426\u53ef\u4ee5\u79fb\u81f3\u5faa\u73af\u4f53\u5916\uff09\u3002 \u3010\u63a8\u8350\u3011 \u907f\u514d\u91c7\u7528\u53d6\u53cd\u903b\u8f91\u8fd0\u7b97\u7b26\u3002 \u8bf4\u660e \u53d6\u53cd\u903b\u8f91\u4e0d\u5229\u4e8e\u5feb\u901f\u7406\u89e3\uff0c\u5e76\u4e14\u53d6\u53cd\u903b\u8f91\u5199\u6cd5\u5fc5\u7136\u5b58\u5728\u5bf9\u5e94\u7684\u6b63\u5411\u903b\u8f91\u5199\u6cd5\u3002 \u6b63\u4f8b \u4f7f\u7528 if (x < 628) \u6765\u8868\u8fbe x \u5c0f\u4e8e 628\u3002 \u53cd\u4f8b \u4f7f\u7528 if (!(x >= 628)) \u6765\u8868\u8fbe x \u5c0f\u4e8e 628\u3002 \u3010\u63a8\u8350\u3011 \u63a5\u53e3\u5165\u53c2\u4fdd\u62a4\uff0c\u8fd9\u79cd\u573a\u666f\u5e38\u89c1\u7684\u662f\u7528\u4f5c\u6279\u91cf\u64cd\u4f5c\u7684\u63a5\u53e3\u3002 \u3010\u53c2\u8003\u3011 \u4e0b\u5217\u60c5\u5f62\uff0c\u9700\u8981\u8fdb\u884c\u53c2\u6570\u6821\u9a8c\uff1a \u8c03\u7528\u9891\u6b21\u4f4e\u7684\u65b9\u6cd5\u3002 \u6267\u884c\u65f6\u95f4\u5f00\u9500\u5f88\u5927\u7684\u65b9\u6cd5\u3002\u6b64\u60c5\u5f62\u4e2d\uff0c\u53c2\u6570\u6821\u9a8c\u65f6\u95f4\u51e0\u4e4e\u53ef\u4ee5\u5ffd\u7565\u4e0d\u8ba1\uff0c\u4f46\u5982\u679c\u56e0\u4e3a\u53c2\u6570\u9519\u8bef\u5bfc\u81f4\u4e2d\u95f4\u6267\u884c\u56de\u9000\uff0c\u6216\u8005\u9519\u8bef\uff0c\u90a3\u5f97\u4e0d\u507f\u5931\u3002 \u9700\u8981\u6781\u9ad8\u7a33\u5b9a\u6027\u548c\u53ef\u7528\u6027\u7684\u65b9\u6cd5\u3002 \u5bf9\u5916\u63d0\u4f9b\u7684\u5f00\u653e\u63a5\u53e3\uff0c\u4e0d\u7ba1\u662f RPC/API/HTTP \u63a5\u53e3\u3002 \u654f\u611f\u6743\u9650\u5165\u53e3\u3002 \u3010\u53c2\u8003\u3011 \u4e0b\u5217\u60c5\u5f62\uff0c\u4e0d\u9700\u8981\u8fdb\u884c\u53c2\u6570\u6821\u9a8c\uff1a \u6781\u6709\u53ef\u80fd\u88ab\u5faa\u73af\u8c03\u7528\u7684\u65b9\u6cd5\u3002\u4f46\u5728\u65b9\u6cd5\u8bf4\u660e\u91cc\u5fc5\u987b\u6ce8\u660e\u5916\u90e8\u53c2\u6570\u68c0\u67e5\u8981\u6c42\u3002 \u5e95\u5c42\u8c03\u7528\u9891\u5ea6\u6bd4\u8f83\u9ad8\u7684\u65b9\u6cd5\u3002\u6bd5\u7adf\u662f\u50cf\u7eaf\u51c0\u6c34\u8fc7\u6ee4\u7684\u6700\u540e\u4e00\u9053\uff0c\u53c2\u6570\u9519\u8bef\u4e0d\u592a\u53ef\u80fd\u5230\u5e95\u5c42\u624d\u4f1a\u66b4\u9732\u95ee\u9898\u3002\u4e00\u822c DAO \u5c42\u4e0e Service \u5c42\u90fd\u5728\u540c\u4e00\u4e2a\u5e94\u7528\u4e2d\uff0c \u90e8\u7f72\u5728\u540c\u4e00\u53f0\u670d\u52a1\u5668\u4e2d\uff0c\u6240\u4ee5 DAO \u7684\u53c2\u6570\u6821\u9a8c\uff0c\u53ef\u4ee5\u7701\u7565\u3002 \u88ab\u58f0\u660e\u6210 private \u53ea\u4f1a\u88ab\u81ea\u5df1\u4ee3\u7801\u6240\u8c03\u7528\u7684\u65b9\u6cd5\uff0c\u5982\u679c\u80fd\u591f\u786e\u5b9a\u8c03\u7528\u65b9\u6cd5\u7684\u4ee3\u7801\u4f20\u5165\u53c2\u6570\u5df2\u7ecf\u505a\u8fc7\u68c0\u67e5\u6216\u8005\u80af\u5b9a\u4e0d\u4f1a\u6709\u95ee\u9898\uff0c\u6b64\u65f6\u53ef\u4ee5\u4e0d\u6821\u9a8c\u53c2\u6570\u3002","title":"\u63a7\u5236\u8bed\u53e5"},{"location":"standard/language_rules/#_8","text":"\u3010\u5f3a\u5236\u3011 \u7c7b\u3001\u7c7b\u5c5e\u6027\u3001\u7c7b\u65b9\u6cd5\u7684\u6ce8\u91ca\u5fc5\u987b\u4f7f\u7528 Javadoc \u89c4\u8303\uff0c\u4f7f\u7528/**\u5185\u5bb9*/\u683c\u5f0f\uff0c\u4e0d\u5f97\u4f7f\u7528// xxx \u65b9\u5f0f\u3002 \u8bf4\u660e \u5728 IDE \u7f16\u8f91\u7a97\u53e3\u4e2d\uff0cJavadoc \u65b9\u5f0f\u4f1a\u63d0\u793a\u76f8\u5173\u6ce8\u91ca\uff0c\u751f\u6210 Javadoc \u53ef\u4ee5\u6b63\u786e\u8f93\u51fa\u76f8\u5e94\u6ce8\u91ca\uff1b \u5728 IDE \u4e2d\uff0c\u5de5\u7a0b\u8c03\u7528\u65b9\u6cd5\u65f6\uff0c\u4e0d\u8fdb\u5165\u65b9\u6cd5\u5373\u53ef\u60ac\u6d6e\u63d0\u793a\u65b9\u6cd5\u3001\u53c2\u6570\u3001\u8fd4\u56de\u503c\u7684\u610f\u4e49\uff0c\u63d0\u9ad8\u9605\u8bfb\u6548\u7387\u3002 \u3010\u5f3a\u5236\u3011 \u65b9\u6cd5\u5185\u90e8\u5355\u884c\u6ce8\u91ca\uff0c\u5728\u88ab\u6ce8\u91ca\u8bed\u53e5\u4e0a\u65b9\u53e6\u8d77\u4e00\u884c\uff0c\u4f7f\u7528 // \u6ce8\u91ca\u3002\u65b9\u6cd5\u5185\u90e8\u591a\u884c\u6ce8\u91ca\u4f7f\u7528 /**/ \u6ce8\u91ca\uff0c\u6ce8\u610f\u4e0e\u4ee3\u7801\u5bf9\u9f50\u3002 \u3010\u63a8\u8350\u3011 \u4e0e\u5176 \u201c\u534a\u540a\u5b50\u201d \u82f1\u6587\u6765\u6ce8\u91ca\uff0c\u4e0d\u5982\u7528\u4e2d\u6587\u6ce8\u91ca\u628a\u95ee\u9898\u8bf4\u6e05\u695a\u3002\u4e13\u6709\u540d\u8bcd\u4e0e\u5173\u952e\u5b57\u4fdd\u6301\u82f1\u6587\u539f\u6587\u5373\u53ef\u3002 \u53cd\u4f8b \u201cTCP \u8fde\u63a5\u8d85\u65f6\u201d \u89e3\u91ca\u6210 \u201c\u4f20\u8f93\u63a7\u5236\u534f\u8bae\u8fde\u63a5\u8d85\u65f6\u201d\uff0c\u7406\u89e3\u53cd\u800c\u8d39\u8111\u7b4b\u3002 \u3010\u63a8\u8350\u3011 \u4ee3\u7801\u4fee\u6539\u7684\u540c\u65f6\uff0c\u6ce8\u91ca\u4e5f\u8981\u8fdb\u884c\u76f8\u5e94\u7684\u4fee\u6539\uff0c\u5c24\u5176\u662f\u53c2\u6570\u3001\u8fd4\u56de\u503c\u3001\u5f02\u5e38\u3001\u6838\u5fc3\u903b\u8f91\u7b49\u7684\u4fee\u6539\u3002 \u8bf4\u660e \u4ee3\u7801\u4e0e\u6ce8\u91ca\u66f4\u65b0\u4e0d\u540c\u6b65\uff0c\u5c31\u50cf\u8def\u7f51\u4e0e\u5bfc\u822a\u8f6f\u4ef6\u66f4\u65b0\u4e0d\u540c\u6b65\u4e00\u6837\uff0c\u5982\u679c\u5bfc\u822a\u8f6f\u4ef6\u4e25\u91cd\u6ede\u540e\uff0c\u5c31\u5931\u53bb\u4e86\u5bfc\u822a\u7684\u610f\u4e49\u3002 \u3010\u53c2\u8003\u3011 \u8c28\u614e\u6ce8\u91ca\u6389\u4ee3\u7801\u3002\u5728\u4e0a\u65b9\u8be6\u7ec6\u8bf4\u660e\uff0c\u800c\u4e0d\u662f\u7b80\u5355\u5730\u6ce8\u91ca\u6389\u3002\u5982\u679c\u65e0\u7528\uff0c\u5219\u5220\u9664\u3002 \u8bf4\u660e \u4ee3\u7801\u88ab\u6ce8\u91ca\u6389\u6709\u4e24\u79cd\u53ef\u80fd\u6027\uff1a 1. \u540e\u7eed\u4f1a\u6062\u590d\u6b64\u6bb5\u4ee3\u7801\u903b\u8f91\u3002 2. \u6c38\u4e45\u4e0d\u7528\u3002\u524d\u8005\u5982\u679c\u6ca1\u6709\u5907\u6ce8\u4fe1\u606f\uff0c\u96be\u4ee5\u77e5\u6653\u6ce8\u91ca\u52a8\u673a\u3002\u540e\u8005\u5efa\u8bae\u76f4\u63a5\u5220\u6389\uff08\u4ee3\u7801\u4ed3\u5e93\u4fdd\u5b58\u4e86\u5386\u53f2\u4ee3\u7801\uff09\u3002 \u3010\u53c2\u8003\u3011 \u5bf9\u4e8e\u6ce8\u91ca\u7684\u8981\u6c42\uff1a| \u80fd\u591f\u51c6\u786e\u53cd\u5e94\u8bbe\u8ba1\u601d\u60f3\u548c\u4ee3\u7801\u903b\u8f91\uff1b \u80fd\u591f\u63cf\u8ff0\u4e1a\u52a1\u542b\u4e49\uff0c\u4f7f\u522b\u7684\u7a0b\u5e8f\u5458\u80fd\u591f\u8fc5\u901f\u4e86\u89e3\u5230\u4ee3\u7801\u80cc\u540e\u7684\u4fe1\u606f\u3002\u5b8c\u5168\u6ca1\u6709\u6ce8\u91ca\u7684\u5927\u6bb5\u4ee3\u7801\u5bf9\u4e8e\u9605\u8bfb\u8005\u5f62\u540c\u5929\u4e66\uff0c\u6ce8\u91ca\u662f\u7ed9\u81ea\u5df1\u770b\u7684\uff0c\u5373\u4f7f\u9694\u5f88\u957f\u65f6\u95f4\uff0c\u4e5f\u80fd\u6e05\u6670\u7406\u89e3\u5f53\u65f6\u7684\u601d\u8def\uff1b\u6ce8\u91ca\u4e5f\u662f\u7ed9\u7ee7\u4efb\u8005\u770b\u7684\uff0c\u4f7f\u5176\u80fd\u591f\u5feb\u901f\u63a5\u66ff\u81ea\u5df1\u7684\u5de5\u4f5c\u3002 \u3010\u53c2\u8003\u3011 \u597d\u7684\u547d\u540d\u3001\u4ee3\u7801\u7ed3\u6784\u662f\u81ea\u89e3\u91ca\u7684\uff0c\u6ce8\u91ca\u529b\u6c42\u7cbe\u7b80\u51c6\u786e\u3001\u8868\u8fbe\u5230\u4f4d\u3002\u907f\u514d\u51fa\u73b0\u6ce8\u91ca\u7684\u4e00\u4e2a\u6781\u7aef\uff1a\u8fc7\u591a\u8fc7\u6ee5\u7684\u6ce8\u91ca\uff0c\u4ee3\u7801\u7684\u903b\u8f91\u4e00\u65e6\u4fee\u6539\uff0c\u4fee\u6539\u6ce8\u91ca\u662f\u76f8\u5f53\u5927\u7684\u8d1f\u62c5\u3002 \u53cd\u4f8b // put elephant into fridge put(elephant, fridge); \u65b9\u6cd5\u540d put \uff0c \u52a0\u4e0a\u4e24\u4e2a\u6709\u610f\u4e49\u7684\u53d8\u91cf\u540d elephant \u548c fridge \uff0c \u5df2\u7ecf\u8bf4\u660e\u4e86\u8fd9\u662f\u5728\u5e72\u4ec0\u4e48 \uff0c \u8bed\u4e49\u6e05\u6670\u7684\u4ee3\u7801\u4e0d\u9700\u8981\u989d\u5916\u7684\u6ce8\u91ca \u3002 \u3010\u53c2\u8003\u3011 \u7279\u6b8a\u6ce8\u91ca\u6807\u8bb0\uff0c\u8bf7\u6ce8\u660e\u6807\u8bb0\u4eba\u4e0e\u6807\u8bb0\u65f6\u95f4\u3002\u6ce8\u610f\u53ca\u65f6\u5904\u7406\u8fd9\u4e9b\u6807\u8bb0\uff0c\u901a\u8fc7\u6807\u8bb0\u626b\u63cf\uff0c\u7ecf\u5e38\u6e05\u7406\u6b64\u7c7b\u6807\u8bb0\u3002\u7ebf\u4e0a\u6545\u969c\u6709\u65f6\u5019\u5c31\u662f\u6765\u6e90\u4e8e\u8fd9\u4e9b\u6807\u8bb0\u5904\u7684\u4ee3\u7801\u3002 \u5f85\u529e\u4e8b\u5b9c\uff08 TODO \uff09:\uff08 \u6807\u8bb0\u4eba\uff0c\u6807\u8bb0\u65f6\u95f4\uff0c[\u9884\u8ba1\u5904\u7406\u65f6\u95f4]\uff09 \u8868\u793a\u9700\u8981\u5b9e\u73b0\uff0c\u4f46\u76ee\u524d\u8fd8\u672a\u5b9e\u73b0\u7684\u529f\u80fd\u3002\u8fd9\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a Javadoc \u7684\u6807\u7b7e\uff0c\u76ee\u524d\u7684 Javadoc \u8fd8\u6ca1\u6709\u5b9e\u73b0\uff0c\u4f46\u5df2\u7ecf\u88ab\u5e7f\u6cdb\u4f7f\u7528\u3002\u53ea\u80fd\u5e94\u7528\u4e8e\u7c7b\uff0c \u63a5\u53e3\u548c\u65b9\u6cd5\uff08\u56e0\u4e3a\u5b83\u662f\u4e00\u4e2a Javadoc \u6807\u7b7e\uff09\u3002 \u9519\u8bef\uff0c\u4e0d\u80fd\u5de5\u4f5c\uff08 FIXME \uff09:\uff08\u6807\u8bb0\u4eba\uff0c\u6807\u8bb0\u65f6\u95f4\uff0c[\u9884\u8ba1\u5904\u7406\u65f6\u95f4]\uff09 \u5728\u6ce8\u91ca\u4e2d\u7528 FIXME \u6807\u8bb0\u67d0\u4ee3\u7801\u662f\u9519\u8bef\u7684\uff0c\u800c\u4e14\u4e0d\u80fd\u5de5\u4f5c\uff0c\u9700\u8981\u53ca\u65f6\u7ea0\u6b63\u7684\u60c5\u51b5\u3002","title":"\u6ce8\u91ca\u89c4\u7ea6"},{"location":"standard/language_rules/#_9","text":"\u3010\u5f3a\u5236\u3011 \u5728\u4f7f\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u65f6\uff0c\u5229\u7528\u597d\u5176\u9884\u7f16\u8bd1\u529f\u80fd\uff0c\u53ef\u4ee5\u6709\u6548\u52a0\u5feb\u6b63\u5219\u5339\u914d\u901f\u5ea6\u3002\u8bf4\u660e\uff1a\u4e0d\u8981\u5728\u65b9\u6cd5\u4f53\u5185\u5b9a\u4e49\uff1a Pattern pattern = Pattern.compile (\u201c\u89c4\u5219\u201d); \u3010\u5f3a\u5236\u3011 \u6ce8\u610f Math.random() \u8fd9\u4e2a\u65b9\u6cd5\u8fd4\u56de\u662f double \u7c7b\u578b\uff0c\u6ce8\u610f\u53d6\u503c\u7684\u8303\u56f4 0\u2264x<1 \uff08\u80fd\u591f\u53d6\u5230\u96f6\u503c\uff0c\u6ce8\u610f\u9664\u96f6\u5f02\u5e38\uff09\uff0c \u5982\u679c\u60f3\u83b7\u53d6\u6574\u6570\u7c7b\u578b\u7684\u968f\u673a\u6570\uff0c\u4e0d\u8981\u5c06 x \u653e\u5927 10 \u7684\u82e5\u5e72\u500d\u7136\u540e\u53d6\u6574\uff0c\u76f4\u63a5\u4f7f\u7528 Random \u5bf9\u8c61\u7684 nextInt \u6216\u8005 nextLong \u65b9\u6cd5\u3002 \u3010\u5f3a\u5236\u3011 \u83b7\u53d6\u5f53\u524d\u6beb\u79d2\u6570 System.currentTimeMillis() ; \u800c\u4e0d\u662f new Date().getTime() ; \u8bf4\u660e \u5982\u679c\u60f3\u83b7\u53d6\u66f4\u52a0\u7cbe\u786e\u7684\u7eb3\u79d2\u7ea7\u65f6\u95f4\u503c\uff0c\u4f7f\u7528 System.nanoTime() \u7684\u65b9\u5f0f\u3002\u5728 JDK8 \u4e2d\uff0c\u9488\u5bf9\u7edf\u8ba1\u65f6\u95f4\u7b49\u573a\u666f\uff0c \u63a8\u8350\u4f7f\u7528 Instant \u7c7b\u3002 \u3010\u63a8\u8350\u3011 \u4e0d\u8981\u5728\u89c6\u56fe\u6a21\u677f\u4e2d\u52a0\u5165\u4efb\u4f55\u590d\u6742\u7684\u903b\u8f91\u3002 \u8bf4\u660e\uff1a\u6839\u636e MVC \u7406\u8bba\uff0c\u89c6\u56fe\u7684\u804c\u8d23\u662f\u5c55\u793a\uff0c\u4e0d\u8981\u62a2\u6a21\u578b\u548c\u63a7\u5236\u5668\u7684\u6d3b\u3002 \u3010\u63a8\u8350\u3011 \u4efb\u4f55\u6570\u636e\u7ed3\u6784\u7684\u6784\u9020\u6216\u521d\u59cb\u5316\uff0c\u90fd\u5e94\u6307\u5b9a\u5927\u5c0f\uff0c\u907f\u514d\u6570\u636e\u7ed3\u6784\u65e0\u9650\u589e\u957f\u5403\u5149\u5185\u5b58\u3002 \u3010\u63a8\u8350\u3011 \u53ca\u65f6\u6e05\u7406\u4e0d\u518d\u4f7f\u7528\u7684\u4ee3\u7801\u6bb5\u6216\u914d\u7f6e\u4fe1\u606f\u3002 \u8bf4\u660e \u5982\u5bf9\u4e8e\u5783\u573e\u4ee3\u7801\u6216\u8fc7\u65f6\u914d\u7f6e\uff0c\u575a\u51b3\u6e05\u7406\u5e72\u51c0\uff0c\u907f\u514d\u7a0b\u5e8f\u8fc7\u5ea6\u81c3\u80bf\uff0c\u4ee3\u7801\u5197\u4f59\u3002 \u6b63\u4f8b \u5bf9\u4e8e\u6682\u65f6\u88ab\u6ce8\u91ca\u6389\uff0c\u540e\u7eed\u53ef\u80fd\u6062\u590d\u4f7f\u7528\u7684\u4ee3\u7801\u7247\u65ad\uff0c\u5728\u6ce8\u91ca\u4ee3\u7801\u4e0a\u65b9\uff0c\u7edf\u4e00\u89c4\u5b9a\u4f7f\u7528\u4e09\u4e2a\u659c\u6760( /// )\u6765\u8bf4\u660e \u6ce8\u91ca\u6389\u4ee3\u7801\u7684\u7406\u7531\u3002","title":"\u5176\u5b83"},{"location":"standard/language_rules/#_10","text":"","title":"\u5f02\u5e38\u65e5\u5fd7"},{"location":"standard/language_rules/#_11","text":"\u3010\u5f3a\u5236\u3011 Java \u7c7b\u5e93\u4e2d\u5b9a\u4e49\u7684\u53ef\u4ee5\u901a\u8fc7\u9884\u68c0\u67e5\u65b9\u5f0f\u89c4\u907f\u7684 RuntimeException \u5f02\u5e38\u4e0d\u5e94\u8be5\u901a\u8fc7catch \u7684\u65b9\u5f0f\u6765\u5904\u7406\uff0c \u6bd4\u5982\uff1aNullPointerException\uff0cIndexOutOfBoundsException \u7b49\u7b49\u3002 \u8bf4\u660e \u65e0\u6cd5\u901a\u8fc7\u9884\u68c0\u67e5\u7684\u5f02\u5e38\u9664\u5916\uff0c\u6bd4\u5982\uff0c\u5728\u89e3\u6790\u5b57\u7b26\u4e32\u5f62\u5f0f\u7684\u6570\u5b57\u65f6\uff0c\u4e0d\u5f97\u4e0d\u901a\u8fc7 catchNumberFormatException \u6765\u5b9e\u73b0\u3002 \u6b63\u4f8b if ( obj != null ) {...} \u53cd\u4f8b try { obj . method (); } catch ( NullPointerException e ) { \u2026 } \u3010\u5f3a\u5236\u3011 \u5f02\u5e38\u4e0d\u8981\u7528\u6765\u505a\u6d41\u7a0b\u63a7\u5236\uff0c\u6761\u4ef6\u63a7\u5236\u3002 \u8bf4\u660e \u5f02\u5e38\u8bbe\u8ba1\u7684\u521d\u8877\u662f\u89e3\u51b3\u7a0b\u5e8f\u8fd0\u884c\u4e2d\u7684\u5404\u79cd\u610f\u5916\u60c5\u51b5\uff0c\u4e14\u5f02\u5e38\u7684\u5904\u7406\u6548\u7387\u6bd4\u6761\u4ef6\u5224\u65ad\u65b9\u5f0f\u8981\u4f4e\u5f88\u591a\u3002 \u3010\u5f3a\u5236\u3011 catch \u65f6\u8bf7\u5206\u6e05\u7a33\u5b9a\u4ee3\u7801\u548c\u975e\u7a33\u5b9a\u4ee3\u7801\uff0c\u7a33\u5b9a\u4ee3\u7801\u6307\u7684\u662f\u65e0\u8bba\u5982\u4f55\u4e0d\u4f1a\u51fa\u9519\u7684\u4ee3\u7801\u3002\u5bf9\u4e8e\u975e\u7a33\u5b9a\u4ee3\u7801\u7684 catch \u5c3d\u53ef\u80fd\u8fdb\u884c\u533a\u5206\u5f02\u5e38\u7c7b\u578b\uff0c\u518d\u505a\u5bf9\u5e94\u7684\u5f02\u5e38\u5904\u7406\u3002 \u8bf4\u660e \u5bf9\u5927\u6bb5\u4ee3\u7801\u8fdb\u884c try-catch\uff0c\u4f7f\u7a0b\u5e8f\u65e0\u6cd5\u6839\u636e\u4e0d\u540c\u7684\u5f02\u5e38\u505a\u51fa\u6b63\u786e\u7684\u5e94\u6fc0\u53cd\u5e94\uff0c\u4e5f\u4e0d\u5229\u4e8e\u5b9a\u4f4d\u95ee\u9898\uff0c\u8fd9\u662f\u4e00\u79cd\u4e0d\u8d1f\u8d23\u4efb\u7684\u8868\u73b0\u3002 \u6b63\u4f8b \u7528\u6237\u6ce8\u518c\u7684\u573a\u666f\u4e2d\uff0c\u5982\u679c\u7528\u6237\u8f93\u5165\u975e\u6cd5\u5b57\u7b26\uff0c\u6216\u7528\u6237\u540d\u79f0\u5df2\u5b58\u5728\uff0c\u6216\u7528\u6237\u8f93\u5165\u5bc6\u7801\u8fc7\u4e8e\u7b80\u5355\uff0c\u5728\u7a0b\u5e8f\u4e0a\u4f5c\u51fa\u5206\u95e8\u522b\u7c7b\u7684\u5224\u65ad\uff0c\u5e76\u63d0\u793a\u7ed9\u7528\u6237\u3002 \u3010\u5f3a\u5236\u3011 \u6355\u83b7\u5f02\u5e38\u662f\u4e3a\u4e86\u5904\u7406\u5b83\uff0c\u4e0d\u8981\u6355\u83b7\u4e86\u5374\u4ec0\u4e48\u90fd\u4e0d\u5904\u7406\u800c\u629b\u5f03\u4e4b\uff0c\u5982\u679c\u4e0d\u60f3\u5904\u7406\u5b83\uff0c\u8bf7\u5c06\u8be5\u5f02\u5e38\u629b\u7ed9\u5b83\u7684\u8c03\u7528\u8005\u3002\u6700\u5916\u5c42\u7684\u4e1a\u52a1\u4f7f\u7528\u8005\uff0c\u5fc5\u987b\u5904\u7406\u5f02\u5e38\uff0c\u5c06\u5176\u8f6c\u5316\u4e3a\u7528\u6237\u53ef\u4ee5\u7406\u89e3\u7684\u5185\u5bb9\u3002 \u3010\u5f3a\u5236\u3011 \u6709 try \u5757\u653e\u5230\u4e86\u4e8b\u52a1\u4ee3\u7801\u4e2d\uff0ccatch \u5f02\u5e38\u540e\uff0c\u5982\u679c\u9700\u8981\u56de\u6eda\u4e8b\u52a1\uff0c\u4e00\u5b9a\u8981\u6ce8\u610f\u624b\u52a8\u56de\u6eda\u4e8b\u52a1\u3002 \u3010\u5f3a\u5236\u3011 finally \u5757\u5fc5\u987b\u5bf9\u8d44\u6e90\u5bf9\u8c61\u3001\u6d41\u5bf9\u8c61\u8fdb\u884c\u5173\u95ed\uff0c\u6709\u5f02\u5e38\u4e5f\u8981\u505a try-catch\u3002 \u8bf4\u660e \u5982\u679c JDK7 \u53ca\u4ee5\u4e0a\uff0c\u53ef\u4ee5\u4f7f\u7528 try-with-resources \u65b9\u5f0f\u3002 \u3010\u5f3a\u5236\u3011 \u4e0d\u8981\u5728 finally \u5757\u4e2d\u4f7f\u7528 return\u3002 \u8bf4\u660e finally \u5757\u4e2d\u7684 return \u8fd4\u56de\u540e\u65b9\u6cd5\u7ed3\u675f\u6267\u884c\uff0c\u4e0d\u4f1a\u518d\u6267\u884c try \u5757\u4e2d\u7684 return \u8bed\u53e5\u3002 \u3010\u5f3a\u5236\u3011 \u6355\u83b7\u5f02\u5e38\u4e0e\u629b\u5f02\u5e38\uff0c\u5fc5\u987b\u662f\u5b8c\u5168\u5339\u914d\uff0c\u6216\u8005\u6355\u83b7\u5f02\u5e38\u662f\u629b\u5f02\u5e38\u7684\u7236\u7c7b\u3002 !!! note \"\u8bf4\u660e\" \u5982\u679c\u9884\u671f\u5bf9\u65b9\u629b\u7684\u662f\u7ee3\u7403\uff0c\u5b9e\u9645\u63a5\u5230\u7684\u662f\u94c5\u7403\uff0c\u5c31\u4f1a\u4ea7\u751f\u610f\u5916\u60c5\u51b5\u3002 \u3010\u63a8\u8350\u3011 \u65b9\u6cd5\u7684\u8fd4\u56de\u503c\u53ef\u4ee5\u4e3a null\uff0c\u4e0d\u5f3a\u5236\u8fd4\u56de\u7a7a\u96c6\u5408\uff0c\u6216\u8005\u7a7a\u5bf9\u8c61\u7b49\uff0c\u5fc5\u987b\u6dfb\u52a0\u6ce8\u91ca\u5145\u5206\u8bf4\u660e\u4ec0\u4e48\u60c5\u51b5\u4e0b\u4f1a\u8fd4\u56de null \u503c\u3002 \u8bf4\u660e \u672c\u624b\u518c\u660e\u786e\u9632\u6b62 NPE \u662f\u8c03\u7528\u8005\u7684\u8d23\u4efb\u3002\u5373\u4f7f\u88ab\u8c03\u7528\u65b9\u6cd5\u8fd4\u56de\u7a7a\u96c6\u5408\u6216\u8005\u7a7a\u5bf9\u8c61\uff0c\u5bf9\u8c03\u7528\u8005\u6765\u8bf4\uff0c\u4e5f\u5e76\u975e\u9ad8\u6795\u65e0\u5fe7\uff0c\u5fc5\u987b\u8003\u8651\u5230\u8fdc\u7a0b\u8c03\u7528\u5931\u8d25\u3001\u5e8f\u5217\u5316\u5931\u8d25\u3001 \u8fd0\u884c\u65f6\u5f02\u5e38\u7b49\u573a\u666f\u8fd4\u56denull \u7684\u60c5\u51b5\u3002 \u3010\u63a8\u8350\u3011 \u9632\u6b62 NPE\uff0c\u662f\u7a0b\u5e8f\u5458\u7684\u57fa\u672c\u4fee\u517b\uff0c\u6ce8\u610f NPE \u4ea7\u751f\u7684\u573a\u666f\uff1a \u8fd4\u56de\u7c7b\u578b\u4e3a\u57fa\u672c\u6570\u636e\u7c7b\u578b\uff0creturn \u5305\u88c5\u6570\u636e\u7c7b\u578b\u7684\u5bf9\u8c61\u65f6\uff0c\u81ea\u52a8\u62c6\u7bb1\u6709\u53ef\u80fd\u4ea7\u751f NPE\u3002 \u53cd\u4f8b public int f () { return Integer \u5bf9\u8c61 } \uff0c \u5982\u679c\u4e3a null \uff0c \u81ea\u52a8\u89e3\u7bb1\u629b NPE \u3002 \u6570\u636e\u5e93\u7684\u67e5\u8be2\u7ed3\u679c\u53ef\u80fd\u4e3a null\u3002 \u96c6\u5408\u91cc\u7684\u5143\u7d20\u5373\u4f7f isNotEmpty\uff0c\u53d6\u51fa\u7684\u6570\u636e\u5143\u7d20\u4e5f\u53ef\u80fd\u4e3a null\u3002 \u8fdc\u7a0b\u8c03\u7528\u8fd4\u56de\u5bf9\u8c61\u65f6\uff0c\u4e00\u5f8b\u8981\u6c42\u8fdb\u884c\u7a7a\u6307\u9488\u5224\u65ad\uff0c\u9632\u6b62 NPE\u3002 \u5bf9\u4e8e Session \u4e2d\u83b7\u53d6\u7684\u6570\u636e\uff0c\u5efa\u8bae NPE \u68c0\u67e5\uff0c\u907f\u514d\u7a7a\u6307\u9488\u3002 \u7ea7\u8054\u8c03\u7528 obj.getA().getB().getC()\uff1b\u4e00\u8fde\u4e32\u8c03\u7528\uff0c\u6613\u4ea7\u751f NPE\u3002 \u6b63\u4f8b \u4f7f\u7528 JDK8 \u7684 Optional \u7c7b\u6765\u9632\u6b62 NPE \u95ee\u9898\u3002 \u3010\u63a8\u8350\u3011 \u5b9a\u4e49\u65f6\u533a\u5206 unchecked / checked \u5f02\u5e38\uff0c\u907f\u514d\u76f4\u63a5\u629b\u51fa new RuntimeException()\uff0c \u66f4\u4e0d\u5141\u8bb8\u629b\u51fa Exception \u6216\u8005 Throwable\uff0c\u5e94\u4f7f\u7528\u6709\u4e1a\u52a1\u542b\u4e49\u7684\u81ea\u5b9a\u4e49\u5f02\u5e38\u3002\u63a8\u8350\u4e1a\u754c\u5df2\u5b9a\u4e49\u8fc7\u7684\u81ea\u5b9a\u4e49\u5f02\u5e38\uff0c \u5982\uff1aDAOException / ServiceException \u7b49\u3002 \u3010\u53c2\u8003\u3011 \u5bf9\u4e8e\u516c\u53f8\u5916\u7684 http/api \u5f00\u653e\u63a5\u53e3\u5fc5\u987b\u4f7f\u7528\u201c\u9519\u8bef\u7801\u201d\uff1b\u800c\u5e94\u7528\u5185\u90e8\u63a8\u8350\u5f02\u5e38\u629b\u51fa\uff1b\u8de8\u5e94\u7528\u95f4 RPC \u8c03\u7528\u4f18\u5148\u8003\u8651\u4f7f\u7528 Result \u65b9\u5f0f\uff0c \u5c01\u88c5 isSuccess()\u65b9\u6cd5\u3001\u201c\u9519\u8bef\u7801\u201d\u3001\u201c\u9519\u8bef\u7b80\u77ed\u4fe1\u606f\u201d\u3002 \u8bf4\u660e \u5173\u4e8e RPC \u65b9\u6cd5\u8fd4\u56de\u65b9\u5f0f\u4f7f\u7528 Result \u65b9\u5f0f\u7684\u7406\u7531\uff1a 1. \u4f7f\u7528\u629b\u5f02\u5e38\u8fd4\u56de\u65b9\u5f0f\uff0c\u8c03\u7528\u65b9\u5982\u679c\u6ca1\u6709\u6355\u83b7\u5230\u5c31\u4f1a\u4ea7\u751f\u8fd0\u884c\u65f6\u9519\u8bef\u3002 2. \u5982\u679c\u4e0d\u52a0\u6808\u4fe1\u606f\uff0c\u53ea\u662f new \u81ea\u5b9a\u4e49\u5f02\u5e38\uff0c\u52a0\u5165\u81ea\u5df1\u7684\u7406\u89e3\u7684 error message\uff0c\u5bf9\u4e8e\u8c03\u7528\u7aef\u89e3\u51b3\u95ee\u9898\u7684\u5e2e\u52a9\u4e0d\u4f1a\u592a\u591a\u3002\u5982\u679c\u52a0\u4e86\u6808\u4fe1\u606f\uff0c\u5728\u9891\u7e41\u8c03\u7528\u51fa\u9519\u7684\u60c5\u51b5\u4e0b\uff0c\u6570\u636e\u5e8f\u5217\u5316\u548c\u4f20\u8f93\u7684\u6027\u80fd\u635f\u8017\u4e5f\u662f\u95ee\u9898\u3002 \u3010\u53c2\u8003\u3011 \u907f\u514d\u51fa\u73b0\u91cd\u590d\u7684\u4ee3\u7801\uff08Don\u2019t Repeat Yourself\uff09\uff0c\u5373 DRY \u539f\u5219\u3002 \u8bf4\u660e \u968f\u610f\u590d\u5236\u548c\u7c98\u8d34\u4ee3\u7801\uff0c\u5fc5\u7136\u4f1a\u5bfc\u81f4\u4ee3\u7801\u7684\u91cd\u590d\uff0c\u5728\u4ee5\u540e\u9700\u8981\u4fee\u6539\u65f6\uff0c\u9700\u8981\u4fee\u6539\u6240\u6709\u7684\u526f\u672c\uff0c\u5bb9\u6613\u9057\u6f0f\u3002\u5fc5\u8981\u65f6\u62bd\u53d6\u5171\u6027\u65b9\u6cd5\uff0c\u6216\u8005\u62bd\u8c61\u516c\u5171\u7c7b\uff0c\u751a\u81f3\u662f\u7ec4\u4ef6\u5316\u3002 \u6b63\u4f8b \u4e00\u4e2a\u7c7b\u4e2d\u6709\u591a\u4e2a public \u65b9\u6cd5\uff0c\u90fd\u9700\u8981\u8fdb\u884c\u6570\u884c\u76f8\u540c\u7684\u53c2\u6570\u6821\u9a8c\u64cd\u4f5c\uff0c\u8fd9\u4e2a\u65f6\u5019\u8bf7\u62bd\u53d6\uff1a private boolean checkParam ( DTO dto ) {...}","title":"\u5f02\u5e38\u5904\u7406"},{"location":"standard/language_rules/#_12","text":"\u3010\u5f3a\u5236\u3011 \u5e94\u7528\u4e2d\u4e0d\u53ef\u76f4\u63a5\u4f7f\u7528\u65e5\u5fd7\u7cfb\u7edf\uff08Log4j\u3001Logback\uff09\u4e2d\u7684 API\uff0c\u800c\u5e94\u4f9d\u8d56\u4f7f\u7528\u65e5\u5fd7\u6846\u67b6SLF4J \u4e2d\u7684 API\uff0c\u4f7f\u7528\u95e8\u9762\u6a21\u5f0f\u7684\u65e5\u5fd7\u6846\u67b6\uff0c\u6709\u5229\u4e8e\u7ef4\u62a4\u548c\u5404\u4e2a\u7c7b\u7684\u65e5\u5fd7\u5904\u7406\u65b9\u5f0f\u7edf\u4e00\u3002 import org.slf4j.Logger ; import org.slf4j.LoggerFactory ; private static final Logger logger = LoggerFactory . getLogger ( Abc . class ); \u3010\u5f3a\u5236\u3011 \u65e5\u5fd7\u6587\u4ef6\u81f3\u5c11\u4fdd\u5b58 15 \u5929\uff0c\u56e0\u4e3a\u6709\u4e9b\u5f02\u5e38\u5177\u5907\u4ee5 \u201c\u5468\u201d \u4e3a\u9891\u6b21\u53d1\u751f\u7684\u7279\u70b9\u3002 \u3010\u5f3a\u5236\u3011 \u5e94\u7528\u4e2d\u7684\u6269\u5c55\u65e5\u5fd7\uff08\u5982\u6253\u70b9\u3001\u4e34\u65f6\u76d1\u63a7\u3001\u8bbf\u95ee\u65e5\u5fd7\u7b49\uff09\u547d\u540d\u65b9\u5f0f\uff1aappName_logType_logName.log\u3002 logType:\u65e5\u5fd7\u7c7b\u578b\uff0c\u5982 stats/monitor/access \u7b49\uff1b logName:\u65e5\u5fd7\u63cf\u8ff0\u3002\u8fd9\u79cd\u547d\u540d\u7684\u597d\u5904\uff1a\u901a\u8fc7\u6587\u4ef6\u540d\u5c31\u53ef\u77e5\u9053\u65e5\u5fd7\u6587\u4ef6\u5c5e\u4e8e\u4ec0\u4e48\u5e94\u7528\uff0c\u4ec0\u4e48\u7c7b\u578b\uff0c\u4ec0\u4e48\u76ee\u7684\uff0c\u4e5f\u6709\u5229\u4e8e\u5f52\u7c7b\u67e5\u627e\u3002 \u6b63\u4f8b mppserver \u5e94\u7528\u4e2d\u5355\u72ec\u76d1\u63a7\u65f6\u533a\u8f6c\u6362\u5f02\u5e38\uff0c\u5982\uff1amppserver_monitor_timeZoneConvert.log \u8bf4\u660e \u63a8\u8350\u5bf9\u65e5\u5fd7\u8fdb\u884c\u5206\u7c7b\uff0c\u5982\u5c06\u9519\u8bef\u65e5\u5fd7\u548c\u4e1a\u52a1\u65e5\u5fd7\u5206\u5f00\u5b58\u653e\uff0c\u4fbf\u4e8e\u5f00\u53d1\u4eba\u5458\u67e5\u770b\uff0c\u4e5f\u4fbf\u4e8e\u901a\u8fc7\u65e5\u5fd7\u5bf9\u7cfb\u7edf\u8fdb\u884c\u53ca\u65f6\u76d1\u63a7\u3002 \u3010\u5f3a\u5236\u3011 \u5bf9 trace/debug/info \u7ea7\u522b\u7684\u65e5\u5fd7\u8f93\u51fa\uff0c\u5fc5\u987b\u4f7f\u7528\u6761\u4ef6\u8f93\u51fa\u5f62\u5f0f\u6216\u8005\u4f7f\u7528\u5360\u4f4d\u7b26\u7684\u65b9\u5f0f\u3002 \u8bf4\u660e logger . debug ( \"Processing trade with id: \" + id + \" and symbol: \" + symbol ); \u5982\u679c\u65e5\u5fd7\u7ea7\u522b\u662f warn \uff0c \u4e0a\u8ff0\u65e5\u5fd7\u4e0d\u4f1a\u6253\u5370 \uff0c \u4f46\u662f\u4f1a\u6267\u884c\u5b57\u7b26\u4e32\u62fc\u63a5\u64cd\u4f5c \uff0c \u5982\u679c symbol \u662f\u5bf9\u8c61 \uff0c \u4f1a\u6267\u884c toString () \u65b9\u6cd5 \uff0c \u6d6a\u8d39\u4e86\u7cfb\u7edf\u8d44\u6e90 \uff0c \u6267\u884c\u4e86\u4e0a\u8ff0\u64cd\u4f5c \uff0c \u6700\u7ec8\u65e5\u5fd7\u5374\u6ca1\u6709\u6253\u5370 \u3002 \u6b63\u4f8b\uff08\u6761\u4ef6\uff09\u5efa\u8bbe\u91c7\u7528\u5982\u4e0b\u65b9\u5f0f if ( logger . isDebugEnabled ()) { logger . debug ( \"Processing trade with id: \" + id + \" and symbol: \" + symbol ); } \u6b63\u4f8b\uff08\u5360\u4f4d\u7b26\uff09 logger . debug ( \"Processing trade with id: {} and symbol : {} \" , id , symbol ); \u3010\u5f3a\u5236\u3011 \u907f\u514d\u91cd\u590d\u6253\u5370\u65e5\u5fd7\uff0c\u6d6a\u8d39\u78c1\u76d8\u7a7a\u95f4\uff0c\u52a1\u5fc5\u5728 log4j.xml \u4e2d\u8bbe\u7f6e additivity=false\u3002 \u6b63\u4f8b <logger name= \"com.taobao.dubbo.config\" additivity= \"false\" > \u3010\u5f3a\u5236\u3011 \u5f02\u5e38\u4fe1\u606f\u5e94\u8be5\u5305\u62ec\u4e24\u7c7b\u4fe1\u606f\uff1a\u6848\u53d1\u73b0\u573a\u4fe1\u606f\u548c\u5f02\u5e38\u5806\u6808\u4fe1\u606f\u3002\u5982\u679c\u4e0d\u5904\u7406\uff0c\u90a3\u4e48\u901a\u8fc7\u5173\u952e\u5b57 throws \u5f80\u4e0a\u629b\u51fa\u3002 \u6b63\u4f8b logger . error ( \u5404\u7c7b\u53c2\u6570\u6216\u8005\u5bf9\u8c61 toString () + \"_\" + e . getMessage (), e ); \u3010\u63a8\u8350\u3011 \u8c28\u614e\u5730\u8bb0\u5f55\u65e5\u5fd7\u3002\u751f\u4ea7\u73af\u5883\u7981\u6b62\u8f93\u51fa debug \u65e5\u5fd7\uff1b\u6709\u9009\u62e9\u5730\u8f93\u51fa info \u65e5\u5fd7\uff1b\u5982\u679c\u4f7f\u7528 warn \u6765\u8bb0\u5f55\u521a\u4e0a\u7ebf\u65f6\u7684\u4e1a\u52a1\u884c\u4e3a\u4fe1\u606f\uff0c\u4e00\u5b9a\u8981\u6ce8\u610f\u65e5\u5fd7\u8f93\u51fa\u91cf\u7684\u95ee\u9898\uff0c\u907f\u514d\u628a\u670d\u52a1\u5668\u78c1\u76d8\u6491\u7206\uff0c\u5e76\u8bb0\u5f97\u53ca\u65f6\u5220\u9664\u8fd9\u4e9b\u89c2\u5bdf\u65e5\u5fd7\u3002 \u8bf4\u660e \u5927\u91cf\u5730\u8f93\u51fa\u65e0\u6548\u65e5\u5fd7\uff0c\u4e0d\u5229\u4e8e\u7cfb\u7edf\u6027\u80fd\u63d0\u5347\uff0c\u4e5f\u4e0d\u5229\u4e8e\u5feb\u901f\u5b9a\u4f4d\u9519\u8bef\u70b9\u3002\u8bb0\u5f55\u65e5\u5fd7\u65f6\u8bf7\u601d\u8003\uff1a\u8fd9\u4e9b\u65e5\u5fd7\u771f\u7684\u6709\u4eba\u770b\u5417\uff1f\u770b\u5230\u8fd9\u6761\u65e5\u5fd7\u4f60\u80fd\u505a\u4ec0\u4e48\uff1f\u80fd\u4e0d\u80fd\u7ed9\u95ee\u9898\u6392\u67e5\u5e26\u6765\u597d\u5904\uff1f \u3010\u63a8\u8350\u3011 \u53ef\u4ee5\u4f7f\u7528 warn \u65e5\u5fd7\u7ea7\u522b\u6765\u8bb0\u5f55\u7528\u6237\u8f93\u5165\u53c2\u6570\u9519\u8bef\u7684\u60c5\u51b5\uff0c\u907f\u514d\u7528\u6237\u6295\u8bc9\u65f6\uff0c\u65e0\u6240\u9002\u4ece\u3002\u5982\u975e\u5fc5\u8981\uff0c\u8bf7\u4e0d\u8981\u5728\u6b64\u573a\u666f\u6253\u51fa error \u7ea7\u522b\uff0c\u907f\u514d\u9891\u7e41\u62a5\u8b66\u3002 \u8bf4\u660e \u6ce8\u610f\u65e5\u5fd7\u8f93\u51fa\u7684\u7ea7\u522b\uff0cerror \u7ea7\u522b\u53ea\u8bb0\u5f55\u7cfb\u7edf\u903b\u8f91\u51fa\u9519\u3001\u5f02\u5e38\u6216\u8005\u91cd\u8981\u7684\u9519\u8bef\u4fe1\u606f\u3002 \u3010\u63a8\u8350\u3011 \u5c3d\u91cf\u7528\u82f1\u6587\u6765\u63cf\u8ff0\u65e5\u5fd7\u9519\u8bef\u4fe1\u606f\uff0c\u5982\u679c\u65e5\u5fd7\u4e2d\u7684\u9519\u8bef\u4fe1\u606f\u7528\u82f1\u6587\u63cf\u8ff0\u4e0d\u6e05\u695a\u7684\u8bdd\u4f7f\u7528\u4e2d\u6587\u63cf\u8ff0\u5373\u53ef\uff0c\u5426\u5219\u5bb9\u6613\u4ea7\u751f\u6b67\u4e49\u3002 \u56fd\u9645\u5316\u56e2\u961f\u6216\u6d77\u5916\u90e8\u7f72\u7684\u670d\u52a1\u5668\u7531\u4e8e\u5b57\u7b26\u96c6\u95ee\u9898\uff0c \u3010\u5f3a\u5236\u3011 \u4f7f\u7528\u5168\u82f1\u6587\u6765\u6ce8\u91ca\u548c\u63cf\u8ff0\u65e5\u5fd7\u9519\u8bef\u4fe1\u606f.","title":"\u65e5\u5fd7\u89c4\u7ea6"},{"location":"standard/other_standard/","text":"\u5176\u4ed6\u76f8\u5173\u89c4\u8303 \u00b6 to do.. REST \u63a5\u53e3\u89c4\u8303 \u00b6 Git \u63d0\u4ea4\u89c4\u8303 \u00b6 \u6570\u636e\u4f7f\u7528\u89c4\u8303 \u00b6","title":"\u5176\u4ed6\u89c4\u8303"},{"location":"standard/other_standard/#_1","text":"to do..","title":"\u5176\u4ed6\u76f8\u5173\u89c4\u8303"},{"location":"standard/other_standard/#rest","text":"","title":"REST \u63a5\u53e3\u89c4\u8303"},{"location":"standard/other_standard/#git","text":"","title":"Git \u63d0\u4ea4\u89c4\u8303"},{"location":"standard/other_standard/#_2","text":"","title":"\u6570\u636e\u4f7f\u7528\u89c4\u8303"},{"location":"standard/style_rules/","text":"Java \u5206\u683c\u89c4\u8303 \u00b6 \u7f16\u7801\u89c4\u8303 \u00b6 idea\u98ce\u683c \u00b6 git\u63d0\u4ea4\u89c4\u8303 \u00b6 Anglar Commit \u6570\u636e\u5e93 \u00b6 mysql \u00b6 elasticsearch \u00b6 mongodb \u00b6","title":"\u98ce\u683c\u89c4\u8303"},{"location":"standard/style_rules/#java","text":"","title":"Java \u5206\u683c\u89c4\u8303"},{"location":"standard/style_rules/#_1","text":"","title":"\u7f16\u7801\u89c4\u8303"},{"location":"standard/style_rules/#idea","text":"","title":"idea\u98ce\u683c"},{"location":"standard/style_rules/#git","text":"Anglar Commit","title":"git\u63d0\u4ea4\u89c4\u8303"},{"location":"standard/style_rules/#_2","text":"","title":"\u6570\u636e\u5e93"},{"location":"standard/style_rules/#mysql","text":"","title":"mysql"},{"location":"standard/style_rules/#elasticsearch","text":"","title":"elasticsearch"},{"location":"standard/style_rules/#mongodb","text":"","title":"mongodb"},{"location":"standard/includes/1_1_naming/","text":"\u3010\u5f3a\u5236\u3011 \u4ee3\u7801\u4e2d\u7684\u547d\u540d\u5747\u4e0d\u80fd\u4ee5\u4e0b\u5212\u7ebf\u6216\u7f8e\u5143\u7b26\u53f7\u5f00\u59cb\uff0c\u4e5f\u4e0d\u80fd\u4ee5\u4e0b\u5212\u7ebf\u6216\u7f8e\u5143\u7b26\u53f7\u7ed3\u675f\u3002 \u53cd\u4f8b _name / __name /$name / name_ / name$ / name__ \u3010\u5f3a\u5236\u3011 \u4ee3\u7801\u4e2d\u7684\u547d\u540d\u4e25\u7981\u4f7f\u7528\u62fc\u97f3\u4e0e\u82f1\u6587\u6df7\u5408\u7684\u65b9\u5f0f\uff0c\u66f4\u4e0d\u5141\u8bb8\u76f4\u63a5\u4f7f\u7528\u4e2d\u6587\u7684\u65b9\u5f0f\u3002 \u8bf4\u660e\uff1a\u6b63\u786e\u7684\u82f1\u6587\u62fc\u5199\u548c\u8bed\u6cd5\u53ef\u4ee5\u8ba9\u9605\u8bfb\u8005\u6613\u4e8e\u7406\u89e3\uff0c\u907f\u514d\u6b67\u4e49\u3002\u6ce8\u610f\uff0c\u5373\u4f7f\u7eaf\u62fc\u97f3\u547d\u540d\u65b9\u5f0f\u4e5f\u8981\u907f\u514d\u91c7\u7528\u3002 \u6b63\u4f8b alibaba / taobao / youku / hangzhou \u7b49\u56fd\u9645\u901a\u7528\u7684\u540d\u79f0\uff0c\u53ef\u89c6\u540c\u82f1\u6587\u3002 \u53cd\u4f8b DaZhePromotion [\u6253\u6298] / getPingfenByName() [\u8bc4\u5206] / int \u67d0\u53d8\u91cf = 3 \u3010\u5f3a\u5236\u3011 \u7c7b\u540d\u4f7f\u7528 UpperCamelCase \u98ce\u683c\uff0c\u4f46\u4ee5\u4e0b\u60c5\u5f62\u4f8b\u5916\uff1a DO / BO / DTO / VO / AO /PO / UID \u7b49\u3002 \u6b63\u4f8b MarcoPolo / UserDO / XmlService / TcpUdpDeal / TaPromotion \u53cd\u4f8b macroPolo / UserDo / XMLService / TCPUDPDeal / TAPromotion \u3010\u5f3a\u5236\u3011 \u65b9\u6cd5\u540d\u3001\u53c2\u6570\u540d\u3001\u6210\u5458\u53d8\u91cf\u3001\u5c40\u90e8\u53d8\u91cf\u90fd\u7edf\u4e00\u4f7f\u7528 lowerCamelCase \u98ce\u683c\uff0c\u5fc5\u987b\u9075\u4ece\u9a7c\u5cf0\u5f62\u5f0f\u3002 \u6b63\u4f8b localValue / getHttpMessage() / inputUserId \u3010\u5f3a\u5236\u3011 \u5e38\u91cf\u547d\u540d\u5168\u90e8\u5927\u5199\uff0c\u5355\u8bcd\u95f4\u7528\u4e0b\u5212\u7ebf\u9694\u5f00\uff0c\u529b\u6c42\u8bed\u4e49\u8868\u8fbe\u5b8c\u6574\u6e05\u695a\uff0c\u4e0d\u8981\u5acc\u540d\u5b57\u957f\u3002 \u6b63\u4f8b MAX_STOCK_COUNT \u53cd\u4f8b MAX_COUNT \u3010\u5f3a\u5236\u3011 \u62bd\u8c61\u7c7b\u547d\u540d\u4f7f\u7528 Abstract \u5f00\u5934\uff1b\u5f02\u5e38\u7c7b\u547d\u540d\u4f7f\u7528 Exception \u7ed3\u5c3e\uff1b\u6d4b\u8bd5\u7c7b\u547d\u540d\u4ee5\u5b83\u8981\u6d4b\u8bd5\u7684\u7c7b\u7684\u540d\u79f0\u5f00\u59cb\uff0c \u4ee5 Test \u7ed3\u5c3e\u3002 \u3010\u5f3a\u5236\u3011 \u7c7b\u578b\u4e0e\u4e2d\u62ec\u53f7\u7d27\u6328\u76f8\u8fde\u6765\u8868\u793a\u6570\u7ec4\u3002 \u6b63\u4f8b \u5b9a\u4e49\u6574\u5f62\u6570\u7ec4 int[] arrayDemo ; \u53cd\u4f8b \u5728 main \u53c2\u6570\u4e2d\uff0c\u4f7f\u7528 String args[] \u6765\u5b9a\u4e49\u3002 \u3010\u5f3a\u5236\u3011 POJO \u7c7b\u4e2d\u5e03\u5c14\u7c7b\u578b\u7684\u53d8\u91cf\uff0c\u90fd\u4e0d\u8981\u52a0 is \u524d\u7f00\uff0c\u5426\u5219\u90e8\u5206\u6846\u67b6\u89e3\u6790\u4f1a\u5f15\u8d77\u5e8f\u5217\u5316\u9519\u8bef\u3002 \u53cd\u4f8b \u5b9a\u4e49\u4e3a\u57fa\u672c\u6570\u636e\u7c7b\u578b Boolean isDeleted \u7684\u5c5e\u6027\uff0c\u5b83\u7684\u65b9\u6cd5\u4e5f\u662f isDeleted() \uff0c RPC \u6846\u67b6\u5728\u53cd\u5411\u89e3\u6790\u7684\u65f6\u5019\uff0c \u201c\u8bef\u4ee5\u4e3a\u201d\u5bf9\u5e94\u7684\u5c5e\u6027\u540d\u79f0\u662f deleted \uff0c\u5bfc\u81f4\u5c5e\u6027\u83b7\u53d6\u4e0d\u5230\uff0c\u8fdb\u800c\u629b\u51fa\u5f02\u5e38\u3002 \u3010\u5f3a\u5236\u3011 \u5305\u540d\u7edf\u4e00\u4f7f\u7528\u5c0f\u5199\uff0c\u70b9\u5206\u9694\u7b26\u4e4b\u95f4\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a\u81ea\u7136\u8bed\u4e49\u7684\u82f1\u8bed\u5355\u8bcd\u3002\u5305\u540d\u7edf\u4e00\u4f7f\u7528\u5355\u6570\u5f62\u5f0f\uff0c\u4f46\u662f\u7c7b\u540d\u5982\u679c\u6709\u590d\u6570\u542b\u4e49\uff0c\u7c7b\u540d\u53ef\u4ee5\u4f7f\u7528\u590d\u6570\u5f62\u5f0f\u3002 \u6b63\u4f8b \u5e94\u7528\u5de5\u5177\u7c7b\u5305\u540d\u4e3a com.alibaba.ai.util \u3001\u7c7b\u540d\u4e3a MessageUtils \uff08\u6b64\u89c4\u5219\u53c2\u8003 spring \u7684\u6846\u67b6\u7ed3\u6784\uff09 \u3010\u5f3a\u5236\u3011 \u675c\u7edd\u5b8c\u5168\u4e0d\u89c4\u8303\u7684\u7f29\u5199\uff0c\u907f\u514d\u671b\u6587\u4e0d\u77e5\u4e49\u3002 \u53cd\u4f8b AbstractClass \u7f29\u5199\u547d\u540d\u6210 AbsClass \uff1b condition \u7f29\u5199\u547d\u540d\u6210 condi \uff0c\u6b64\u7c7b\u968f\u610f\u7f29\u5199\u4e25\u91cd\u964d\u4f4e\u4e86\u4ee3\u7801\u7684\u53ef\u9605\u8bfb\u6027\u3002 \u3010\u63a8\u8350\u3011 \u4e3a\u4e86\u8fbe\u5230\u4ee3\u7801\u81ea\u89e3\u91ca\u7684\u76ee\u6807\uff0c\u4efb\u4f55\u81ea\u5b9a\u4e49\u7f16\u7a0b\u5143\u7d20\u5728\u547d\u540d\u65f6\uff0c\u4f7f\u7528\u5c3d\u91cf\u5b8c\u6574\u7684\u5355\u8bcd\u7ec4\u5408\u6765\u8868\u8fbe\u5176\u610f\u3002 \u6b63\u4f8b \u5728 JDK \u4e2d\uff0c\u8868\u8fbe\u539f\u5b50\u66f4\u65b0\u7684\u7c7b\u540d\u4e3a\uff1a AtomicReferenceFieldUpdater \u3002 \u53cd\u4f8b \u53d8\u91cf int a \u7684\u968f\u610f\u547d\u540d\u65b9\u5f0f\u3002 \u3010\u63a8\u8350\u3011 \u5982\u679c\u6a21\u5757\u3001\u63a5\u53e3\u3001\u7c7b\u3001\u65b9\u6cd5\u4f7f\u7528\u4e86\u8bbe\u8ba1\u6a21\u5f0f\uff0c\u5728\u547d\u540d\u65f6\u9700\u4f53\u73b0\u51fa\u5177\u4f53\u6a21\u5f0f\u3002 \u6b63\u4f8b public class OrderFactory ; public class LoginProxy ; public class ResourceObserver ; \u8bf4\u660e \u5c06\u8bbe\u8ba1\u6a21\u5f0f\u4f53\u73b0\u5728\u540d\u5b57\u4e2d\uff0c\u6709\u5229\u4e8e\u9605\u8bfb\u8005\u5feb\u901f\u7406\u89e3\u67b6\u6784\u8bbe\u8ba1\u7406\u5ff5\u3002 \u3010\u63a8\u8350\u3011 \u63a5\u53e3\u7c7b\u4e2d\u7684\u65b9\u6cd5\u548c\u5c5e\u6027\u4e0d\u8981\u52a0\u4efb\u4f55\u4fee\u9970\u7b26\u53f7\uff08 public \u4e5f\u4e0d\u8981\u52a0\uff09\uff0c\u4fdd\u6301\u4ee3\u7801\u7684\u7b80\u6d01\u6027\u3002\u5c3d\u91cf\u4e0d\u8981\u5728\u63a5\u53e3\u91cc\u5b9a\u4e49\u53d8\u91cf\uff0c\u5982\u679c\u4e00\u5b9a\u8981\u5b9a\u4e49\u53d8\u91cf\uff0c\u80af\u5b9a\u662f\u4e0e\u63a5\u53e3\u65b9\u6cd5\u76f8\u5173\uff0c\u5e76\u4e14\u662f\u6574\u4e2a\u5e94\u7528\u7684\u57fa\u7840\u5e38\u91cf\u3002 \u6b63\u4f8b \u63a5\u53e3\u65b9\u6cd5\u7b7e\u540d void commit() ; \u63a5\u53e3\u57fa\u7840\u5e38\u91cf String COMPANY = \"alibaba\" ; \u53cd\u4f8b \u63a5\u53e3\u65b9\u6cd5\u5b9a\u4e49 public abstract void f() ; \u8bf4\u660e JDK8 \u4e2d\u63a5\u53e3\u5141\u8bb8\u6709\u9ed8\u8ba4\u5b9e\u73b0\uff0c\u90a3\u4e48\u8fd9\u4e2a default \u65b9\u6cd5\uff0c\u662f\u5bf9\u6240\u6709\u5b9e\u73b0\u7c7b\u90fd\u6709\u4ef7\u503c\u7684\u9ed8\u8ba4\u5b9e\u73b0\u3002 \u63a5\u53e3\u548c\u5b9e\u73b0\u7c7b\u7684\u547d\u540d\u6709\u4e24\u5957\u89c4\u5219\uff1a \u3010\u5f3a\u5236\u3011 \u5bf9\u4e8e Service \u548c DAO \u7c7b\uff0c\u57fa\u4e8e SOA \u7684\u7406\u5ff5\uff0c\u66b4\u9732\u51fa\u6765\u7684\u670d\u52a1\u4e00\u5b9a\u662f\u63a5\u53e3\uff0c \u5185\u90e8\u7684\u5b9e\u73b0\u7c7b\u7528 Impl \u7684\u540e\u7f00\u4e0e\u63a5\u53e3\u533a\u522b\u3002 \u6b63\u4f8b CacheServiceImpl \u5b9e\u73b0 CacheService \u63a5\u53e3\u3002 \u3010\u63a8\u8350\u3011 \u5982\u679c\u662f\u5f62\u5bb9\u80fd\u529b\u7684\u63a5\u53e3\u540d\u79f0\uff0c\u53d6\u5bf9\u5e94\u7684\u5f62\u5bb9\u8bcd\u4e3a\u63a5\u53e3\u540d\uff08\u901a\u5e38\u662f \u2013able \u7684\u5f62\u5f0f\uff09\u3002 \u6b63\u4f8b AbstractTranslator \u5b9e\u73b0 Translatable \u63a5\u53e3\u3002 \u3010\u53c2\u8003\u3011 \u679a\u4e3e\u7c7b\u540d\u5efa\u8bae\u5e26\u4e0a Enum \u540e\u7f00\uff0c\u679a\u4e3e\u6210\u5458\u540d\u79f0\u9700\u8981\u5168\u5927\u5199\uff0c\u5355\u8bcd\u95f4\u7528\u4e0b\u5212\u7ebf\u9694\u5f00\u3002 \u6b63\u4f8b \u679a\u4e3e\u540d\u5b57\u4e3a ProcessStatusEnum \u7684\u6210\u5458\u540d\u79f0\uff1a SUCCESS / UNKNOWN_REASON \u3002 \u8bf4\u660e \u679a\u4e3e\u5176\u5b9e\u5c31\u662f\u7279\u6b8a\u7684\u7c7b\uff0c\u57df\u6210\u5458\u5747\u4e3a\u5e38\u91cf\uff0c\u4e14\u6784\u9020\u65b9\u6cd5\u88ab\u9ed8\u8ba4\u5f3a\u5236\u662f\u79c1\u6709\u3002 \u3010\u53c2\u8003\u3011 \u5404\u5c42\u547d\u540d\u89c4\u7ea6\uff1a Service/DAO \u5c42\u65b9\u6cd5\u547d\u540d\u89c4\u7ea6 \u83b7\u53d6\u5355\u4e2a\u5bf9\u8c61\u7684\u65b9\u6cd5\u7528 get \u505a\u524d\u7f00\u3002 \u83b7\u53d6\u591a\u4e2a\u5bf9\u8c61\u7684\u65b9\u6cd5\u7528 list \u505a\u524d\u7f00\uff0c\u590d\u6570\u5f62\u5f0f\u7ed3\u5c3e\u5982\uff1a listObjects \u3002 \u83b7\u53d6\u7edf\u8ba1\u503c\u7684\u65b9\u6cd5\u7528 count \u505a\u524d\u7f00\u3002 \u63d2\u5165\u7684\u65b9\u6cd5\u7528 save/insert \u505a\u524d\u7f00\u3002 \u5220\u9664\u7684\u65b9\u6cd5\u7528 remove/delete \u505a\u524d\u7f00\u3002 \u4fee\u6539\u7684\u65b9\u6cd5\u7528 update \u505a\u524d\u7f00\u3002 \u9886\u57df\u6a21\u578b\u547d\u540d\u89c4\u7ea6 \u6570\u636e\u4f20\u8f93\u5bf9\u8c61\uff1a xxxDTO \uff0c xxx \u4e3a\u4e1a\u52a1\u9886\u57df\u76f8\u5173\u7684\u540d\u79f0\u3002 \u5c55\u793a\u5bf9\u8c61\uff1a xxxVO \uff0c xxx \u4e00\u822c\u4e3a\u7f51\u9875\u540d\u79f0\u3002 POJO \u662f DO/DTO/BO/VO \u7684\u7edf\u79f0\uff0c\u7981\u6b62\u547d\u540d\u6210 xxxPOJO \u3002","title":"1 1 naming"},{"location":"standard/includes/1_2_constant/","text":"\u3010\u5f3a\u5236\u3011 \u4e0d\u5141\u8bb8\u4efb\u4f55\u9b54\u6cd5\u503c\uff08\u5373\u672a\u7ecf\u9884\u5148\u5b9a\u4e49\u7684\u5e38\u91cf\uff09\u76f4\u63a5\u51fa\u73b0\u5728\u4ee3\u7801\u4e2d\u3002 \u53cd\u4f8b String key = \"Id#taobao_\" + tradeId ; cache . put ( key , value ); \u3010\u5f3a\u5236\u3011 \u5728 long \u6216\u8005 Long \u8d4b\u503c\u65f6\uff0c\u6570\u503c\u540e\u4f7f\u7528\u5927\u5199\u7684 L \uff0c\u4e0d\u80fd\u662f\u5c0f\u5199\u7684 l \uff0c\u5c0f\u5199\u5bb9\u6613\u8ddf\u6570\u5b57 1 \u6df7\u6dc6\uff0c\u9020\u6210\u8bef\u89e3\u3002 \u8bf4\u660e Long a = 2l ; \u5199\u7684\u662f\u6570\u5b57\u7684 21 \uff0c\u8fd8\u662f Long \u578b\u7684 2 ? \u3010\u63a8\u8350\u3011 \u4e0d\u8981\u4f7f\u7528\u4e00\u4e2a\u5e38\u91cf\u7c7b\u7ef4\u62a4\u6240\u6709\u5e38\u91cf\uff0c\u8981\u6309\u5e38\u91cf\u529f\u80fd\u8fdb\u884c\u5f52\u7c7b\uff0c\u5206\u5f00\u7ef4\u62a4\u3002 \u8bf4\u660e \u5927\u800c\u5168\u7684\u5e38\u91cf\u7c7b\uff0c\u6742\u4e71\u65e0\u7ae0\uff0c\u4f7f\u7528\u67e5\u627e\u529f\u80fd\u624d\u80fd\u5b9a\u4f4d\u5230\u4fee\u6539\u7684\u5e38\u91cf\uff0c\u4e0d\u5229\u4e8e\u7406\u89e3\u548c\u7ef4\u62a4\u3002 \u6b63\u4f8b \u7f13\u5b58\u76f8\u5173\u5e38\u91cf\u653e\u5728\u7c7b CacheConsts \u4e0b\uff1b\u7cfb\u7edf\u914d\u7f6e\u76f8\u5173\u5e38\u91cf\u653e\u5728\u7c7b ConfigConst \u4e0b\u3002 \u3010\u63a8\u8350\u3011 \u5e38\u91cf\u7684\u590d\u7528\u5c42\u6b21\u6709\u4e94\u5c42\uff1a\u8de8\u5e94\u7528\u5171\u4eab\u5e38\u91cf\u3001\u5e94\u7528\u5185\u5171\u4eab\u5e38\u91cf\u3001\u5b50\u5de5\u7a0b\u5185\u5171\u4eab\u5e38\u91cf\u3001\u5305\u5185\u5171\u4eab\u5e38\u91cf\u3001\u7c7b\u5185\u5171\u4eab\u5e38\u91cf\u3002 \u8de8\u5e94\u7528\u5171\u4eab\u5e38\u91cf\uff1a\u653e\u7f6e\u5728\u4e8c\u65b9\u5e93\u4e2d\uff0c\u901a\u5e38\u662f client.jar \u4e2d\u7684 constant \u76ee\u5f55\u4e0b\u3002 \u5e94\u7528\u5185\u5171\u4eab\u5e38\u91cf\uff1a\u653e\u7f6e\u5728\u4e00\u65b9\u5e93\u4e2d\uff0c\u901a\u5e38\u662f\u5b50\u6a21\u5757\u4e2d\u7684 constant \u76ee\u5f55\u4e0b\u3002 \u53cd\u4f8b \u6613\u61c2\u53d8\u91cf\u4e5f\u8981\u7edf\u4e00\u5b9a\u4e49\u6210\u5e94\u7528\u5185\u5171\u4eab\u5e38\u91cf\uff0c\u4e24\u4f4d\u653b\u57ce\u5e08\u5728\u4e24\u4e2a\u7c7b\u4e2d\u5206\u522b\u5b9a\u4e49\u4e86\u8868\u793a\u201c\u662f\u201d\u7684\u53d8\u91cf\uff1a \u7c7b A \u4e2d\uff1a `public static final String YES = \"yes\"` ; \u7c7b B \u4e2d\uff1a `public static final String YES = \"y\"` ; `A.YES.equals(B.YES)` \uff0c\u9884\u671f\u662f `true` \uff0c\u4f46\u5b9e\u9645\u8fd4\u56de\u4e3a `false` \uff0c\u5bfc\u81f4\u7ebf\u4e0a\u95ee\u9898\u3002 \u5b50\u5de5\u7a0b\u5185\u90e8\u5171\u4eab\u5e38\u91cf\uff1a\u5373\u5728\u5f53\u524d\u5b50\u5de5\u7a0b\u7684 constant \u76ee\u5f55\u4e0b\u3002 \u5305\u5185\u5171\u4eab\u5e38\u91cf\uff1a\u5373\u5728\u5f53\u524d\u5305\u4e0b\u5355\u72ec\u7684 constant \u76ee\u5f55\u4e0b\u3002 \u7c7b\u5185\u5171\u4eab\u5e38\u91cf\uff1a\u76f4\u63a5\u5728\u7c7b\u5185\u90e8 private static final \u5b9a\u4e49 \u3010\u63a8\u8350\u3011 \u5982\u679c\u53d8\u91cf\u503c\u4ec5\u5728\u4e00\u4e2a\u56fa\u5b9a\u8303\u56f4\u5185\u53d8\u5316\u7528 enum \u7c7b\u578b\u6765\u5b9a\u4e49\u3002 \u5982\u679c\u5b58\u5728\u540d\u79f0\u4e4b\u5916\u7684\u5ef6\u4f38\u5c5e\u6027\u5e94\u4f7f\u7528 enum \u7c7b\u578b\uff0c\u4e0b\u9762\u6b63\u4f8b\u4e2d\u7684\u6570\u5b57\u5c31\u662f\u5ef6\u4f38\u4fe1\u606f\uff0c\u8868\u793a\u4e00\u5e74\u4e2d\u7684\u7b2c\u51e0\u4e2a\u5b63\u8282\u3002 \u6b63\u4f8b public enum SeasonEnum { SPRING ( 1 ), SUMMER ( 2 ), AUTUMN ( 3 ), WINTER ( 4 ); private int seq ; SeasonEnum ( int seq ){ this . seq = seq ; } }","title":"1 2 constant"},{"location":"standard/includes/1_3_format/","text":"\u3010\u5f3a\u5236\u3011 \u5927\u62ec\u53f7\u7684\u4f7f\u7528\u7ea6\u5b9a\u3002\u5982\u679c\u662f\u5927\u62ec\u53f7\u5185\u4e3a\u7a7a\uff0c\u5219\u7b80\u6d01\u5730\u5199\u6210 {} \u5373\u53ef\uff0c\u4e0d\u9700\u8981\u6362\u884c\uff1b\u5982\u679c\u662f\u975e\u7a7a\u4ee3\u7801\u5757\u5219\uff1a \u5de6\u5927\u62ec\u53f7\u524d\u4e0d\u6362\u884c\u3002 \u5de6\u5927\u62ec\u53f7\u540e\u6362\u884c\u3002 \u53f3\u5927\u62ec\u53f7\u524d\u6362\u884c\u3002 \u53f3\u5927\u62ec\u53f7\u540e\u8fd8\u6709 else \u7b49\u4ee3\u7801\u5219\u4e0d\u6362\u884c\uff1b\u8868\u793a\u7ec8\u6b62\u7684\u53f3\u5927\u62ec\u53f7\u540e\u5fc5\u987b\u6362\u884c\u3002 \u3010\u5f3a\u5236\u3011 \u5de6\u5c0f\u62ec\u53f7\u548c\u5b57\u7b26\u4e4b\u95f4\u4e0d\u51fa\u73b0\u7a7a\u683c\uff1b\u540c\u6837\uff0c\u53f3\u5c0f\u62ec\u53f7\u548c\u5b57\u7b26\u4e4b\u95f4\u4e5f\u4e0d\u51fa\u73b0\u7a7a\u683c\uff1b\u800c\u5de6\u5927\u62ec\u53f7\u524d\u9700\u8981\u7a7a\u683c\u3002\u8be6\u89c1\u7b2c 5 \u6761\u4e0b\u65b9\u6b63\u4f8b\u63d0\u793a\u3002 \u53cd\u4f8b if (\u7a7a\u683c a == b \u7a7a\u683c) \u3010\u5f3a\u5236\u3011 if/for/while/switch/do \u7b49\u4fdd\u7559\u5b57\u4e0e\u62ec\u53f7\u4e4b\u95f4\u90fd\u5fc5\u987b\u52a0\u7a7a\u683c\u3002 \u3010\u5f3a\u5236\u3011 \u4efb\u4f55\u4e8c\u76ee\u3001\u4e09\u76ee\u8fd0\u7b97\u7b26\u7684\u5de6\u53f3\u4e24\u8fb9\u90fd\u9700\u8981\u52a0\u4e00\u4e2a\u7a7a\u683c\u3002 !!! note \"\u8bf4\u660e\" \u8fd0\u7b97\u7b26\u5305\u62ec\u8d4b\u503c\u8fd0\u7b97\u7b26 = \u3001\u903b\u8f91\u8fd0\u7b97\u7b26 && \u3001\u52a0\u51cf\u4e58\u9664\u7b26\u53f7\u7b49\u3002 \u3010\u5f3a\u5236\u3011 \u91c7\u7528 4 \u4e2a\u7a7a\u683c\u7f29\u8fdb\uff0c\u7981\u6b62\u4f7f\u7528 tab \u5b57\u7b26\u3002 !!! note \"\u8bf4\u660e\" \u5982\u679c\u4f7f\u7528 tab \u7f29\u8fdb\uff0c\u5fc5\u987b\u8bbe\u7f6e 1 \u4e2a tab \u4e3a 4 \u4e2a\u7a7a\u683c\u3002IDEA \u8bbe\u7f6e tab \u4e3a 4 \u4e2a\u7a7a\u683c\u65f6\uff0c\u8bf7\u52ff\u52fe\u9009 Use tab character \uff1b \u800c\u5728 eclipse \u4e2d\uff0c\u5fc5\u987b\u52fe\u9009 insert spaces for tabs \u3002 \u6b63\u4f8b\uff08\u6d89\u53ca1-5\u70b9\uff09 public static void main ( String [] args ) { // \u7f29\u8fdb 4 \u4e2a\u7a7a\u683c String say = \"hello\" ; // \u8fd0\u7b97\u7b26\u7684\u5de6\u53f3\u5fc5\u987b\u6709\u4e00\u4e2a\u7a7a\u683c int flag = 0 ; // \u5173\u952e\u8bcd if \u4e0e\u62ec\u53f7\u4e4b\u95f4\u5fc5\u987b\u6709\u4e00\u4e2a\u7a7a\u683c\uff0c\u62ec\u53f7\u5185\u7684 f \u4e0e\u5de6\u62ec\u53f7\uff0c0 \u4e0e\u53f3\u62ec\u53f7\u4e0d\u9700\u8981\u7a7a\u683c if ( flag == 0 ) { System . out . println ( say ); } // \u5de6\u5927\u62ec\u53f7\u524d\u52a0\u7a7a\u683c\u4e14\u4e0d\u6362\u884c\uff1b\u5de6\u5927\u62ec\u53f7\u540e\u6362\u884c if ( flag == 1 ) { System . out . println ( \"world\" ); // \u53f3\u5927\u62ec\u53f7\u524d\u6362\u884c\uff0c\u53f3\u5927\u62ec\u53f7\u540e\u6709 else\uff0c\u4e0d\u7528\u6362\u884c } else { System . out . println ( \"ok\" ); // \u5728\u53f3\u5927\u62ec\u53f7\u540e\u76f4\u63a5\u7ed3\u675f\uff0c\u5219\u5fc5\u987b\u6362\u884c } } \u3010\u5f3a\u5236\u3011 \u6ce8\u91ca\u7684\u53cc\u659c\u7ebf\u4e0e\u6ce8\u91ca\u5185\u5bb9\u4e4b\u95f4\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a\u7a7a\u683c\u3002 \u6b63\u4f8b // \u8fd9\u662f\u793a\u4f8b\u6ce8\u91ca\uff0c\u8bf7\u6ce8\u610f\u5728\u53cc\u659c\u7ebf\u4e4b\u540e\u6709\u4e00\u4e2a\u7a7a\u683c String ygb = new String (); \u3010\u5f3a\u5236\u3011 \u5355\u884c\u5b57\u7b26\u6570\u9650\u5236\u4e0d\u8d85\u8fc7 120 \u4e2a\uff0c\u8d85\u51fa\u9700\u8981\u6362\u884c\uff0c\u6362\u884c\u65f6\u9075\u5faa\u5982\u4e0b\u539f\u5219\uff1a \u7b2c\u4e8c\u884c\u76f8\u5bf9\u7b2c\u4e00\u884c\u7f29\u8fdb 4 \u4e2a\u7a7a\u683c\uff0c\u4ece\u7b2c\u4e09\u884c\u5f00\u59cb\uff0c\u4e0d\u518d\u7ee7\u7eed\u7f29\u8fdb\uff0c\u53c2\u8003\u793a\u4f8b\u3002 \u8fd0\u7b97\u7b26\u4e0e\u4e0b\u6587\u4e00\u8d77\u6362\u884c\u3002 \u65b9\u6cd5\u8c03\u7528\u7684\u70b9\u7b26\u53f7\u4e0e\u4e0b\u6587\u4e00\u8d77\u6362\u884c\u3002 \u65b9\u6cd5\u8c03\u7528\u4e2d\u7684\u591a\u4e2a\u53c2\u6570\u9700\u8981\u6362\u884c\u65f6\uff0c\u5728\u9017\u53f7\u540e\u8fdb\u884c\u3002 \u5728\u62ec\u53f7\u524d\u4e0d\u8981\u6362\u884c\uff0c\u89c1\u53cd\u4f8b\u3002 \u6b63\u4f8b StringBuffer sb = new StringBuffer (); // \u8d85\u8fc7 120 \u4e2a\u5b57\u7b26\u7684\u60c5\u51b5\u4e0b\uff0c\u6362\u884c\u7f29\u8fdb 4 \u4e2a\u7a7a\u683c\uff0c\u70b9\u53f7\u548c\u65b9\u6cd5\u540d\u79f0\u4e00\u8d77\u6362\u884c sb . append ( \"zi\" ). append ( \"xin\" )... . append ( \"huang\" )... . append ( \"huang\" )... . append ( \"huang\" ); \u53cd\u4f8b StringBuffer sb = new StringBuffer (); // \u8d85\u8fc7 120 \u4e2a\u5b57\u7b26\u7684\u60c5\u51b5\u4e0b\uff0c\u4e0d\u8981\u5728\u62ec\u53f7\u524d\u6362\u884c sb . append ( \"zi\" ). append ( \"xin\" )... append ( \"huang\" ); // \u53c2\u6570\u5f88\u591a\u7684\u65b9\u6cd5\u8c03\u7528\u53ef\u80fd\u8d85\u8fc7 120 \u4e2a\u5b57\u7b26\uff0c\u4e0d\u8981\u5728\u9017\u53f7\u524d\u6362\u884c method ( args1 , args2 , args3 , ... , argsX ); \u3010\u5f3a\u5236\u3011 \u65b9\u6cd5\u53c2\u6570\u5728\u5b9a\u4e49\u548c\u4f20\u5165\u65f6\uff0c\u591a\u4e2a\u53c2\u6570\u9017\u53f7\u540e\u8fb9\u5fc5\u987b\u52a0\u7a7a\u683c\u3002 \u6b63\u4f8b \u4e0b\u4f8b\u4e2d\u5b9e\u53c2\u7684 args1\uff0c\u540e\u8fb9\u5fc5\u987b\u8981\u6709\u4e00\u4e2a\u7a7a\u683c\u3002 method ( args1 , args2 , args3 ); \u3010\u5f3a\u5236\u3011 IDE \u7684 text file encoding \u8bbe\u7f6e\u4e3a UTF-8 ; IDE \u4e2d\u6587\u4ef6\u7684\u6362\u884c\u7b26\u4f7f\u7528 Unix \u683c\u5f0f\uff0c \u4e0d\u8981\u4f7f\u7528 Windows \u683c\u5f0f\u3002 \u3010\u63a8\u8350\u3011 \u5355\u4e2a\u65b9\u6cd5\u7684\u603b\u884c\u6570\u4e0d\u8d85\u8fc7 80 \u884c\u3002 \u8bf4\u660e \u5305\u62ec\u65b9\u6cd5\u7b7e\u540d\u3001\u7ed3\u675f\u53f3\u5927\u62ec\u53f7\u3001\u65b9\u6cd5\u5185\u4ee3\u7801\u3001\u6ce8\u91ca\u3001\u7a7a\u884c\u3001\u56de\u8f66\u53ca\u4efb\u4f55\u4e0d\u53ef\u89c1\u5b57\u7b26\u7684\u603b\u884c\u6570\u4e0d\u8d85\u8fc7 80 \u884c\u3002 \u6b63\u4f8b \u4ee3\u7801\u903b\u8f91\u5206\u6e05\u7ea2\u82b1\u548c\u7eff\u53f6\uff0c\u4e2a\u6027\u548c\u5171\u6027\uff0c\u7eff\u53f6\u903b\u8f91\u5355\u72ec\u51fa\u6765\u6210\u4e3a\u989d\u5916\u65b9\u6cd5\uff0c\u4f7f\u4e3b\u5e72\u4ee3\u7801\u66f4\u52a0\u6e05\u6670\uff1b\u5171\u6027\u903b\u8f91\u62bd\u53d6\u6210\u4e3a\u5171\u6027\u65b9\u6cd5\uff0c\u4fbf\u4e8e\u590d\u7528\u548c\u7ef4\u62a4\u3002 \u3010\u63a8\u8350\u3011 \u6ca1\u6709\u5fc5\u8981\u589e\u52a0\u82e5\u5e72\u7a7a\u683c\u6765\u4f7f\u67d0\u4e00\u884c\u7684\u5b57\u7b26\u4e0e\u4e0a\u4e00\u884c\u5bf9\u5e94\u4f4d\u7f6e\u7684\u5b57\u7b26\u5bf9\u9f50\u3002 \u6b63\u4f8b int one = 1 ; long two = 2L ; float three = 3F ; StringBuffer sb = new StringBuffer (); \u8bf4\u660e \u589e\u52a0 sb \u8fd9\u4e2a\u53d8\u91cf\uff0c\u5982\u679c\u9700\u8981\u5bf9\u9f50\uff0c\u5219\u7ed9 a\u3001b\u3001c \u90fd\u8981\u589e\u52a0\u51e0\u4e2a\u7a7a\u683c\uff0c\u5728\u53d8\u91cf\u6bd4\u8f83\u591a\u7684\u60c5\u51b5\u4e0b\uff0c\u662f\u975e\u5e38\u7d2f\u8d58\u7684\u4e8b\u60c5\u3002 \u3010\u63a8\u8350\u3011 \u4e0d\u540c\u903b\u8f91\u3001\u4e0d\u540c\u8bed\u4e49\u3001\u4e0d\u540c\u4e1a\u52a1\u7684\u4ee3\u7801\u4e4b\u95f4\u63d2\u5165\u4e00\u4e2a\u7a7a\u884c\u5206\u9694\u5f00\u6765\u4ee5\u63d0\u5347\u53ef\u8bfb\u6027\u3002 \u8bf4\u660e \u4efb\u4f55\u60c5\u5f62\uff0c\u6ca1\u6709\u5fc5\u8981\u63d2\u5165\u591a\u4e2a\u7a7a\u884c\u8fdb\u884c\u9694\u5f00\u3002","title":"1 3 format"},{"location":"standard/includes/1_4_oop/","text":"\u3010\u5f3a\u5236\u3011 \u907f\u514d\u901a\u8fc7\u4e00\u4e2a\u7c7b\u7684\u5bf9\u8c61\u5f15\u7528\u8bbf\u95ee\u6b64\u7c7b\u7684\u9759\u6001\u53d8\u91cf\u6216\u9759\u6001\u65b9\u6cd5\uff0c\u65e0\u8c13\u589e\u52a0\u7f16\u8bd1\u5668\u89e3\u6790\u6210\u672c\uff0c\u76f4\u63a5\u7528\u7c7b\u540d\u6765\u8bbf\u95ee\u5373\u53ef\u3002 \u3010\u5f3a\u5236\u3011 \u6240\u6709\u7684\u8986\u5199\u65b9\u6cd5\uff0c\u5fc5\u987b\u52a0 @Override \u6ce8\u89e3\u3002 \u8bf4\u660e getObject() \u4e0e get0bject() \u7684\u95ee\u9898\u3002\u4e00\u4e2a\u662f\u5b57\u6bcd\u7684 O \uff0c\u4e00\u4e2a\u662f\u6570\u5b57\u7684 0 \uff0c\u52a0 @Override \u53ef\u4ee5\u51c6\u786e\u5224\u65ad\u662f\u5426\u8986\u76d6\u6210\u529f\u3002\u53e6\u5916\uff0c\u5982\u679c\u5728\u62bd\u8c61\u7c7b\u4e2d\u5bf9\u65b9\u6cd5\u7b7e\u540d\u8fdb\u884c\u4fee\u6539\uff0c\u5176\u5b9e\u73b0\u7c7b\u4f1a\u9a6c\u4e0a\u7f16\u8bd1\u62a5\u9519\u3002 \u3010\u5f3a\u5236\u3011 \u76f8\u540c\u53c2\u6570\u7c7b\u578b\uff0c\u76f8\u540c\u4e1a\u52a1\u542b\u4e49\uff0c\u624d\u53ef\u4ee5\u4f7f\u7528 Java \u7684\u53ef\u53d8\u53c2\u6570\uff0c\u907f\u514d\u4f7f\u7528 Object \u3002 \u8bf4\u660e \u53ef\u53d8\u53c2\u6570\u5fc5\u987b\u653e\u7f6e\u5728\u53c2\u6570\u5217\u8868\u7684\u6700\u540e\u3002\uff08\u63d0\u5021\u540c\u5b66\u4eec\u5c3d\u91cf\u4e0d\u7528\u53ef\u53d8\u53c2\u6570\u7f16\u7a0b\uff09 \u6b63\u4f8b public List < User > listUsers ( String type , Long ... ids ) {...} \u3010\u5f3a\u5236\u3011 \u5916\u90e8\u6b63\u5728\u8c03\u7528\u6216\u8005\u4e8c\u65b9\u5e93\u4f9d\u8d56\u7684\u63a5\u53e3\uff0c\u4e0d\u5141\u8bb8\u4fee\u6539\u65b9\u6cd5\u7b7e\u540d\uff0c\u907f\u514d\u5bf9\u63a5\u53e3\u8c03\u7528\u65b9\u4ea7\u751f\u5f71\u54cd\u3002\u63a5\u53e3\u8fc7\u65f6\u5fc5\u987b\u52a0 @Deprecated \u6ce8\u89e3\uff0c\u5e76\u6e05\u6670\u5730\u8bf4\u660e\u91c7\u7528\u7684\u65b0\u63a5\u53e3\u6216\u8005\u65b0\u670d\u52a1\u662f\u4ec0\u4e48\u3002 \u3010\u5f3a\u5236\u3011 \u4e0d\u80fd\u4f7f\u7528\u8fc7\u65f6\u7684\u7c7b\u6216\u65b9\u6cd5\u3002 \u8bf4\u660e java.net.URLDecoder \u4e2d\u7684\u65b9\u6cd5 decode(String encodeStr) \u8fd9\u4e2a\u65b9\u6cd5\u5df2\u7ecf\u8fc7\u65f6\uff0c\u5e94\u8be5\u4f7f\u7528\u53cc\u53c2\u6570 decode(String source, String encode) \u3002\u63a5\u53e3\u63d0\u4f9b\u65b9\u65e2\u7136\u660e\u786e\u662f\u8fc7\u65f6\u63a5\u53e3\uff0c\u90a3\u4e48\u6709\u4e49\u52a1\u540c\u65f6\u63d0\u4f9b\u65b0\u7684\u63a5\u53e3\uff1b\u4f5c\u4e3a\u8c03\u7528\u65b9\u6765\u8bf4\uff0c\u6709\u4e49\u52a1\u53bb\u8003\u8bc1\u8fc7\u65f6\u65b9\u6cd5\u7684\u65b0\u5b9e\u73b0\u662f\u4ec0\u4e48\u3002 \u3010\u5f3a\u5236\u3011 Object \u7684 equals \u65b9\u6cd5\u5bb9\u6613\u629b\u7a7a\u6307\u9488\u5f02\u5e38\uff0c\u5e94\u4f7f\u7528\u5e38\u91cf\u6216\u786e\u5b9a\u6709\u503c\u7684\u5bf9\u8c61\u6765\u8c03\u7528 equals \u3002 \u6b63\u4f8b \"test\" . equals ( object ); \u53cd\u4f8b object . equals ( \"test\" ); \u8bf4\u660e \u63a8\u8350\u4f7f\u7528 ` java . util . Objects # equals ` \uff08 ` JDK7 ` \u5f15\u5165\u7684\u5de5\u5177\u7c7b \uff09 \u3010\u5f3a\u5236\u3011 \u6240\u6709\u7684\u76f8\u540c\u7c7b\u578b\u7684\u5305\u88c5\u7c7b\u5bf9\u8c61\u4e4b\u95f4\u503c\u7684\u6bd4\u8f83\uff0c\u5168\u90e8\u4f7f\u7528 equals \u65b9\u6cd5\u6bd4\u8f83\u3002 \u8bf4\u660e \u5bf9\u4e8e Integer var = ? \u5728 -128 \u81f3 127 \u8303\u56f4\u5185\u7684\u8d4b\u503c\uff0c Integer \u5bf9\u8c61\u662f\u5728 IntegerCache.cache \u4ea7\u751f\uff0c\u4f1a\u590d\u7528\u5df2\u6709\u5bf9\u8c61\uff0c\u8fd9\u4e2a\u533a\u95f4\u5185\u7684 Integer \u503c\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 == \u8fdb\u884c\u5224\u65ad\uff0c\u4f46\u662f\u8fd9\u4e2a\u533a\u95f4\u4e4b\u5916\u7684\u6240\u6709\u6570\u636e\uff0c \u90fd\u4f1a\u5728\u5806\u4e0a\u4ea7\u751f\uff0c\u5e76\u4e0d\u4f1a\u590d\u7528\u5df2\u6709\u5bf9\u8c61\uff0c\u8fd9\u662f\u4e00\u4e2a\u5927\u5751\uff0c\u63a8\u8350\u4f7f\u7528 equals \u65b9\u6cd5\u8fdb\u884c\u5224\u65ad\u3002 \u5173\u4e8e\u57fa\u672c\u6570\u636e\u7c7b\u578b\u4e0e\u5305\u88c5\u6570\u636e\u7c7b\u578b\u7684\u4f7f\u7528\u6807\u51c6\u5982\u4e0b\uff1a \u3010\u5f3a\u5236\u3011 \u6240\u6709\u7684 POJO \u7c7b\u5c5e\u6027\u5fc5\u987b\u4f7f\u7528\u5305\u88c5\u6570\u636e\u7c7b\u578b\u3002 \u3010\u5f3a\u5236\u3011 RPC \u65b9\u6cd5\u7684\u8fd4\u56de\u503c\u548c\u53c2\u6570\u5fc5\u987b\u4f7f\u7528\u5305\u88c5\u6570\u636e\u7c7b\u578b\u3002 \u3010\u63a8\u8350\u3011 \u6240\u6709\u7684\u5c40\u90e8\u53d8\u91cf\u4f7f\u7528\u57fa\u672c\u6570\u636e\u7c7b\u578b\u3002 \u8bf4\u660e POJO \u7c7b\u5c5e\u6027\u6ca1\u6709\u521d\u503c\u662f\u63d0\u9192\u4f7f\u7528\u8005\u5728\u9700\u8981\u4f7f\u7528\u65f6\uff0c\u5fc5\u987b\u81ea\u5df1\u663e\u5f0f\u5730\u8fdb\u884c\u8d4b\u503c\uff0c\u4efb\u4f55 NPE \u95ee\u9898\uff0c\u6216\u8005\u5165\u5e93\u68c0\u67e5\uff0c\u90fd\u7531\u4f7f\u7528\u8005\u6765\u4fdd\u8bc1\u3002 \u6b63\u4f8b \u6570\u636e\u5e93\u7684\u67e5\u8be2\u7ed3\u679c\u53ef\u80fd\u662f null \uff0c\u56e0\u4e3a\u81ea\u52a8\u62c6\u7bb1\uff0c\u7528\u57fa\u672c\u6570\u636e\u7c7b\u578b\u63a5\u6536\u6709 NPE \u98ce\u9669\u3002 \u53cd\u4f8b \u6bd4\u5982\u663e\u793a\u6210\u4ea4\u603b\u989d\u6da8\u8dcc\u60c5\u51b5\uff0c\u5373\u6b63\u8d1f x% \uff0c x \u4e3a\u57fa\u672c\u6570\u636e\u7c7b\u578b\uff0c\u8c03\u7528\u7684 RPC \u670d\u52a1\uff0c\u8c03\u7528\u4e0d\u6210\u529f\u65f6\uff0c\u8fd4\u56de\u7684\u662f\u9ed8\u8ba4\u503c\uff0c\u9875\u9762\u663e\u793a\u4e3a 0% \uff0c\u8fd9\u662f\u4e0d\u5408\u7406\u7684\uff0c \u5e94\u8be5\u663e\u793a\u6210\u4e2d\u5212\u7ebf\u3002\u6240\u4ee5\u5305\u88c5\u6570\u636e\u7c7b\u578b\u7684 null \u503c\uff0c\u80fd\u591f\u8868\u793a\u989d\u5916\u7684\u4fe1\u606f\uff0c\u5982\uff1a\u8fdc\u7a0b\u8c03\u7528\u5931\u8d25\uff0c\u5f02\u5e38\u9000\u51fa\u3002 \u3010\u5f3a\u5236\u3011 \u5b9a\u4e49 DO/DTO/VO \u7b49 POJO \u7c7b\u65f6\uff0c\u4e0d\u8981\u8bbe\u5b9a\u4efb\u4f55\u5c5e\u6027\u9ed8\u8ba4\u503c\u3002 \u53cd\u4f8b POJO \u7c7b\u7684 gmtCreate \u9ed8\u8ba4\u503c\u4e3a new Date() \uff0c\u4f46\u662f\u8fd9\u4e2a\u5c5e\u6027\u5728\u6570\u636e\u63d0\u53d6\u65f6\u5e76\u6ca1\u6709\u7f6e\u5165\u5177\u4f53\u503c\uff0c\u5728\u66f4\u65b0\u5176\u5b83\u5b57\u6bb5\u65f6\u53c8\u9644\u5e26\u66f4\u65b0\u4e86\u6b64\u5b57\u6bb5\uff0c\u5bfc\u81f4\u521b\u5efa\u65f6\u95f4\u88ab\u4fee\u6539\u6210\u5f53\u524d\u65f6\u95f4\u3002 \u3010\u5f3a\u5236\u3011 \u5e8f\u5217\u5316\u7c7b\u65b0\u589e\u5c5e\u6027\u65f6\uff0c\u8bf7\u4e0d\u8981\u4fee\u6539 serialVersionUID \u5b57\u6bb5\uff0c\u907f\u514d\u53cd\u5e8f\u5217\u5931\u8d25\uff1b\u5982\u679c\u5b8c\u5168\u4e0d\u517c\u5bb9\u5347\u7ea7\uff0c\u907f\u514d\u53cd\u5e8f\u5217\u5316\u6df7\u4e71\uff0c \u90a3\u4e48\u8bf7\u4fee\u6539 serialVersionUID \u503c\u3002 \u8bf4\u660e \u6ce8\u610f serialVersionUID \u4e0d\u4e00\u81f4\u4f1a\u629b\u51fa\u5e8f\u5217\u5316\u8fd0\u884c\u65f6\u5f02\u5e38\u3002 \u3010\u5f3a\u5236\u3011 \u6784\u9020\u65b9\u6cd5\u91cc\u9762\u7981\u6b62\u52a0\u5165\u4efb\u4f55\u4e1a\u52a1\u903b\u8f91\uff0c\u5982\u679c\u6709\u521d\u59cb\u5316\u903b\u8f91\uff0c\u8bf7\u653e\u5728 init \u65b9\u6cd5\u4e2d\u3002 \u3010\u5f3a\u5236\u3011 POJO \u7c7b\u5fc5\u987b\u5199 toString \u65b9\u6cd5\u3002\u4f7f\u7528 IDE \u4e2d\u7684\u5de5\u5177\uff1asource > generate toString \u65f6\uff0c \u5982\u679c\u7ee7\u627f\u4e86\u53e6\u4e00\u4e2a POJO \u7c7b\uff0c\u6ce8\u610f\u5728\u524d\u9762\u52a0\u4e00\u4e0b super.toString \u3002 \u8bf4\u660e \u5728\u65b9\u6cd5\u6267\u884c\u629b\u51fa\u5f02\u5e38\u65f6\uff0c\u53ef\u4ee5\u76f4\u63a5\u8c03\u7528 POJO \u7684 toString() \u65b9\u6cd5\u6253\u5370\u5176\u5c5e\u6027\u503c\uff0c\u4fbf\u4e8e\u6392\u67e5\u95ee\u9898\u3002 \u3010\u5f3a\u5236\u3011 \u7981\u6b62\u5728 POJO \u7c7b\u4e2d\uff0c\u540c\u65f6\u5b58\u5728\u5bf9\u5e94\u5c5e\u6027 xxx \u7684 isXxx() \u548c getXxx() \u65b9\u6cd5\u3002 \u8bf4\u660e \u6846\u67b6\u5728\u8c03\u7528\u5c5e\u6027 xxx \u7684\u63d0\u53d6\u65b9\u6cd5\u65f6\uff0c\u5e76\u4e0d\u80fd\u786e\u5b9a\u54ea\u4e2a\u65b9\u6cd5\u4e00\u5b9a\u662f\u88ab\u4f18\u5148\u8c03\u7528\u5230\u3002 \u3010\u63a8\u8350\u3011 \u4f7f\u7528\u7d22\u5f15\u8bbf\u95ee\u7528 String \u7684 split \u65b9\u6cd5\u5f97\u5230\u7684\u6570\u7ec4\u65f6\uff0c\u9700\u505a\u6700\u540e\u4e00\u4e2a\u5206\u9694\u7b26\u540e\u6709\u65e0\u5185\u5bb9\u7684\u68c0\u67e5\uff0c \u5426\u5219\u4f1a\u6709\u629b IndexOutOfBoundsException \u7684\u98ce\u9669\u3002 \u8bf4\u660e String str = \"a,b,c,,\" ; String [] ary = str . split ( \",\" ); // \u9884\u671f\u5927\u4e8e 3\uff0c\u7ed3\u679c\u662f 3 System . out . println ( ary . length ); \u3010\u63a8\u8350\u3011 \u5f53\u4e00\u4e2a\u7c7b\u6709\u591a\u4e2a\u6784\u9020\u65b9\u6cd5\uff0c\u6216\u8005\u591a\u4e2a\u540c\u540d\u65b9\u6cd5\uff0c\u8fd9\u4e9b\u65b9\u6cd5\u5e94\u8be5\u6309\u987a\u5e8f\u653e\u7f6e\u5728\u4e00\u8d77\uff0c\u4fbf\u4e8e\u9605\u8bfb\uff0c\u6b64\u6761\u89c4\u5219\u4f18\u5148\u4e8e\u7b2c 16 \u6761\u89c4\u5219\u3002 \u3010\u63a8\u8350\u3011 \u7c7b\u5185\u65b9\u6cd5\u5b9a\u4e49\u7684\u987a\u5e8f\u4f9d\u6b21\u662f\uff1a\u516c\u6709\u65b9\u6cd5\u6216\u4fdd\u62a4\u65b9\u6cd5 > \u79c1\u6709\u65b9\u6cd5 > getter/setter \u65b9\u6cd5\u3002 \u8bf4\u660e \u516c\u6709\u65b9\u6cd5\u662f\u7c7b\u7684\u8c03\u7528\u8005\u548c\u7ef4\u62a4\u8005\u6700\u5173\u5fc3\u7684\u65b9\u6cd5\uff0c\u9996\u5c4f\u5c55\u793a\u6700\u597d\uff1b\u4fdd\u62a4\u65b9\u6cd5\u867d\u7136\u53ea\u662f\u5b50\u7c7b\u5173\u5fc3\uff0c\u4e5f\u53ef\u80fd\u662f\u201c\u6a21\u677f\u8bbe\u8ba1\u6a21\u5f0f\u201d\u4e0b\u7684\u6838\u5fc3\u65b9\u6cd5\uff1b \u800c\u79c1\u6709\u65b9\u6cd5\u5916\u90e8\u4e00\u822c\u4e0d\u9700\u8981\u7279\u522b\u5173\u5fc3\uff0c\u662f\u4e00\u4e2a\u9ed1\u76d2\u5b9e\u73b0\uff1b\u56e0\u4e3a\u627f\u8f7d\u7684\u4fe1\u606f\u4ef7\u503c\u8f83\u4f4e\uff0c\u6240\u6709 Service \u548c DAO \u7684 getter/setter \u65b9\u6cd5\u653e\u5728\u7c7b\u4f53\u6700\u540e\u3002 \u3010\u63a8\u8350\u3011 setter \u65b9\u6cd5\u4e2d\uff0c\u53c2\u6570\u540d\u79f0\u4e0e\u7c7b\u6210\u5458\u53d8\u91cf\u540d\u79f0\u4e00\u81f4\uff0cthis.\u6210\u5458\u540d = \u53c2\u6570\u540d\u3002\u5728 getter/setter \u65b9\u6cd5\u4e2d\uff0c\u4e0d\u8981\u589e\u52a0\u4e1a\u52a1\u903b\u8f91\uff0c\u589e\u52a0\u6392\u67e5\u95ee\u9898\u7684\u96be\u5ea6\u3002 \u53cd\u4f8b public Integer getData () { if ( condition ) { return this . data + 100 ; } else { return this . data - 100 ; } } \u3010\u63a8\u8350\u3011 \u5faa\u73af\u4f53\u5185\uff0c\u5b57\u7b26\u4e32\u7684\u8fde\u63a5\u65b9\u5f0f\uff0c\u4f7f\u7528 StringBuilder \u7684 append \u65b9\u6cd5\u8fdb\u884c\u6269\u5c55\u3002 \u8bf4\u660e \u4e0b\u4f8b\u4e2d\uff0c\u53cd\u7f16\u8bd1\u51fa\u7684\u5b57\u8282\u7801\u6587\u4ef6\u663e\u793a\u6bcf\u6b21\u5faa\u73af\u90fd\u4f1a new \u51fa\u4e00\u4e2a StringBuilder \u5bf9\u8c61\uff0c\u7136\u540e\u8fdb\u884c append \u64cd\u4f5c\uff0c \u6700\u540e\u901a\u8fc7 toString \u65b9\u6cd5\u8fd4\u56de String \u5bf9\u8c61\uff0c\u9020\u6210\u5185\u5b58\u8d44\u6e90\u6d6a\u8d39\u3002 String str = \"start\" ; for ( int i = 0 ; i < 100 ; i ++ ) { str = str + \"hello\" ; } \u3010\u63a8\u8350\u3011 final \u53ef\u4ee5\u58f0\u660e\u7c7b\u3001\u6210\u5458\u53d8\u91cf\u3001\u65b9\u6cd5\u3001\u4ee5\u53ca\u672c\u5730\u53d8\u91cf\uff0c\u4e0b\u5217\u60c5\u51b5\u4f7f\u7528 final \u5173\u952e\u5b57\uff1a \u4e0d\u5141\u8bb8\u88ab\u7ee7\u627f\u7684\u7c7b\uff0c\u5982\uff1a String \u7c7b\u3002 \u4e0d\u5141\u8bb8\u4fee\u6539\u5f15\u7528\u7684\u57df\u5bf9\u8c61\u3002 \u4e0d\u5141\u8bb8\u88ab\u91cd\u5199\u7684\u65b9\u6cd5\uff0c\u5982\uff1a POJO \u7c7b\u7684 setter \u65b9\u6cd5\u3002 \u4e0d\u5141\u8bb8\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u91cd\u65b0\u8d4b\u503c\u7684\u5c40\u90e8\u53d8\u91cf\u3002 \u907f\u514d\u4e0a\u4e0b\u6587\u91cd\u590d\u4f7f\u7528\u4e00\u4e2a\u53d8\u91cf\uff0c\u4f7f\u7528 final \u63cf\u8ff0\u53ef\u4ee5\u5f3a\u5236\u91cd\u65b0\u5b9a\u4e49\u4e00\u4e2a\u53d8\u91cf\uff0c\u65b9\u4fbf\u66f4\u597d\u5730\u8fdb\u884c\u91cd\u6784\u3002 \u3010\u63a8\u8350\u3011 \u614e\u7528 Object \u7684 clone \u65b9\u6cd5\u6765\u62f7\u8d1d\u5bf9\u8c61\u3002 \u8bf4\u660e \u5bf9\u8c61\u7684 clone \u65b9\u6cd5\u9ed8\u8ba4\u662f\u6d45\u62f7\u8d1d\uff0c\u82e5\u60f3\u5b9e\u73b0\u6df1\u62f7\u8d1d\u9700\u8981\u91cd\u5199 clone \u65b9\u6cd5\u5b9e\u73b0\u57df\u5bf9\u8c61\u7684\u6df1\u5ea6\u904d\u5386\u5f0f\u62f7\u8d1d\u3002 \u3010\u63a8\u8350\u3011 \u7c7b\u6210\u5458\u4e0e\u65b9\u6cd5\u8bbf\u95ee\u63a7\u5236\u4ece\u4e25\uff1a \u5982\u679c\u4e0d\u5141\u8bb8\u5916\u90e8\u76f4\u63a5\u901a\u8fc7 new \u6765\u521b\u5efa\u5bf9\u8c61\uff0c\u90a3\u4e48\u6784\u9020\u65b9\u6cd5\u5fc5\u987b\u662f private \u3002 \u5de5\u5177\u7c7b\u4e0d\u5141\u8bb8\u6709 public \u6216 default \u6784\u9020\u65b9\u6cd5\u3002 \u7c7b\u975e static \u6210\u5458\u53d8\u91cf\u5e76\u4e14\u4e0e\u5b50\u7c7b\u5171\u4eab\uff0c\u5fc5\u987b\u662f protected \u3002 \u7c7b\u975e static \u6210\u5458\u53d8\u91cf\u5e76\u4e14\u4ec5\u5728\u672c\u7c7b\u4f7f\u7528\uff0c\u5fc5\u987b\u662f private \u3002 \u7c7b static \u6210\u5458\u53d8\u91cf\u5982\u679c\u4ec5\u5728\u672c\u7c7b\u4f7f\u7528\uff0c\u5fc5\u987b\u662f private \u3002 \u82e5\u662f static \u6210\u5458\u53d8\u91cf\uff0c\u8003\u8651\u662f\u5426\u4e3a final \u3002 \u7c7b\u6210\u5458\u65b9\u6cd5\u53ea\u4f9b\u7c7b\u5185\u90e8\u8c03\u7528\uff0c\u5fc5\u987b\u662f private \u3002 \u7c7b\u6210\u5458\u65b9\u6cd5\u53ea\u5bf9\u7ee7\u627f\u7c7b\u516c\u5f00\uff0c\u90a3\u4e48\u9650\u5236\u4e3a protected \u3002 \u8bf4\u660e \u4efb\u4f55\u7c7b\u3001\u65b9\u6cd5\u3001\u53c2\u6570\u3001\u53d8\u91cf\uff0c\u4e25\u63a7\u8bbf\u95ee\u8303\u56f4\u3002\u8fc7\u4e8e\u5bbd\u6cdb\u7684\u8bbf\u95ee\u8303\u56f4\uff0c\u4e0d\u5229\u4e8e\u6a21\u5757\u89e3\u8026\u3002 \u601d\u8003 \u5982\u679c\u662f\u4e00\u4e2a private \u7684\u65b9\u6cd5\uff0c\u60f3\u5220\u9664\u5c31\u5220\u9664\uff0c\u53ef\u662f\u4e00\u4e2a public \u7684 Service \u6210\u5458\u65b9\u6cd5\u6216\u6210\u5458\u53d8\u91cf\uff0c\u5220\u9664\u4e00\u4e0b\uff0c\u4e0d\u5f97\u624b\u5fc3\u5192\u70b9\u6c57\u5417\uff1f\u53d8\u91cf\u50cf\u81ea\u5df1\u7684\u5c0f\u5b69\uff0c\u5c3d\u91cf\u5728\u81ea\u5df1\u7684\u89c6\u7ebf\u5185\uff0c\u53d8\u91cf\u4f5c\u7528\u57df\u592a\u5927\uff0c\u65e0\u9650\u5236\u7684\u5230\u5904\u8dd1\uff0c\u90a3\u4e48\u4f60\u4f1a\u62c5\u5fc3\u7684\u3002","title":"1 4 oop"},{"location":"standard/includes/1_5_collection/","text":"\u3010\u5f3a\u5236\u3011 \u5173\u4e8e hashCode \u548c equals \u7684\u5904\u7406\uff0c\u9075\u5faa\u5982\u4e0b\u89c4\u5219\uff1a \u53ea\u8981\u91cd\u5199 equals \uff0c\u5c31\u5fc5\u987b\u91cd\u5199 hashCode \u3002 \u56e0\u4e3a Set \u5b58\u50a8\u7684\u662f\u4e0d\u91cd\u590d\u7684\u5bf9\u8c61\uff0c\u4f9d\u636e hashCode \u548c equals \u8fdb\u884c\u5224\u65ad\uff0c\u6240\u4ee5 Set \u5b58\u50a8\u7684\u5bf9\u8c61\u5fc5\u987b\u91cd\u5199\u8fd9\u4e24\u4e2a\u65b9\u6cd5\u3002 \u5982\u679c\u81ea\u5b9a\u4e49\u5bf9\u8c61\u4f5c\u4e3a Map \u7684\u952e\uff0c\u90a3\u4e48\u5fc5\u987b\u91cd\u5199 hashCode \u548c equals \u3002 \u8bf4\u660e String \u91cd\u5199\u4e86 hashCode \u548c equals \u65b9\u6cd5\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u975e\u5e38\u6109\u5feb\u5730\u4f7f\u7528 String \u5bf9\u8c61\u4f5c\u4e3a key \u6765\u4f7f\u7528\u3002 \u3010\u5f3a\u5236\u3011 ArrayList \u7684 subList \u7ed3\u679c\u4e0d\u53ef\u5f3a\u8f6c\u6210 ArrayList \uff0c\u5426\u5219\u4f1a\u629b\u51fa ClassCastException \u5f02\u5e38\uff0c\u5373 java.util.RandomAccessSubList cannot be cast to java.util.ArrayList \u3002 \u8bf4\u660e subList \u8fd4\u56de\u7684\u662f ArrayList \u7684\u5185\u90e8\u7c7b subList \uff0c\u5e76\u4e0d\u662f ArrayList \u800c\u662f ArrayList \u7684\u4e00\u4e2a\u89c6\u56fe\uff0c \u5bf9\u4e8e subList \u5b50\u5217\u8868\u7684\u6240\u6709\u64cd\u4f5c\u6700\u7ec8\u4f1a\u53cd\u6620\u5230\u539f\u5217\u8868\u4e0a\u3002 \u3010\u5f3a\u5236\u3011 \u5728 subList \u573a\u666f\u4e2d\uff0c\u9ad8\u5ea6\u6ce8\u610f\u5bf9\u539f\u96c6\u5408\u5143\u7d20\u7684\u589e\u52a0\u6216\u5220\u9664\uff0c \u5747\u4f1a\u5bfc\u81f4\u5b50\u5217\u8868\u7684\u904d\u5386\u3001\u589e\u52a0\u3001\u5220\u9664\u4ea7\u751f ConcurrentModificationException \u5f02\u5e38\u3002 \u3010\u5f3a\u5236\u3011 \u4f7f\u7528\u96c6\u5408\u8f6c\u6570\u7ec4\u7684\u65b9\u6cd5\uff0c\u5fc5\u987b\u4f7f\u7528\u96c6\u5408\u7684 toArray(T[] array) \uff0c\u4f20\u5165\u7684\u662f\u7c7b\u578b\u5b8c\u5168\u4e00\u6837\u7684\u6570\u7ec4\uff0c\u5927\u5c0f\u5c31\u662f list.size() \u3002 \u8bf4\u660e \u4f7f\u7528 toArray \u5e26\u53c2\u65b9\u6cd5\uff0c\u5165\u53c2\u5206\u914d\u7684\u6570\u7ec4\u7a7a\u95f4\u4e0d\u591f\u5927\u65f6\uff0c toArray \u65b9\u6cd5\u5185\u90e8\u5c06\u91cd\u65b0\u5206\u914d\u5185\u5b58\u7a7a\u95f4\uff0c\u5e76\u8fd4\u56de\u65b0\u6570\u7ec4\u5730\u5740\uff1b \u5982\u679c\u6570\u7ec4\u5143\u7d20\u4e2a\u6570\u5927\u4e8e\u5b9e\u9645\u6240\u9700\uff0c\u4e0b\u6807\u4e3a[ list.size() ] \u7684\u6570\u7ec4\u5143\u7d20\u5c06\u88ab\u7f6e\u4e3a null \uff0c\u5176\u5b83\u6570\u7ec4\u5143\u7d20\u4fdd\u6301\u539f\u503c\uff0c\u56e0\u6b64\u6700\u597d\u5c06\u65b9\u6cd5\u5165\u53c2\u6570\u7ec4\u5927\u5c0f\u5b9a\u4e49\u4e0e\u96c6\u5408\u5143\u7d20\u4e2a\u6570\u4e00\u81f4\u3002 \u6b63\u4f8b List < String > list = new ArrayList < String > ( 2 ); list . add ( \"guan\" ); list . add ( \"bao\" ); String [] array = new String [ list . size () ] ; array = list . toArray ( array ); \u53cd\u4f8b \u76f4\u63a5\u4f7f\u7528 toArray \u65e0\u53c2\u65b9\u6cd5\u5b58\u5728\u95ee\u9898\uff0c\u6b64\u65b9\u6cd5\u8fd4\u56de\u503c\u53ea\u80fd\u662f Object[] \u7c7b\uff0c \u82e5\u5f3a\u8f6c\u5176\u5b83\u7c7b\u578b\u6570\u7ec4\u5c06\u51fa\u73b0 ClassCastException \u9519\u8bef\u3002 \u3010\u5f3a\u5236\u3011 \u4f7f\u7528\u5de5\u5177\u7c7b Arrays.asList() \u628a\u6570\u7ec4\u8f6c\u6362\u6210\u96c6\u5408\u65f6\uff0c\u4e0d\u80fd\u4f7f\u7528\u5176\u4fee\u6539\u96c6\u5408\u76f8\u5173\u7684\u65b9\u6cd5\uff0c \u5b83\u7684 add/remove/clear \u65b9\u6cd5\u4f1a\u629b\u51fa UnsupportedOperationException \u5f02\u5e38\u3002 \u8bf4\u660e asList \u7684\u8fd4\u56de\u5bf9\u8c61\u662f\u4e00\u4e2a Arrays \u5185\u90e8\u7c7b\uff0c\u5e76\u6ca1\u6709\u5b9e\u73b0\u96c6\u5408\u7684\u4fee\u6539\u65b9\u6cd5\u3002 Arrays.asList \u4f53\u73b0\u7684\u662f\u9002\u914d\u5668\u6a21\u5f0f\uff0c\u53ea\u662f\u8f6c\u6362\u63a5\u53e3\uff0c\u540e\u53f0\u7684\u6570\u636e\u4ecd\u662f\u6570\u7ec4\u3002 String [] str = new String [] { \"you\" , \"wu\" }; List list = Arrays . asList ( str ); \u7b2c\u4e00\u79cd\u60c5\u51b5 \uff1a list . add ( \"yangguanbao\" ); \u8fd0\u884c\u65f6\u5f02\u5e38 \u3002 \u7b2c\u4e8c\u79cd\u60c5\u51b5 \uff1a str [ 0 ] = \"gujin\" ; \u90a3\u4e48 list . get ( 0 ) \u4e5f\u4f1a\u968f\u4e4b\u4fee\u6539 \u3002 \u3010\u5f3a\u5236\u3011 \u6cdb\u578b\u901a\u914d\u7b26 <? extends T> \u6765\u63a5\u6536\u8fd4\u56de\u7684\u6570\u636e\uff0c\u6b64\u5199\u6cd5\u7684\u6cdb\u578b\u96c6\u5408\u4e0d\u80fd\u4f7f\u7528 add \u65b9\u6cd5\uff0c \u800c <? super T> \u4e0d\u80fd\u4f7f\u7528 get \u65b9\u6cd5\uff0c\u4f5c\u4e3a\u63a5\u53e3\u8c03\u7528\u8d4b\u503c\u65f6\u6613\u51fa\u9519\u3002 \u8bf4\u660e \u6269\u5c55\u8bf4\u4e00\u4e0b PECS(Producer Extends Consumer Super) \u539f\u5219\uff1a \u7b2c\u4e00\u3001\u9891\u7e41\u5f80\u5916\u8bfb\u53d6\u5185\u5bb9\u7684\uff0c\u9002\u5408\u7528 <? extends T> \u3002 \u7b2c\u4e8c\u3001\u7ecf\u5e38\u5f80\u91cc\u63d2\u5165\u7684\uff0c\u9002\u5408\u7528 <? super T> \u3002 \u3010\u5f3a\u5236\u3011 \u4e0d\u8981\u5728 foreach \u5faa\u73af\u91cc\u8fdb\u884c\u5143\u7d20\u7684 remove/add \u64cd\u4f5c\u3002 remove \u5143\u7d20\u8bf7\u4f7f\u7528 Iterator \u65b9\u5f0f\uff0c \u5982\u679c\u5e76\u53d1\u64cd\u4f5c\uff0c\u9700\u8981\u5bf9 Iterator \u5bf9\u8c61\u52a0\u9501\u3002 \u6b63\u4f8b List < String > list = new ArrayList <> (); list . add ( \"1\" ); list . add ( \"2\" ); Iterator < String > iterator = list . iterator (); while ( iterator . hasNext ()) { String item = iterator . next (); if ( \u5220\u9664\u5143\u7d20\u7684\u6761\u4ef6 ) { iterator . remove (); } } \u53cd\u4f8b for ( String item : list ) { if ( \"1\" . equals ( item )) { list . remove ( item ); } } \u601d\u8003 \u4ee5\u4e0a\u4ee3\u7801\u7684\u6267\u884c\u7ed3\u679c\u80af\u5b9a\u4f1a\u51fa\u4e4e\u5927\u5bb6\u7684\u610f\u6599\uff0c\u90a3\u4e48\u8bd5\u4e00\u4e0b\u628a\u201c1\u201d\u6362\u6210\u201c2\u201d\uff0c\u4f1a\u662f\u540c\u6837\u7684\u7ed3\u679c\u5417\uff1f \u3010\u5f3a\u5236\u3011 \u5728 JDK7 \u7248\u672c\u53ca\u4ee5\u4e0a\uff0c Comparator \u5b9e\u73b0\u7c7b\u8981\u6ee1\u8db3\u5982\u4e0b\u4e09\u4e2a\u6761\u4ef6\uff0c \u4e0d\u7136 Arrays.sort \uff0c Collections.sort \u4f1a\u62a5 IllegalArgumentException \u5f02\u5e38\u3002 \u8bf4\u660e \u4e09\u4e2a\u6761\u4ef6\u5982\u4e0b\uff1a 1. x\uff0cy \u7684\u6bd4\u8f83\u7ed3\u679c\u548c y\uff0cx \u7684\u6bd4\u8f83\u7ed3\u679c\u76f8\u53cd\u3002 2. x>y \uff0c y>z \uff0c\u5219 x>z \u3002 3. x=y \uff0c\u5219 x \uff0c z \u6bd4\u8f83\u7ed3\u679c\u548c y \uff0c z \u6bd4\u8f83\u7ed3\u679c\u76f8\u540c\u3002 \u53cd\u4f8b \u4e0b\u4f8b\u4e2d\u6ca1\u6709\u5904\u7406\u76f8\u7b49\u7684\u60c5\u51b5\uff0c\u5b9e\u9645\u4f7f\u7528\u4e2d\u53ef\u80fd\u4f1a\u51fa\u73b0\u5f02\u5e38\uff1a new Comparator < Student > () { @Override public int compare ( Student o1 , Student o2 ) { return o1 . getId () > o2 . getId () ? 1 : - 1 ; } }; \u3010\u63a8\u8350\u3011 \u96c6\u5408\u6cdb\u578b\u5b9a\u4e49\u65f6\uff0c\u5728 JDK7 \u53ca\u4ee5\u4e0a\uff0c\u4f7f\u7528 diamond \u8bed\u6cd5\u6216\u5168\u7701\u7565\u3002 \u8bf4\u660e \u83f1\u5f62\u6cdb\u578b\uff0c\u5373 diamond \uff0c\u76f4\u63a5\u4f7f\u7528 <> \u6765\u6307\u4ee3\u524d\u8fb9\u5df2\u7ecf\u6307\u5b9a\u7684\u7c7b\u578b\u3002 \u6b63\u4f8b // <> diamond \u65b9\u5f0f HashMap < String , String > userCache = new HashMap <> ( 16 ); // \u5168\u7701\u7565\u65b9\u5f0f ArrayList < User > users = new ArrayList ( 10 ); \u3010\u63a8\u8350\u3011 \u96c6\u5408\u521d\u59cb\u5316\u65f6\uff0c\u6307\u5b9a\u96c6\u5408\u521d\u59cb\u503c\u5927\u5c0f\u3002 \u8bf4\u660e HashMap \u4f7f\u7528 HashMap(int initialCapacity) \u521d\u59cb\u5316\u3002 \u6b63\u4f8b initialCapacity = (\u9700\u8981\u5b58\u50a8\u7684\u5143\u7d20\u4e2a\u6570 / \u8d1f\u8f7d\u56e0\u5b50) + 1 \u3002\u6ce8\u610f\u8d1f\u8f7d\u56e0\u5b50\uff08\u5373 loader factor\uff09\u9ed8\u8ba4\u4e3a 0.75 \uff0c \u5982\u679c\u6682\u65f6\u65e0\u6cd5\u786e\u5b9a\u521d\u59cb\u503c\u5927\u5c0f\uff0c\u8bf7\u8bbe\u7f6e\u4e3a 16 \uff08\u5373\u9ed8\u8ba4\u503c\uff09\u3002 \u53cd\u4f8b HashMap \u9700\u8981\u653e\u7f6e 1024 \u4e2a\u5143\u7d20\uff0c\u7531\u4e8e\u6ca1\u6709\u8bbe\u7f6e\u5bb9\u91cf\u521d\u59cb\u5927\u5c0f\uff0c\u968f\u7740\u5143\u7d20\u4e0d\u65ad\u589e\u52a0\uff0c\u5bb9\u91cf 7 \u6b21\u88ab\u8feb\u6269\u5927\uff0c resize \u9700\u8981\u91cd\u5efa hash \u8868\uff0c\u4e25\u91cd\u5f71\u54cd\u6027\u80fd\u3002 \u3010\u63a8\u8350\u3011 \u4f7f\u7528 entrySet \u904d\u5386 Map \u7c7b\u96c6\u5408 KV \uff0c\u800c\u4e0d\u662f keySet \u65b9\u5f0f\u8fdb\u884c\u904d\u5386\u3002 \u8bf4\u660e keySet \u5176\u5b9e\u662f\u904d\u5386\u4e86 2 \u6b21\uff0c\u4e00\u6b21\u662f\u8f6c\u4e3a Iterator \u5bf9\u8c61\uff0c\u53e6\u4e00\u6b21\u662f\u4ece hashMap \u4e2d\u53d6\u51fa key \u6240\u5bf9\u5e94\u7684 value . \u800c entrySet \u53ea\u662f\u904d\u5386\u4e86\u4e00\u6b21\u5c31\u628a key \u548c value \u90fd\u653e\u5230\u4e86 entry \u4e2d\uff0c\u6548\u7387\u66f4\u9ad8\u3002 \u5982\u679c\u662f JDK8 \uff0c\u4f7f\u7528 Map.foreach \u65b9\u6cd5\u3002 \u6b63\u4f8b values() \u8fd4\u56de\u7684\u662f V \u503c\u96c6\u5408\uff0c\u662f\u4e00\u4e2a list \u96c6\u5408\u5bf9\u8c61\uff1b keySet() \u8fd4\u56de\u7684\u662f K \u503c\u96c6\u5408\uff0c\u662f\u4e00\u4e2a Set \u96c6\u5408\u5bf9\u8c61\uff1b entrySet() \u8fd4\u56de\u7684\u662f K-V \u503c\u7ec4\u5408\u96c6\u5408\u3002 \u3010\u63a8\u8350\u3011 \u9ad8\u5ea6\u6ce8\u610f Map \u7c7b\u96c6\u5408 K/V \u80fd\u4e0d\u80fd\u5b58\u50a8 null \u503c\u7684\u60c5\u51b5\uff0c\u5982\u4e0b\u8868\u683c\uff1a | \u96c6\u5408\u7c7b | Key (nullable) | Value(nullable) | Super | \u8bf4\u660e | | :-------------------| :------------------| :-----------------| :---------------| :------------------------| | Hashtable | :material-close: | :material-close: | Dictionary | \u7ebf\u7a0b\u5b89\u5168 | | ConcurrentHashMap | :material-close: | :material-close: | AbstractMap | \u9501\u5206\u6bb5\u6280\u672f\uff08JDK8:CAS\uff09 | | TreeMap | :material-close: | :material-check: | AbstractMap | \u7ebf\u7a0b\u4e0d\u5b89\u5168 | | HashMap | :material-check: | :material-check: | AbstractMap | \u7ebf\u7a0b\u4e0d\u5b89\u5168 | !!! fail \"\u53cd\u4f8b\" \u7531\u4e8e `HashMap` \u7684\u5e72\u6270\uff0c\u5f88\u591a\u4eba\u8ba4\u4e3a `ConcurrentHashMap` \u662f\u53ef\u4ee5\u7f6e\u5165 `null` \u503c\uff0c \u800c\u4e8b\u5b9e\u4e0a\uff0c\u5b58\u50a8 `null` \u503c\u65f6\u4f1a\u629b\u51fa `NPE` \u5f02\u5e38\u3002 \u3010\u53c2\u8003\u3011 \u5408\u7406\u5229\u7528\u597d\u96c6\u5408\u7684\u6709\u5e8f\u6027( sort )\u548c\u7a33\u5b9a\u6027( order )\uff0c\u907f\u514d\u96c6\u5408\u7684\u65e0\u5e8f\u6027( unsort )\u548c\u4e0d\u7a33\u5b9a\u6027( unorder) \u5e26\u6765\u7684\u8d1f\u9762\u5f71\u54cd\u3002 \u8bf4\u660e \u6709\u5e8f\u6027\u662f\u6307\u904d\u5386\u7684\u7ed3\u679c\u662f\u6309\u67d0\u79cd\u6bd4\u8f83\u89c4\u5219\u4f9d\u6b21\u6392\u5217\u7684\u3002\u7a33\u5b9a\u6027\u6307\u96c6\u5408\u6bcf\u6b21\u904d\u5386\u7684\u5143\u7d20\u6b21\u5e8f\u662f\u4e00\u5b9a\u7684\u3002\u5982\uff1a ArrayList \u662f order/unsort \uff1b HashMap \u662f unorder/unsort \uff1b TreeSet \u662f order/sort \u3002 \u3010\u53c2\u8003\u3011 \u5229\u7528 Set \u5143\u7d20\u552f\u4e00\u7684\u7279\u6027\uff0c\u53ef\u4ee5\u5feb\u901f\u5bf9\u4e00\u4e2a\u96c6\u5408\u8fdb\u884c\u53bb\u91cd\u64cd\u4f5c\uff0c\u907f\u514d\u4f7f\u7528 List \u7684 contains \u65b9\u6cd5\u8fdb\u884c\u904d\u5386\u3001\u5bf9\u6bd4\u3001\u53bb\u91cd\u64cd\u4f5c\u3002","title":"1 5 collection"},{"location":"standard/includes/1_6_concurrent/","text":"\u3010\u5f3a\u5236\u3011 \u83b7\u53d6\u5355\u4f8b\u5bf9\u8c61\u9700\u8981\u4fdd\u8bc1\u7ebf\u7a0b\u5b89\u5168\uff0c\u5176\u4e2d\u7684\u65b9\u6cd5\u4e5f\u8981\u4fdd\u8bc1\u7ebf\u7a0b\u5b89\u5168\u3002 !!! note \"\u8bf4\u660e\" \u8d44\u6e90\u9a71\u52a8\u7c7b\u3001\u5de5\u5177\u7c7b\u3001\u5355\u4f8b\u5de5\u5382\u7c7b\u90fd\u9700\u8981\u6ce8\u610f\u3002 \u3010\u5f3a\u5236\u3011 \u521b\u5efa\u7ebf\u7a0b\u6216\u7ebf\u7a0b\u6c60\u65f6\u8bf7\u6307\u5b9a\u6709\u610f\u4e49\u7684\u7ebf\u7a0b\u540d\u79f0\uff0c\u65b9\u4fbf\u51fa\u9519\u65f6\u56de\u6eaf\u3002 \u6b63\u4f8b public class TimerTaskThread extends Thread { public TimerTaskThread () { super . setName ( \"TimerTaskThread\" ); ... } } \u3010\u5f3a\u5236\u3011 \u7ebf\u7a0b\u8d44\u6e90\u5fc5\u987b\u901a\u8fc7\u7ebf\u7a0b\u6c60\u63d0\u4f9b\uff0c\u4e0d\u5141\u8bb8\u5728\u5e94\u7528\u4e2d\u81ea\u884c\u663e\u5f0f\u521b\u5efa\u7ebf\u7a0b\u3002 \u8bf4\u660e \u4f7f\u7528\u7ebf\u7a0b\u6c60\u7684\u597d\u5904\u662f\u51cf\u5c11\u5728\u521b\u5efa\u548c\u9500\u6bc1\u7ebf\u7a0b\u4e0a\u6240\u6d88\u8017\u7684\u65f6\u95f4\u4ee5\u53ca\u7cfb\u7edf\u8d44\u6e90\u7684\u5f00\u9500\uff0c\u89e3\u51b3\u8d44\u6e90\u4e0d\u8db3\u7684\u95ee\u9898\u3002\u5982\u679c\u4e0d\u4f7f\u7528\u7ebf\u7a0b\u6c60\uff0c\u6709\u53ef\u80fd\u9020\u6210\u7cfb\u7edf\u521b\u5efa\u5927\u91cf\u540c\u7c7b\u7ebf\u7a0b\u800c\u5bfc\u81f4\u6d88\u8017\u5b8c\u5185\u5b58\u6216\u8005\u201c\u8fc7\u5ea6\u5207\u6362\u201d\u7684\u95ee\u9898\u3002 \u3010\u5f3a\u5236\u3011 \u7ebf\u7a0b\u6c60\u4e0d\u5141\u8bb8\u4f7f\u7528 Executors \u53bb\u521b\u5efa\uff0c\u800c\u662f\u901a\u8fc7 ThreadPoolExecutor \u7684\u65b9\u5f0f\uff0c\u8fd9\u6837\u7684\u5904\u7406\u65b9\u5f0f\u8ba9\u5199\u7684\u540c\u5b66\u66f4\u52a0\u660e\u786e\u7ebf\u7a0b\u6c60\u7684\u8fd0\u884c\u89c4\u5219\uff0c\u89c4\u907f\u8d44\u6e90\u8017\u5c3d\u7684\u98ce\u9669\u3002 \u8bf4\u660e Executors \u8fd4\u56de\u7684\u7ebf\u7a0b\u6c60\u5bf9\u8c61\u7684\u5f0a\u7aef\u5982\u4e0b\uff1a 1. FixedThreadPool \u548c SingleThreadPool: \u5141\u8bb8\u7684\u8bf7\u6c42\u961f\u5217\u957f\u5ea6\u4e3a Integer.MAX_VALUE\uff0c\u53ef\u80fd\u4f1a\u5806\u79ef\u5927\u91cf\u7684\u8bf7\u6c42\uff0c\u4ece\u800c\u5bfc\u81f4 OOM\u3002 2. CachedThreadPool \u548c ScheduledThreadPool: \u5141\u8bb8\u7684\u521b\u5efa\u7ebf\u7a0b\u6570\u91cf\u4e3a Integer.MAX_VALUE\uff0c\u53ef\u80fd\u4f1a\u521b\u5efa\u5927\u91cf\u7684\u7ebf\u7a0b\uff0c\u4ece\u800c\u5bfc\u81f4 OOM\u3002 \u3010\u5f3a\u5236\u3011 SimpleDateFormat \u662f\u7ebf\u7a0b\u4e0d\u5b89\u5168\u7684\u7c7b\uff0c\u4e00\u822c\u4e0d\u8981\u5b9a\u4e49\u4e3a static \u53d8\u91cf\uff0c\u5982\u679c\u5b9a\u4e49\u4e3astatic\uff0c \u5fc5\u987b\u52a0\u9501\uff0c\u6216\u8005\u4f7f\u7528 DateUtils \u5de5\u5177\u7c7b\u3002 \u6b63\u4f8b private static final ThreadLocal < DateFormat > df = new ThreadLocal < DateFormat > () { @Override protected DateFormat initialValue () { return new SimpleDateFormat ( \"yyyy-MM-dd\" ); } }; \u8bf4\u660e \u5982\u679c\u662f JDK8 \u7684\u5e94\u7528\uff0c\u53ef\u4ee5\u4f7f\u7528 Instant \u4ee3\u66ff Date\uff0cLocalDateTime \u4ee3\u66ff Calendar\uff0c DateTimeFormatter \u4ee3\u66ff SimpleDateFormat\uff0c \u5b98\u65b9\u7ed9\u51fa\u7684\u89e3\u91ca\uff1asimple beautiful strong immutable thread-safe\u3002 \u3010\u5f3a\u5236\u3011 \u9ad8\u5e76\u53d1\u65f6\uff0c\u540c\u6b65\u8c03\u7528\u5e94\u8be5\u53bb\u8003\u91cf\u9501\u7684\u6027\u80fd\u635f\u8017\u3002\u80fd\u7528\u65e0\u9501\u6570\u636e\u7ed3\u6784\uff0c\u5c31\u4e0d\u8981\u7528\u9501\uff1b\u80fd\u9501\u533a\u5757\uff0c\u5c31\u4e0d\u8981\u9501\u6574\u4e2a\u65b9\u6cd5\u4f53\uff1b\u80fd\u7528\u5bf9\u8c61\u9501\uff0c\u5c31\u4e0d\u8981\u7528\u7c7b\u9501\u3002 \u8bf4\u660e \u5c3d\u53ef\u80fd\u4f7f\u52a0\u9501\u7684\u4ee3\u7801\u5757\u5de5\u4f5c\u91cf\u5c3d\u53ef\u80fd\u7684\u5c0f\uff0c\u907f\u514d\u5728\u9501\u4ee3\u7801\u5757\u4e2d\u8c03\u7528 RPC \u65b9\u6cd5\u3002 \u3010\u5f3a\u5236\u3011 \u5bf9\u591a\u4e2a\u8d44\u6e90\u3001\u6570\u636e\u5e93\u8868\u3001\u5bf9\u8c61\u540c\u65f6\u52a0\u9501\u65f6\uff0c\u9700\u8981\u4fdd\u6301\u4e00\u81f4\u7684\u52a0\u9501\u987a\u5e8f\uff0c\u5426\u5219\u53ef\u80fd\u4f1a\u9020\u6210\u6b7b\u9501\u3002 \u8bf4\u660e \u7ebf\u7a0b\u4e00\u9700\u8981\u5bf9\u8868 A\u3001B\u3001C \u4f9d\u6b21\u5168\u90e8\u52a0\u9501\u540e\u624d\u53ef\u4ee5\u8fdb\u884c\u66f4\u65b0\u64cd\u4f5c\uff0c\u90a3\u4e48\u7ebf\u7a0b\u4e8c\u7684\u52a0\u9501\u987a\u5e8f\u4e5f\u5fc5\u987b\u662f A\u3001B\u3001C\uff0c\u5426\u5219\u53ef\u80fd\u51fa\u73b0\u6b7b\u9501\u3002 \u3010\u5f3a\u5236\u3011 \u5e76\u53d1\u4fee\u6539\u540c\u4e00\u8bb0\u5f55\u65f6\uff0c\u907f\u514d\u66f4\u65b0\u4e22\u5931\uff0c\u9700\u8981\u52a0\u9501\u3002\u8981\u4e48\u5728\u5e94\u7528\u5c42\u52a0\u9501\uff0c\u8981\u4e48\u5728\u7f13\u5b58\u52a0\u9501\uff0c\u8981\u4e48\u5728\u6570\u636e\u5e93\u5c42\u4f7f\u7528\u4e50\u89c2\u9501\uff0c\u4f7f\u7528 version \u4f5c\u4e3a\u66f4\u65b0\u4f9d\u636e\u3002 \u8bf4\u660e \u5982\u679c\u6bcf\u6b21\u8bbf\u95ee\u51b2\u7a81\u6982\u7387\u5c0f\u4e8e 20%\uff0c\u63a8\u8350\u4f7f\u7528\u4e50\u89c2\u9501\uff0c\u5426\u5219\u4f7f\u7528\u60b2\u89c2\u9501\u3002\u4e50\u89c2\u9501\u7684\u91cd\u8bd5\u6b21\u6570\u4e0d\u5f97\u5c0f\u4e8e 3 \u6b21\u3002 \u3010\u5f3a\u5236\u3011 \u591a\u7ebf\u7a0b\u5e76\u884c\u5904\u7406\u5b9a\u65f6\u4efb\u52a1\u65f6\uff0cTimer \u8fd0\u884c\u591a\u4e2a TimeTask \u65f6\uff0c\u53ea\u8981\u5176\u4e2d\u4e4b\u4e00\u6ca1\u6709\u6355\u83b7\u629b\u51fa\u7684\u5f02\u5e38\uff0c\u5176\u5b83\u4efb\u52a1\u4fbf\u4f1a\u81ea\u52a8\u7ec8\u6b62\u8fd0\u884c\uff0c \u4f7f\u7528 ScheduledExecutorService \u5219\u6ca1\u6709\u8fd9\u4e2a\u95ee\u9898\u3002 \u3010\u63a8\u8350\u3011 \u4f7f\u7528 CountDownLatch \u8fdb\u884c\u5f02\u6b65\u8f6c\u540c\u6b65\u64cd\u4f5c\uff0c\u6bcf\u4e2a\u7ebf\u7a0b\u9000\u51fa\u524d\u5fc5\u987b\u8c03\u7528 countDown\u65b9\u6cd5\uff0c\u7ebf\u7a0b\u6267\u884c\u4ee3\u7801\u6ce8\u610f catch \u5f02\u5e38\uff0c \u786e\u4fdd countDown \u65b9\u6cd5\u88ab\u6267\u884c\u5230\uff0c\u907f\u514d\u4e3b\u7ebf\u7a0b\u65e0\u6cd5\u6267\u884c\u81f3 await \u65b9\u6cd5\uff0c\u76f4\u5230\u8d85\u65f6\u624d\u8fd4\u56de\u7ed3\u679c\u3002 \u8bf4\u660e \u6ce8\u610f\uff0c\u5b50\u7ebf\u7a0b\u629b\u51fa\u5f02\u5e38\u5806\u6808\uff0c\u4e0d\u80fd\u5728\u4e3b\u7ebf\u7a0b try-catch \u5230\u3002 \u3010\u63a8\u8350\u3011 \u907f\u514d Random \u5b9e\u4f8b\u88ab\u591a\u7ebf\u7a0b\u4f7f\u7528\uff0c\u867d\u7136\u5171\u4eab\u8be5\u5b9e\u4f8b\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\uff0c\u4f46\u4f1a\u56e0\u7ade\u4e89\u540c\u4e00 seed \u5bfc\u81f4\u7684\u6027\u80fd\u4e0b\u964d\u3002 \u8bf4\u660e Random \u5b9e\u4f8b\u5305\u62ec java.util.Random \u7684\u5b9e\u4f8b\u6216\u8005 Math.random()\u7684\u65b9\u5f0f\u3002 \u6b63\u4f8b \u5728 JDK7 \u4e4b\u540e\uff0c\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 API ThreadLocalRandom\uff0c\u800c\u5728 JDK7 \u4e4b\u524d\uff0c\u9700\u8981\u7f16\u7801\u4fdd\u8bc1\u6bcf\u4e2a\u7ebf\u7a0b\u6301\u6709\u4e00\u4e2a\u5b9e\u4f8b\u3002 \u3010\u63a8\u8350\u3011 \u5728\u5e76\u53d1\u573a\u666f\u4e0b\uff0c\u901a\u8fc7\u53cc\u91cd\u68c0\u67e5\u9501\uff08double-checked locking\uff09\u5b9e\u73b0\u5ef6\u8fdf\u521d\u59cb\u5316\u7684\u4f18\u5316\u95ee\u9898\u9690\u60a3(\u53ef\u53c2\u8003 The \"Double-Checked Locking is Broken\" Declaration)\uff0c\u63a8\u8350\u89e3\u51b3\u65b9\u6848\u4e2d\u8f83\u4e3a\u7b80\u5355\u4e00\u79cd\uff08\u9002\u7528\u4e8e JDK5 \u53ca\u4ee5\u4e0a\u7248\u672c\uff09\uff0c \u5c06\u76ee\u6807\u5c5e\u6027\u58f0\u660e\u4e3a volatile \u578b\u3002 \u53cd\u4f8b class LazyInitDemo { private Helper helper = null ; public Helper getHelper () { if ( helper == null ) synchronized ( this ) { if ( helper == null ) helper = new Helper (); } return helper ; } // other methods and fields... } \u3010\u53c2\u8003\u3011 volatile \u89e3\u51b3\u591a\u7ebf\u7a0b\u5185\u5b58\u4e0d\u53ef\u89c1\u95ee\u9898\u3002\u5bf9\u4e8e\u4e00\u5199\u591a\u8bfb\uff0c\u662f\u53ef\u4ee5\u89e3\u51b3\u53d8\u91cf\u540c\u6b65\u95ee\u9898\uff0c\u4f46\u662f\u5982\u679c\u591a\u5199\uff0c\u540c\u6837\u65e0\u6cd5\u89e3\u51b3\u7ebf\u7a0b\u5b89\u5168\u95ee\u9898\u3002 \u5982\u679c\u662f count++\u64cd\u4f5c\uff0c\u4f7f\u7528\u5982\u4e0b\u7c7b\u5b9e\u73b0\uff1aAtomicInteger count = new AtomicInteger(); count.addAndGet(1); \u5982\u679c\u662f JDK8\uff0c\u63a8\u8350\u4f7f\u7528 LongAdder \u5bf9\u8c61\uff0c\u6bd4 AtomicLong \u6027\u80fd\u66f4\u597d\uff08\u51cf\u5c11\u4e50\u89c2\u9501\u7684\u91cd\u8bd5\u6b21\u6570\uff09\u3002 \u3010\u53c2\u8003\u3011 HashMap \u5728\u5bb9\u91cf\u4e0d\u591f\u8fdb\u884c resize \u65f6\u7531\u4e8e\u9ad8\u5e76\u53d1\u53ef\u80fd\u51fa\u73b0\u6b7b\u94fe\uff0c\u5bfc\u81f4 CPU \u98d9\u5347\uff0c\u5728\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u53ef\u4ee5\u4f7f\u7528\u5176\u5b83\u6570\u636e\u7ed3\u6784\u6216\u52a0\u9501\u6765\u89c4\u907f\u6b64\u98ce\u9669\u3002 \u3010\u53c2\u8003\u3011 ThreadLocal \u65e0\u6cd5\u89e3\u51b3\u5171\u4eab\u5bf9\u8c61\u7684\u66f4\u65b0\u95ee\u9898\uff0cThreadLocal \u5bf9\u8c61\u5efa\u8bae\u4f7f\u7528 static\u4fee\u9970\u3002\u8fd9\u4e2a\u53d8\u91cf\u662f\u9488\u5bf9\u4e00\u4e2a\u7ebf\u7a0b\u5185\u6240\u6709\u64cd\u4f5c\u5171\u4eab\u7684\uff0c \u6240\u4ee5\u8bbe\u7f6e\u4e3a\u9759\u6001\u53d8\u91cf\uff0c\u6240\u6709\u6b64\u7c7b\u5b9e\u4f8b\u5171\u4eab\u6b64\u9759\u6001\u53d8\u91cf \uff0c\u4e5f\u5c31\u662f\u8bf4\u5728\u7c7b\u7b2c\u4e00\u6b21\u88ab\u4f7f\u7528\u65f6\u88c5\u8f7d\uff0c\u53ea\u5206\u914d\u4e00\u5757\u5b58\u50a8\u7a7a\u95f4\uff0c\u6240\u6709\u6b64\u7c7b\u7684\u5bf9\u8c61(\u53ea\u8981\u662f\u8fd9\u4e2a\u7ebf\u7a0b\u5185\u5b9a\u4e49\u7684)\u90fd\u53ef\u4ee5\u64cd\u63a7\u8fd9\u4e2a\u53d8\u91cf.","title":"1 6 concurrent"},{"location":"standard/includes/1_7_flow/","text":"\u3010\u5f3a\u5236\u3011 \u5728\u4e00\u4e2a switch \u5757\u5185\uff0c\u6bcf\u4e2a case \u8981\u4e48\u901a\u8fc7 break/return \u7b49\u6765\u7ec8\u6b62\uff0c\u8981\u4e48\u6ce8\u91ca\u8bf4\u660e\u7a0b\u5e8f\u5c06\u7ee7\u7eed\u6267\u884c\u5230\u54ea\u4e00\u4e2a case \u4e3a\u6b62\uff1b\u5728\u4e00\u4e2a switch \u5757\u5185\uff0c\u90fd\u5fc5\u987b\u5305\u542b\u4e00\u4e2a default \u8bed\u53e5\u5e76\u4e14\u653e\u5728\u6700\u540e\uff0c\u5373\u4f7f\u7a7a\u4ee3\u7801\u3002 \u3010\u5f3a\u5236\u3011 \u5728 if/else/for/while/do \u8bed\u53e5\u4e2d\u5fc5\u987b\u4f7f\u7528\u5927\u62ec\u53f7\u3002\u5373\u4f7f\u53ea\u6709\u4e00\u884c\u4ee3\u7801\uff0c\u907f\u514d\u91c7\u7528\u5355\u884c\u7684\u7f16\u7801\u65b9\u5f0f\uff1a if (condition) statements ; \u3010\u5f3a\u5236\u3011 \u5728\u9ad8\u5e76\u53d1\u573a\u666f\u4e2d\uff0c\u907f\u514d\u4f7f\u7528\u201d\u7b49\u4e8e\u201d\u5224\u65ad\u4f5c\u4e3a\u4e2d\u65ad\u6216\u9000\u51fa\u7684\u6761\u4ef6\u3002 \u8bf4\u660e \u5982\u679c\u5e76\u53d1\u63a7\u5236\u6ca1\u6709\u5904\u7406\u597d\uff0c\u5bb9\u6613\u4ea7\u751f\u7b49\u503c\u5224\u65ad\u88ab\u201c\u51fb\u7a7f\u201d\u7684\u60c5\u51b5\uff0c\u4f7f\u7528\u5927\u4e8e\u6216\u5c0f\u4e8e\u7684\u533a\u95f4\u5224\u65ad\u6761\u4ef6\u6765\u4ee3\u66ff\u3002 \u53cd\u4f8b \u5224\u65ad\u5269\u4f59\u5956\u54c1\u6570\u91cf\u7b49\u4e8e 0 \u65f6\uff0c\u7ec8\u6b62\u53d1\u653e\u5956\u54c1\uff0c\u4f46\u56e0\u4e3a\u5e76\u53d1\u5904\u7406\u9519\u8bef\u5bfc\u81f4\u5956\u54c1\u6570\u91cf\u77ac\u95f4\u53d8\u6210\u4e86\u8d1f\u6570\uff0c\u8fd9\u6837\u7684\u8bdd\uff0c\u6d3b\u52a8\u65e0\u6cd5\u7ec8\u6b62\u3002 \u3010\u63a8\u8350\u3011 \u8868\u8fbe\u5f02\u5e38\u7684\u5206\u652f\u65f6\uff0c\u5c11\u7528 if-else \u65b9\u5f0f\uff0c\u8fd9\u79cd\u65b9\u5f0f\u53ef\u4ee5\u6539\u5199\u6210\uff1a if ( condition ) { ... return obj ; } // \u63a5\u7740\u5199 else \u7684\u4e1a\u52a1\u903b\u8f91\u4ee3\u7801; \u8bf4\u660e \u5982\u679c\u975e\u5f97\u4f7f\u7528 if()...else if()...else... \u65b9\u5f0f\u8868\u8fbe\u903b\u8f91\uff0c \u3010\u5f3a\u5236\u3011 \u907f\u514d\u540e\u7eed\u4ee3\u7801\u7ef4\u62a4\u56f0\u96be\uff0c\u8bf7\u52ff\u8d85\u8fc7 3 \u5c42\u3002 \u6b63\u4f8b \u8d85\u8fc7 3 \u5c42\u7684 if-else \u7684\u903b\u8f91\u5224\u65ad\u4ee3\u7801\u53ef\u4ee5\u4f7f\u7528\u536b\u8bed\u53e5\u3001\u7b56\u7565\u6a21\u5f0f\u3001\u72b6\u6001\u6a21\u5f0f\u7b49\u6765\u5b9e\u73b0\uff0c\u5176\u4e2d\u536b\u8bed\u53e5\u793a\u4f8b\u5982\u4e0b\uff1a public void today () { if ( isBusy ()) { System . out . println ( \u201c change time . \u201d ); return ; } if ( isFree ()) { System . out . println ( \u201c go to travel . \u201d ); return ; } System . out . println ( \u201c stay at home to learn Alibaba Java Coding Guidelines . \u201d ); return ; } \u3010\u63a8\u8350\u3011 \u9664\u5e38\u7528\u65b9\u6cd5\uff08\u5982 getXxx/isXxx \uff09\u7b49\u5916\uff0c\u4e0d\u8981\u5728\u6761\u4ef6\u5224\u65ad\u4e2d\u6267\u884c\u5176\u5b83\u590d\u6742\u7684\u8bed\u53e5\uff0c\u5c06\u590d\u6742\u903b\u8f91\u5224\u65ad\u7684\u7ed3\u679c\u8d4b\u503c\u7ed9\u4e00\u4e2a\u6709\u610f\u4e49\u7684\u5e03\u5c14\u53d8\u91cf\u540d\uff0c\u4ee5\u63d0\u9ad8\u53ef\u8bfb\u6027\u3002 \u8bf4\u660e \u5f88\u591a if \u8bed\u53e5\u5185\u7684\u903b\u8f91\u76f8\u5f53\u590d\u6742\uff0c\u9605\u8bfb\u8005\u9700\u8981\u5206\u6790\u6761\u4ef6\u8868\u8fbe\u5f0f\u7684\u6700\u7ec8\u7ed3\u679c\uff0c\u624d\u80fd\u660e\u786e\u4ec0\u4e48\u6837\u7684\u6761\u4ef6\u6267\u884c\u4ec0\u4e48\u6837\u7684\u8bed\u53e5\uff0c\u90a3\u4e48\uff0c\u5982\u679c\u9605\u8bfb\u8005\u5206\u6790\u903b\u8f91\u8868\u8fbe\u5f0f\u9519\u8bef\u5462\uff1f \u6b63\u4f8b // \u4f2a\u4ee3\u7801\u5982\u4e0b final boolean existed = ( file . open ( fileName , \"w\" ) != null ) && (...) || (...); if ( existed ) { ... } \u53cd\u4f8b if (( file . open ( fileName , \"w\" ) != null ) && (...) || (...)) { \u3010\u63a8\u8350\u3011 \u5faa\u73af\u4f53\u4e2d\u7684\u8bed\u53e5\u8981\u8003\u91cf\u6027\u80fd\uff0c\u4ee5\u4e0b\u64cd\u4f5c\u5c3d\u91cf\u79fb\u81f3\u5faa\u73af\u4f53\u5916\u5904\u7406\uff0c\u5982\u5b9a\u4e49\u5bf9\u8c61\u3001\u53d8\u91cf\u3001\u83b7\u53d6\u6570\u636e\u5e93\u8fde\u63a5\uff0c\u8fdb\u884c\u4e0d\u5fc5\u8981\u7684 try-catch \u64cd\u4f5c \uff08\u8fd9\u4e2a try-catch \u662f\u5426\u53ef\u4ee5\u79fb\u81f3\u5faa\u73af\u4f53\u5916\uff09\u3002 \u3010\u63a8\u8350\u3011 \u907f\u514d\u91c7\u7528\u53d6\u53cd\u903b\u8f91\u8fd0\u7b97\u7b26\u3002 \u8bf4\u660e \u53d6\u53cd\u903b\u8f91\u4e0d\u5229\u4e8e\u5feb\u901f\u7406\u89e3\uff0c\u5e76\u4e14\u53d6\u53cd\u903b\u8f91\u5199\u6cd5\u5fc5\u7136\u5b58\u5728\u5bf9\u5e94\u7684\u6b63\u5411\u903b\u8f91\u5199\u6cd5\u3002 \u6b63\u4f8b \u4f7f\u7528 if (x < 628) \u6765\u8868\u8fbe x \u5c0f\u4e8e 628\u3002 \u53cd\u4f8b \u4f7f\u7528 if (!(x >= 628)) \u6765\u8868\u8fbe x \u5c0f\u4e8e 628\u3002 \u3010\u63a8\u8350\u3011 \u63a5\u53e3\u5165\u53c2\u4fdd\u62a4\uff0c\u8fd9\u79cd\u573a\u666f\u5e38\u89c1\u7684\u662f\u7528\u4f5c\u6279\u91cf\u64cd\u4f5c\u7684\u63a5\u53e3\u3002 \u3010\u53c2\u8003\u3011 \u4e0b\u5217\u60c5\u5f62\uff0c\u9700\u8981\u8fdb\u884c\u53c2\u6570\u6821\u9a8c\uff1a \u8c03\u7528\u9891\u6b21\u4f4e\u7684\u65b9\u6cd5\u3002 \u6267\u884c\u65f6\u95f4\u5f00\u9500\u5f88\u5927\u7684\u65b9\u6cd5\u3002\u6b64\u60c5\u5f62\u4e2d\uff0c\u53c2\u6570\u6821\u9a8c\u65f6\u95f4\u51e0\u4e4e\u53ef\u4ee5\u5ffd\u7565\u4e0d\u8ba1\uff0c\u4f46\u5982\u679c\u56e0\u4e3a\u53c2\u6570\u9519\u8bef\u5bfc\u81f4\u4e2d\u95f4\u6267\u884c\u56de\u9000\uff0c\u6216\u8005\u9519\u8bef\uff0c\u90a3\u5f97\u4e0d\u507f\u5931\u3002 \u9700\u8981\u6781\u9ad8\u7a33\u5b9a\u6027\u548c\u53ef\u7528\u6027\u7684\u65b9\u6cd5\u3002 \u5bf9\u5916\u63d0\u4f9b\u7684\u5f00\u653e\u63a5\u53e3\uff0c\u4e0d\u7ba1\u662f RPC/API/HTTP \u63a5\u53e3\u3002 \u654f\u611f\u6743\u9650\u5165\u53e3\u3002 \u3010\u53c2\u8003\u3011 \u4e0b\u5217\u60c5\u5f62\uff0c\u4e0d\u9700\u8981\u8fdb\u884c\u53c2\u6570\u6821\u9a8c\uff1a \u6781\u6709\u53ef\u80fd\u88ab\u5faa\u73af\u8c03\u7528\u7684\u65b9\u6cd5\u3002\u4f46\u5728\u65b9\u6cd5\u8bf4\u660e\u91cc\u5fc5\u987b\u6ce8\u660e\u5916\u90e8\u53c2\u6570\u68c0\u67e5\u8981\u6c42\u3002 \u5e95\u5c42\u8c03\u7528\u9891\u5ea6\u6bd4\u8f83\u9ad8\u7684\u65b9\u6cd5\u3002\u6bd5\u7adf\u662f\u50cf\u7eaf\u51c0\u6c34\u8fc7\u6ee4\u7684\u6700\u540e\u4e00\u9053\uff0c\u53c2\u6570\u9519\u8bef\u4e0d\u592a\u53ef\u80fd\u5230\u5e95\u5c42\u624d\u4f1a\u66b4\u9732\u95ee\u9898\u3002\u4e00\u822c DAO \u5c42\u4e0e Service \u5c42\u90fd\u5728\u540c\u4e00\u4e2a\u5e94\u7528\u4e2d\uff0c \u90e8\u7f72\u5728\u540c\u4e00\u53f0\u670d\u52a1\u5668\u4e2d\uff0c\u6240\u4ee5 DAO \u7684\u53c2\u6570\u6821\u9a8c\uff0c\u53ef\u4ee5\u7701\u7565\u3002 \u88ab\u58f0\u660e\u6210 private \u53ea\u4f1a\u88ab\u81ea\u5df1\u4ee3\u7801\u6240\u8c03\u7528\u7684\u65b9\u6cd5\uff0c\u5982\u679c\u80fd\u591f\u786e\u5b9a\u8c03\u7528\u65b9\u6cd5\u7684\u4ee3\u7801\u4f20\u5165\u53c2\u6570\u5df2\u7ecf\u505a\u8fc7\u68c0\u67e5\u6216\u8005\u80af\u5b9a\u4e0d\u4f1a\u6709\u95ee\u9898\uff0c\u6b64\u65f6\u53ef\u4ee5\u4e0d\u6821\u9a8c\u53c2\u6570\u3002","title":"1 7 flow"},{"location":"standard/includes/1_8_annotation/","text":"\u3010\u5f3a\u5236\u3011 \u7c7b\u3001\u7c7b\u5c5e\u6027\u3001\u7c7b\u65b9\u6cd5\u7684\u6ce8\u91ca\u5fc5\u987b\u4f7f\u7528 Javadoc \u89c4\u8303\uff0c\u4f7f\u7528/**\u5185\u5bb9*/\u683c\u5f0f\uff0c\u4e0d\u5f97\u4f7f\u7528// xxx \u65b9\u5f0f\u3002 \u8bf4\u660e \u5728 IDE \u7f16\u8f91\u7a97\u53e3\u4e2d\uff0cJavadoc \u65b9\u5f0f\u4f1a\u63d0\u793a\u76f8\u5173\u6ce8\u91ca\uff0c\u751f\u6210 Javadoc \u53ef\u4ee5\u6b63\u786e\u8f93\u51fa\u76f8\u5e94\u6ce8\u91ca\uff1b \u5728 IDE \u4e2d\uff0c\u5de5\u7a0b\u8c03\u7528\u65b9\u6cd5\u65f6\uff0c\u4e0d\u8fdb\u5165\u65b9\u6cd5\u5373\u53ef\u60ac\u6d6e\u63d0\u793a\u65b9\u6cd5\u3001\u53c2\u6570\u3001\u8fd4\u56de\u503c\u7684\u610f\u4e49\uff0c\u63d0\u9ad8\u9605\u8bfb\u6548\u7387\u3002 \u3010\u5f3a\u5236\u3011 \u65b9\u6cd5\u5185\u90e8\u5355\u884c\u6ce8\u91ca\uff0c\u5728\u88ab\u6ce8\u91ca\u8bed\u53e5\u4e0a\u65b9\u53e6\u8d77\u4e00\u884c\uff0c\u4f7f\u7528 // \u6ce8\u91ca\u3002\u65b9\u6cd5\u5185\u90e8\u591a\u884c\u6ce8\u91ca\u4f7f\u7528 /**/ \u6ce8\u91ca\uff0c\u6ce8\u610f\u4e0e\u4ee3\u7801\u5bf9\u9f50\u3002 \u3010\u63a8\u8350\u3011 \u4e0e\u5176 \u201c\u534a\u540a\u5b50\u201d \u82f1\u6587\u6765\u6ce8\u91ca\uff0c\u4e0d\u5982\u7528\u4e2d\u6587\u6ce8\u91ca\u628a\u95ee\u9898\u8bf4\u6e05\u695a\u3002\u4e13\u6709\u540d\u8bcd\u4e0e\u5173\u952e\u5b57\u4fdd\u6301\u82f1\u6587\u539f\u6587\u5373\u53ef\u3002 \u53cd\u4f8b \u201cTCP \u8fde\u63a5\u8d85\u65f6\u201d \u89e3\u91ca\u6210 \u201c\u4f20\u8f93\u63a7\u5236\u534f\u8bae\u8fde\u63a5\u8d85\u65f6\u201d\uff0c\u7406\u89e3\u53cd\u800c\u8d39\u8111\u7b4b\u3002 \u3010\u63a8\u8350\u3011 \u4ee3\u7801\u4fee\u6539\u7684\u540c\u65f6\uff0c\u6ce8\u91ca\u4e5f\u8981\u8fdb\u884c\u76f8\u5e94\u7684\u4fee\u6539\uff0c\u5c24\u5176\u662f\u53c2\u6570\u3001\u8fd4\u56de\u503c\u3001\u5f02\u5e38\u3001\u6838\u5fc3\u903b\u8f91\u7b49\u7684\u4fee\u6539\u3002 \u8bf4\u660e \u4ee3\u7801\u4e0e\u6ce8\u91ca\u66f4\u65b0\u4e0d\u540c\u6b65\uff0c\u5c31\u50cf\u8def\u7f51\u4e0e\u5bfc\u822a\u8f6f\u4ef6\u66f4\u65b0\u4e0d\u540c\u6b65\u4e00\u6837\uff0c\u5982\u679c\u5bfc\u822a\u8f6f\u4ef6\u4e25\u91cd\u6ede\u540e\uff0c\u5c31\u5931\u53bb\u4e86\u5bfc\u822a\u7684\u610f\u4e49\u3002 \u3010\u53c2\u8003\u3011 \u8c28\u614e\u6ce8\u91ca\u6389\u4ee3\u7801\u3002\u5728\u4e0a\u65b9\u8be6\u7ec6\u8bf4\u660e\uff0c\u800c\u4e0d\u662f\u7b80\u5355\u5730\u6ce8\u91ca\u6389\u3002\u5982\u679c\u65e0\u7528\uff0c\u5219\u5220\u9664\u3002 \u8bf4\u660e \u4ee3\u7801\u88ab\u6ce8\u91ca\u6389\u6709\u4e24\u79cd\u53ef\u80fd\u6027\uff1a 1. \u540e\u7eed\u4f1a\u6062\u590d\u6b64\u6bb5\u4ee3\u7801\u903b\u8f91\u3002 2. \u6c38\u4e45\u4e0d\u7528\u3002\u524d\u8005\u5982\u679c\u6ca1\u6709\u5907\u6ce8\u4fe1\u606f\uff0c\u96be\u4ee5\u77e5\u6653\u6ce8\u91ca\u52a8\u673a\u3002\u540e\u8005\u5efa\u8bae\u76f4\u63a5\u5220\u6389\uff08\u4ee3\u7801\u4ed3\u5e93\u4fdd\u5b58\u4e86\u5386\u53f2\u4ee3\u7801\uff09\u3002 \u3010\u53c2\u8003\u3011 \u5bf9\u4e8e\u6ce8\u91ca\u7684\u8981\u6c42\uff1a| \u80fd\u591f\u51c6\u786e\u53cd\u5e94\u8bbe\u8ba1\u601d\u60f3\u548c\u4ee3\u7801\u903b\u8f91\uff1b \u80fd\u591f\u63cf\u8ff0\u4e1a\u52a1\u542b\u4e49\uff0c\u4f7f\u522b\u7684\u7a0b\u5e8f\u5458\u80fd\u591f\u8fc5\u901f\u4e86\u89e3\u5230\u4ee3\u7801\u80cc\u540e\u7684\u4fe1\u606f\u3002\u5b8c\u5168\u6ca1\u6709\u6ce8\u91ca\u7684\u5927\u6bb5\u4ee3\u7801\u5bf9\u4e8e\u9605\u8bfb\u8005\u5f62\u540c\u5929\u4e66\uff0c\u6ce8\u91ca\u662f\u7ed9\u81ea\u5df1\u770b\u7684\uff0c\u5373\u4f7f\u9694\u5f88\u957f\u65f6\u95f4\uff0c\u4e5f\u80fd\u6e05\u6670\u7406\u89e3\u5f53\u65f6\u7684\u601d\u8def\uff1b\u6ce8\u91ca\u4e5f\u662f\u7ed9\u7ee7\u4efb\u8005\u770b\u7684\uff0c\u4f7f\u5176\u80fd\u591f\u5feb\u901f\u63a5\u66ff\u81ea\u5df1\u7684\u5de5\u4f5c\u3002 \u3010\u53c2\u8003\u3011 \u597d\u7684\u547d\u540d\u3001\u4ee3\u7801\u7ed3\u6784\u662f\u81ea\u89e3\u91ca\u7684\uff0c\u6ce8\u91ca\u529b\u6c42\u7cbe\u7b80\u51c6\u786e\u3001\u8868\u8fbe\u5230\u4f4d\u3002\u907f\u514d\u51fa\u73b0\u6ce8\u91ca\u7684\u4e00\u4e2a\u6781\u7aef\uff1a\u8fc7\u591a\u8fc7\u6ee5\u7684\u6ce8\u91ca\uff0c\u4ee3\u7801\u7684\u903b\u8f91\u4e00\u65e6\u4fee\u6539\uff0c\u4fee\u6539\u6ce8\u91ca\u662f\u76f8\u5f53\u5927\u7684\u8d1f\u62c5\u3002 \u53cd\u4f8b // put elephant into fridge put(elephant, fridge); \u65b9\u6cd5\u540d put \uff0c \u52a0\u4e0a\u4e24\u4e2a\u6709\u610f\u4e49\u7684\u53d8\u91cf\u540d elephant \u548c fridge \uff0c \u5df2\u7ecf\u8bf4\u660e\u4e86\u8fd9\u662f\u5728\u5e72\u4ec0\u4e48 \uff0c \u8bed\u4e49\u6e05\u6670\u7684\u4ee3\u7801\u4e0d\u9700\u8981\u989d\u5916\u7684\u6ce8\u91ca \u3002 \u3010\u53c2\u8003\u3011 \u7279\u6b8a\u6ce8\u91ca\u6807\u8bb0\uff0c\u8bf7\u6ce8\u660e\u6807\u8bb0\u4eba\u4e0e\u6807\u8bb0\u65f6\u95f4\u3002\u6ce8\u610f\u53ca\u65f6\u5904\u7406\u8fd9\u4e9b\u6807\u8bb0\uff0c\u901a\u8fc7\u6807\u8bb0\u626b\u63cf\uff0c\u7ecf\u5e38\u6e05\u7406\u6b64\u7c7b\u6807\u8bb0\u3002\u7ebf\u4e0a\u6545\u969c\u6709\u65f6\u5019\u5c31\u662f\u6765\u6e90\u4e8e\u8fd9\u4e9b\u6807\u8bb0\u5904\u7684\u4ee3\u7801\u3002 \u5f85\u529e\u4e8b\u5b9c\uff08 TODO \uff09:\uff08 \u6807\u8bb0\u4eba\uff0c\u6807\u8bb0\u65f6\u95f4\uff0c[\u9884\u8ba1\u5904\u7406\u65f6\u95f4]\uff09 \u8868\u793a\u9700\u8981\u5b9e\u73b0\uff0c\u4f46\u76ee\u524d\u8fd8\u672a\u5b9e\u73b0\u7684\u529f\u80fd\u3002\u8fd9\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a Javadoc \u7684\u6807\u7b7e\uff0c\u76ee\u524d\u7684 Javadoc \u8fd8\u6ca1\u6709\u5b9e\u73b0\uff0c\u4f46\u5df2\u7ecf\u88ab\u5e7f\u6cdb\u4f7f\u7528\u3002\u53ea\u80fd\u5e94\u7528\u4e8e\u7c7b\uff0c \u63a5\u53e3\u548c\u65b9\u6cd5\uff08\u56e0\u4e3a\u5b83\u662f\u4e00\u4e2a Javadoc \u6807\u7b7e\uff09\u3002 \u9519\u8bef\uff0c\u4e0d\u80fd\u5de5\u4f5c\uff08 FIXME \uff09:\uff08\u6807\u8bb0\u4eba\uff0c\u6807\u8bb0\u65f6\u95f4\uff0c[\u9884\u8ba1\u5904\u7406\u65f6\u95f4]\uff09 \u5728\u6ce8\u91ca\u4e2d\u7528 FIXME \u6807\u8bb0\u67d0\u4ee3\u7801\u662f\u9519\u8bef\u7684\uff0c\u800c\u4e14\u4e0d\u80fd\u5de5\u4f5c\uff0c\u9700\u8981\u53ca\u65f6\u7ea0\u6b63\u7684\u60c5\u51b5\u3002","title":"1 8 annotation"},{"location":"standard/includes/1_9_other/","text":"\u3010\u5f3a\u5236\u3011 \u5728\u4f7f\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u65f6\uff0c\u5229\u7528\u597d\u5176\u9884\u7f16\u8bd1\u529f\u80fd\uff0c\u53ef\u4ee5\u6709\u6548\u52a0\u5feb\u6b63\u5219\u5339\u914d\u901f\u5ea6\u3002\u8bf4\u660e\uff1a\u4e0d\u8981\u5728\u65b9\u6cd5\u4f53\u5185\u5b9a\u4e49\uff1a Pattern pattern = Pattern.compile (\u201c\u89c4\u5219\u201d); \u3010\u5f3a\u5236\u3011 \u6ce8\u610f Math.random() \u8fd9\u4e2a\u65b9\u6cd5\u8fd4\u56de\u662f double \u7c7b\u578b\uff0c\u6ce8\u610f\u53d6\u503c\u7684\u8303\u56f4 0\u2264x<1 \uff08\u80fd\u591f\u53d6\u5230\u96f6\u503c\uff0c\u6ce8\u610f\u9664\u96f6\u5f02\u5e38\uff09\uff0c \u5982\u679c\u60f3\u83b7\u53d6\u6574\u6570\u7c7b\u578b\u7684\u968f\u673a\u6570\uff0c\u4e0d\u8981\u5c06 x \u653e\u5927 10 \u7684\u82e5\u5e72\u500d\u7136\u540e\u53d6\u6574\uff0c\u76f4\u63a5\u4f7f\u7528 Random \u5bf9\u8c61\u7684 nextInt \u6216\u8005 nextLong \u65b9\u6cd5\u3002 \u3010\u5f3a\u5236\u3011 \u83b7\u53d6\u5f53\u524d\u6beb\u79d2\u6570 System.currentTimeMillis() ; \u800c\u4e0d\u662f new Date().getTime() ; \u8bf4\u660e \u5982\u679c\u60f3\u83b7\u53d6\u66f4\u52a0\u7cbe\u786e\u7684\u7eb3\u79d2\u7ea7\u65f6\u95f4\u503c\uff0c\u4f7f\u7528 System.nanoTime() \u7684\u65b9\u5f0f\u3002\u5728 JDK8 \u4e2d\uff0c\u9488\u5bf9\u7edf\u8ba1\u65f6\u95f4\u7b49\u573a\u666f\uff0c \u63a8\u8350\u4f7f\u7528 Instant \u7c7b\u3002 \u3010\u63a8\u8350\u3011 \u4e0d\u8981\u5728\u89c6\u56fe\u6a21\u677f\u4e2d\u52a0\u5165\u4efb\u4f55\u590d\u6742\u7684\u903b\u8f91\u3002 \u8bf4\u660e\uff1a\u6839\u636e MVC \u7406\u8bba\uff0c\u89c6\u56fe\u7684\u804c\u8d23\u662f\u5c55\u793a\uff0c\u4e0d\u8981\u62a2\u6a21\u578b\u548c\u63a7\u5236\u5668\u7684\u6d3b\u3002 \u3010\u63a8\u8350\u3011 \u4efb\u4f55\u6570\u636e\u7ed3\u6784\u7684\u6784\u9020\u6216\u521d\u59cb\u5316\uff0c\u90fd\u5e94\u6307\u5b9a\u5927\u5c0f\uff0c\u907f\u514d\u6570\u636e\u7ed3\u6784\u65e0\u9650\u589e\u957f\u5403\u5149\u5185\u5b58\u3002 \u3010\u63a8\u8350\u3011 \u53ca\u65f6\u6e05\u7406\u4e0d\u518d\u4f7f\u7528\u7684\u4ee3\u7801\u6bb5\u6216\u914d\u7f6e\u4fe1\u606f\u3002 \u8bf4\u660e \u5982\u5bf9\u4e8e\u5783\u573e\u4ee3\u7801\u6216\u8fc7\u65f6\u914d\u7f6e\uff0c\u575a\u51b3\u6e05\u7406\u5e72\u51c0\uff0c\u907f\u514d\u7a0b\u5e8f\u8fc7\u5ea6\u81c3\u80bf\uff0c\u4ee3\u7801\u5197\u4f59\u3002 \u6b63\u4f8b \u5bf9\u4e8e\u6682\u65f6\u88ab\u6ce8\u91ca\u6389\uff0c\u540e\u7eed\u53ef\u80fd\u6062\u590d\u4f7f\u7528\u7684\u4ee3\u7801\u7247\u65ad\uff0c\u5728\u6ce8\u91ca\u4ee3\u7801\u4e0a\u65b9\uff0c\u7edf\u4e00\u89c4\u5b9a\u4f7f\u7528\u4e09\u4e2a\u659c\u6760( /// )\u6765\u8bf4\u660e \u6ce8\u91ca\u6389\u4ee3\u7801\u7684\u7406\u7531\u3002","title":"1 9 other"},{"location":"standard/includes/2_1_exception_handle/","text":"\u3010\u5f3a\u5236\u3011 Java \u7c7b\u5e93\u4e2d\u5b9a\u4e49\u7684\u53ef\u4ee5\u901a\u8fc7\u9884\u68c0\u67e5\u65b9\u5f0f\u89c4\u907f\u7684 RuntimeException \u5f02\u5e38\u4e0d\u5e94\u8be5\u901a\u8fc7catch \u7684\u65b9\u5f0f\u6765\u5904\u7406\uff0c \u6bd4\u5982\uff1aNullPointerException\uff0cIndexOutOfBoundsException \u7b49\u7b49\u3002 \u8bf4\u660e \u65e0\u6cd5\u901a\u8fc7\u9884\u68c0\u67e5\u7684\u5f02\u5e38\u9664\u5916\uff0c\u6bd4\u5982\uff0c\u5728\u89e3\u6790\u5b57\u7b26\u4e32\u5f62\u5f0f\u7684\u6570\u5b57\u65f6\uff0c\u4e0d\u5f97\u4e0d\u901a\u8fc7 catchNumberFormatException \u6765\u5b9e\u73b0\u3002 \u6b63\u4f8b if ( obj != null ) {...} \u53cd\u4f8b try { obj . method (); } catch ( NullPointerException e ) { \u2026 } \u3010\u5f3a\u5236\u3011 \u5f02\u5e38\u4e0d\u8981\u7528\u6765\u505a\u6d41\u7a0b\u63a7\u5236\uff0c\u6761\u4ef6\u63a7\u5236\u3002 \u8bf4\u660e \u5f02\u5e38\u8bbe\u8ba1\u7684\u521d\u8877\u662f\u89e3\u51b3\u7a0b\u5e8f\u8fd0\u884c\u4e2d\u7684\u5404\u79cd\u610f\u5916\u60c5\u51b5\uff0c\u4e14\u5f02\u5e38\u7684\u5904\u7406\u6548\u7387\u6bd4\u6761\u4ef6\u5224\u65ad\u65b9\u5f0f\u8981\u4f4e\u5f88\u591a\u3002 \u3010\u5f3a\u5236\u3011 catch \u65f6\u8bf7\u5206\u6e05\u7a33\u5b9a\u4ee3\u7801\u548c\u975e\u7a33\u5b9a\u4ee3\u7801\uff0c\u7a33\u5b9a\u4ee3\u7801\u6307\u7684\u662f\u65e0\u8bba\u5982\u4f55\u4e0d\u4f1a\u51fa\u9519\u7684\u4ee3\u7801\u3002\u5bf9\u4e8e\u975e\u7a33\u5b9a\u4ee3\u7801\u7684 catch \u5c3d\u53ef\u80fd\u8fdb\u884c\u533a\u5206\u5f02\u5e38\u7c7b\u578b\uff0c\u518d\u505a\u5bf9\u5e94\u7684\u5f02\u5e38\u5904\u7406\u3002 \u8bf4\u660e \u5bf9\u5927\u6bb5\u4ee3\u7801\u8fdb\u884c try-catch\uff0c\u4f7f\u7a0b\u5e8f\u65e0\u6cd5\u6839\u636e\u4e0d\u540c\u7684\u5f02\u5e38\u505a\u51fa\u6b63\u786e\u7684\u5e94\u6fc0\u53cd\u5e94\uff0c\u4e5f\u4e0d\u5229\u4e8e\u5b9a\u4f4d\u95ee\u9898\uff0c\u8fd9\u662f\u4e00\u79cd\u4e0d\u8d1f\u8d23\u4efb\u7684\u8868\u73b0\u3002 \u6b63\u4f8b \u7528\u6237\u6ce8\u518c\u7684\u573a\u666f\u4e2d\uff0c\u5982\u679c\u7528\u6237\u8f93\u5165\u975e\u6cd5\u5b57\u7b26\uff0c\u6216\u7528\u6237\u540d\u79f0\u5df2\u5b58\u5728\uff0c\u6216\u7528\u6237\u8f93\u5165\u5bc6\u7801\u8fc7\u4e8e\u7b80\u5355\uff0c\u5728\u7a0b\u5e8f\u4e0a\u4f5c\u51fa\u5206\u95e8\u522b\u7c7b\u7684\u5224\u65ad\uff0c\u5e76\u63d0\u793a\u7ed9\u7528\u6237\u3002 \u3010\u5f3a\u5236\u3011 \u6355\u83b7\u5f02\u5e38\u662f\u4e3a\u4e86\u5904\u7406\u5b83\uff0c\u4e0d\u8981\u6355\u83b7\u4e86\u5374\u4ec0\u4e48\u90fd\u4e0d\u5904\u7406\u800c\u629b\u5f03\u4e4b\uff0c\u5982\u679c\u4e0d\u60f3\u5904\u7406\u5b83\uff0c\u8bf7\u5c06\u8be5\u5f02\u5e38\u629b\u7ed9\u5b83\u7684\u8c03\u7528\u8005\u3002\u6700\u5916\u5c42\u7684\u4e1a\u52a1\u4f7f\u7528\u8005\uff0c\u5fc5\u987b\u5904\u7406\u5f02\u5e38\uff0c\u5c06\u5176\u8f6c\u5316\u4e3a\u7528\u6237\u53ef\u4ee5\u7406\u89e3\u7684\u5185\u5bb9\u3002 \u3010\u5f3a\u5236\u3011 \u6709 try \u5757\u653e\u5230\u4e86\u4e8b\u52a1\u4ee3\u7801\u4e2d\uff0ccatch \u5f02\u5e38\u540e\uff0c\u5982\u679c\u9700\u8981\u56de\u6eda\u4e8b\u52a1\uff0c\u4e00\u5b9a\u8981\u6ce8\u610f\u624b\u52a8\u56de\u6eda\u4e8b\u52a1\u3002 \u3010\u5f3a\u5236\u3011 finally \u5757\u5fc5\u987b\u5bf9\u8d44\u6e90\u5bf9\u8c61\u3001\u6d41\u5bf9\u8c61\u8fdb\u884c\u5173\u95ed\uff0c\u6709\u5f02\u5e38\u4e5f\u8981\u505a try-catch\u3002 \u8bf4\u660e \u5982\u679c JDK7 \u53ca\u4ee5\u4e0a\uff0c\u53ef\u4ee5\u4f7f\u7528 try-with-resources \u65b9\u5f0f\u3002 \u3010\u5f3a\u5236\u3011 \u4e0d\u8981\u5728 finally \u5757\u4e2d\u4f7f\u7528 return\u3002 \u8bf4\u660e finally \u5757\u4e2d\u7684 return \u8fd4\u56de\u540e\u65b9\u6cd5\u7ed3\u675f\u6267\u884c\uff0c\u4e0d\u4f1a\u518d\u6267\u884c try \u5757\u4e2d\u7684 return \u8bed\u53e5\u3002 \u3010\u5f3a\u5236\u3011 \u6355\u83b7\u5f02\u5e38\u4e0e\u629b\u5f02\u5e38\uff0c\u5fc5\u987b\u662f\u5b8c\u5168\u5339\u914d\uff0c\u6216\u8005\u6355\u83b7\u5f02\u5e38\u662f\u629b\u5f02\u5e38\u7684\u7236\u7c7b\u3002 !!! note \"\u8bf4\u660e\" \u5982\u679c\u9884\u671f\u5bf9\u65b9\u629b\u7684\u662f\u7ee3\u7403\uff0c\u5b9e\u9645\u63a5\u5230\u7684\u662f\u94c5\u7403\uff0c\u5c31\u4f1a\u4ea7\u751f\u610f\u5916\u60c5\u51b5\u3002 \u3010\u63a8\u8350\u3011 \u65b9\u6cd5\u7684\u8fd4\u56de\u503c\u53ef\u4ee5\u4e3a null\uff0c\u4e0d\u5f3a\u5236\u8fd4\u56de\u7a7a\u96c6\u5408\uff0c\u6216\u8005\u7a7a\u5bf9\u8c61\u7b49\uff0c\u5fc5\u987b\u6dfb\u52a0\u6ce8\u91ca\u5145\u5206\u8bf4\u660e\u4ec0\u4e48\u60c5\u51b5\u4e0b\u4f1a\u8fd4\u56de null \u503c\u3002 \u8bf4\u660e \u672c\u624b\u518c\u660e\u786e\u9632\u6b62 NPE \u662f\u8c03\u7528\u8005\u7684\u8d23\u4efb\u3002\u5373\u4f7f\u88ab\u8c03\u7528\u65b9\u6cd5\u8fd4\u56de\u7a7a\u96c6\u5408\u6216\u8005\u7a7a\u5bf9\u8c61\uff0c\u5bf9\u8c03\u7528\u8005\u6765\u8bf4\uff0c\u4e5f\u5e76\u975e\u9ad8\u6795\u65e0\u5fe7\uff0c\u5fc5\u987b\u8003\u8651\u5230\u8fdc\u7a0b\u8c03\u7528\u5931\u8d25\u3001\u5e8f\u5217\u5316\u5931\u8d25\u3001 \u8fd0\u884c\u65f6\u5f02\u5e38\u7b49\u573a\u666f\u8fd4\u56denull \u7684\u60c5\u51b5\u3002 \u3010\u63a8\u8350\u3011 \u9632\u6b62 NPE\uff0c\u662f\u7a0b\u5e8f\u5458\u7684\u57fa\u672c\u4fee\u517b\uff0c\u6ce8\u610f NPE \u4ea7\u751f\u7684\u573a\u666f\uff1a \u8fd4\u56de\u7c7b\u578b\u4e3a\u57fa\u672c\u6570\u636e\u7c7b\u578b\uff0creturn \u5305\u88c5\u6570\u636e\u7c7b\u578b\u7684\u5bf9\u8c61\u65f6\uff0c\u81ea\u52a8\u62c6\u7bb1\u6709\u53ef\u80fd\u4ea7\u751f NPE\u3002 \u53cd\u4f8b public int f () { return Integer \u5bf9\u8c61 } \uff0c \u5982\u679c\u4e3a null \uff0c \u81ea\u52a8\u89e3\u7bb1\u629b NPE \u3002 \u6570\u636e\u5e93\u7684\u67e5\u8be2\u7ed3\u679c\u53ef\u80fd\u4e3a null\u3002 \u96c6\u5408\u91cc\u7684\u5143\u7d20\u5373\u4f7f isNotEmpty\uff0c\u53d6\u51fa\u7684\u6570\u636e\u5143\u7d20\u4e5f\u53ef\u80fd\u4e3a null\u3002 \u8fdc\u7a0b\u8c03\u7528\u8fd4\u56de\u5bf9\u8c61\u65f6\uff0c\u4e00\u5f8b\u8981\u6c42\u8fdb\u884c\u7a7a\u6307\u9488\u5224\u65ad\uff0c\u9632\u6b62 NPE\u3002 \u5bf9\u4e8e Session \u4e2d\u83b7\u53d6\u7684\u6570\u636e\uff0c\u5efa\u8bae NPE \u68c0\u67e5\uff0c\u907f\u514d\u7a7a\u6307\u9488\u3002 \u7ea7\u8054\u8c03\u7528 obj.getA().getB().getC()\uff1b\u4e00\u8fde\u4e32\u8c03\u7528\uff0c\u6613\u4ea7\u751f NPE\u3002 \u6b63\u4f8b \u4f7f\u7528 JDK8 \u7684 Optional \u7c7b\u6765\u9632\u6b62 NPE \u95ee\u9898\u3002 \u3010\u63a8\u8350\u3011 \u5b9a\u4e49\u65f6\u533a\u5206 unchecked / checked \u5f02\u5e38\uff0c\u907f\u514d\u76f4\u63a5\u629b\u51fa new RuntimeException()\uff0c \u66f4\u4e0d\u5141\u8bb8\u629b\u51fa Exception \u6216\u8005 Throwable\uff0c\u5e94\u4f7f\u7528\u6709\u4e1a\u52a1\u542b\u4e49\u7684\u81ea\u5b9a\u4e49\u5f02\u5e38\u3002\u63a8\u8350\u4e1a\u754c\u5df2\u5b9a\u4e49\u8fc7\u7684\u81ea\u5b9a\u4e49\u5f02\u5e38\uff0c \u5982\uff1aDAOException / ServiceException \u7b49\u3002 \u3010\u53c2\u8003\u3011 \u5bf9\u4e8e\u516c\u53f8\u5916\u7684 http/api \u5f00\u653e\u63a5\u53e3\u5fc5\u987b\u4f7f\u7528\u201c\u9519\u8bef\u7801\u201d\uff1b\u800c\u5e94\u7528\u5185\u90e8\u63a8\u8350\u5f02\u5e38\u629b\u51fa\uff1b\u8de8\u5e94\u7528\u95f4 RPC \u8c03\u7528\u4f18\u5148\u8003\u8651\u4f7f\u7528 Result \u65b9\u5f0f\uff0c \u5c01\u88c5 isSuccess()\u65b9\u6cd5\u3001\u201c\u9519\u8bef\u7801\u201d\u3001\u201c\u9519\u8bef\u7b80\u77ed\u4fe1\u606f\u201d\u3002 \u8bf4\u660e \u5173\u4e8e RPC \u65b9\u6cd5\u8fd4\u56de\u65b9\u5f0f\u4f7f\u7528 Result \u65b9\u5f0f\u7684\u7406\u7531\uff1a 1. \u4f7f\u7528\u629b\u5f02\u5e38\u8fd4\u56de\u65b9\u5f0f\uff0c\u8c03\u7528\u65b9\u5982\u679c\u6ca1\u6709\u6355\u83b7\u5230\u5c31\u4f1a\u4ea7\u751f\u8fd0\u884c\u65f6\u9519\u8bef\u3002 2. \u5982\u679c\u4e0d\u52a0\u6808\u4fe1\u606f\uff0c\u53ea\u662f new \u81ea\u5b9a\u4e49\u5f02\u5e38\uff0c\u52a0\u5165\u81ea\u5df1\u7684\u7406\u89e3\u7684 error message\uff0c\u5bf9\u4e8e\u8c03\u7528\u7aef\u89e3\u51b3\u95ee\u9898\u7684\u5e2e\u52a9\u4e0d\u4f1a\u592a\u591a\u3002\u5982\u679c\u52a0\u4e86\u6808\u4fe1\u606f\uff0c\u5728\u9891\u7e41\u8c03\u7528\u51fa\u9519\u7684\u60c5\u51b5\u4e0b\uff0c\u6570\u636e\u5e8f\u5217\u5316\u548c\u4f20\u8f93\u7684\u6027\u80fd\u635f\u8017\u4e5f\u662f\u95ee\u9898\u3002 \u3010\u53c2\u8003\u3011 \u907f\u514d\u51fa\u73b0\u91cd\u590d\u7684\u4ee3\u7801\uff08Don\u2019t Repeat Yourself\uff09\uff0c\u5373 DRY \u539f\u5219\u3002 \u8bf4\u660e \u968f\u610f\u590d\u5236\u548c\u7c98\u8d34\u4ee3\u7801\uff0c\u5fc5\u7136\u4f1a\u5bfc\u81f4\u4ee3\u7801\u7684\u91cd\u590d\uff0c\u5728\u4ee5\u540e\u9700\u8981\u4fee\u6539\u65f6\uff0c\u9700\u8981\u4fee\u6539\u6240\u6709\u7684\u526f\u672c\uff0c\u5bb9\u6613\u9057\u6f0f\u3002\u5fc5\u8981\u65f6\u62bd\u53d6\u5171\u6027\u65b9\u6cd5\uff0c\u6216\u8005\u62bd\u8c61\u516c\u5171\u7c7b\uff0c\u751a\u81f3\u662f\u7ec4\u4ef6\u5316\u3002 \u6b63\u4f8b \u4e00\u4e2a\u7c7b\u4e2d\u6709\u591a\u4e2a public \u65b9\u6cd5\uff0c\u90fd\u9700\u8981\u8fdb\u884c\u6570\u884c\u76f8\u540c\u7684\u53c2\u6570\u6821\u9a8c\u64cd\u4f5c\uff0c\u8fd9\u4e2a\u65f6\u5019\u8bf7\u62bd\u53d6\uff1a private boolean checkParam ( DTO dto ) {...}","title":"2 1 exception handle"},{"location":"standard/includes/2_2_exception_log/","text":"\u3010\u5f3a\u5236\u3011 \u5e94\u7528\u4e2d\u4e0d\u53ef\u76f4\u63a5\u4f7f\u7528\u65e5\u5fd7\u7cfb\u7edf\uff08Log4j\u3001Logback\uff09\u4e2d\u7684 API\uff0c\u800c\u5e94\u4f9d\u8d56\u4f7f\u7528\u65e5\u5fd7\u6846\u67b6SLF4J \u4e2d\u7684 API\uff0c\u4f7f\u7528\u95e8\u9762\u6a21\u5f0f\u7684\u65e5\u5fd7\u6846\u67b6\uff0c\u6709\u5229\u4e8e\u7ef4\u62a4\u548c\u5404\u4e2a\u7c7b\u7684\u65e5\u5fd7\u5904\u7406\u65b9\u5f0f\u7edf\u4e00\u3002 import org.slf4j.Logger ; import org.slf4j.LoggerFactory ; private static final Logger logger = LoggerFactory . getLogger ( Abc . class ); \u3010\u5f3a\u5236\u3011 \u65e5\u5fd7\u6587\u4ef6\u81f3\u5c11\u4fdd\u5b58 15 \u5929\uff0c\u56e0\u4e3a\u6709\u4e9b\u5f02\u5e38\u5177\u5907\u4ee5 \u201c\u5468\u201d \u4e3a\u9891\u6b21\u53d1\u751f\u7684\u7279\u70b9\u3002 \u3010\u5f3a\u5236\u3011 \u5e94\u7528\u4e2d\u7684\u6269\u5c55\u65e5\u5fd7\uff08\u5982\u6253\u70b9\u3001\u4e34\u65f6\u76d1\u63a7\u3001\u8bbf\u95ee\u65e5\u5fd7\u7b49\uff09\u547d\u540d\u65b9\u5f0f\uff1aappName_logType_logName.log\u3002 logType:\u65e5\u5fd7\u7c7b\u578b\uff0c\u5982 stats/monitor/access \u7b49\uff1b logName:\u65e5\u5fd7\u63cf\u8ff0\u3002\u8fd9\u79cd\u547d\u540d\u7684\u597d\u5904\uff1a\u901a\u8fc7\u6587\u4ef6\u540d\u5c31\u53ef\u77e5\u9053\u65e5\u5fd7\u6587\u4ef6\u5c5e\u4e8e\u4ec0\u4e48\u5e94\u7528\uff0c\u4ec0\u4e48\u7c7b\u578b\uff0c\u4ec0\u4e48\u76ee\u7684\uff0c\u4e5f\u6709\u5229\u4e8e\u5f52\u7c7b\u67e5\u627e\u3002 \u6b63\u4f8b mppserver \u5e94\u7528\u4e2d\u5355\u72ec\u76d1\u63a7\u65f6\u533a\u8f6c\u6362\u5f02\u5e38\uff0c\u5982\uff1amppserver_monitor_timeZoneConvert.log \u8bf4\u660e \u63a8\u8350\u5bf9\u65e5\u5fd7\u8fdb\u884c\u5206\u7c7b\uff0c\u5982\u5c06\u9519\u8bef\u65e5\u5fd7\u548c\u4e1a\u52a1\u65e5\u5fd7\u5206\u5f00\u5b58\u653e\uff0c\u4fbf\u4e8e\u5f00\u53d1\u4eba\u5458\u67e5\u770b\uff0c\u4e5f\u4fbf\u4e8e\u901a\u8fc7\u65e5\u5fd7\u5bf9\u7cfb\u7edf\u8fdb\u884c\u53ca\u65f6\u76d1\u63a7\u3002 \u3010\u5f3a\u5236\u3011 \u5bf9 trace/debug/info \u7ea7\u522b\u7684\u65e5\u5fd7\u8f93\u51fa\uff0c\u5fc5\u987b\u4f7f\u7528\u6761\u4ef6\u8f93\u51fa\u5f62\u5f0f\u6216\u8005\u4f7f\u7528\u5360\u4f4d\u7b26\u7684\u65b9\u5f0f\u3002 \u8bf4\u660e logger . debug ( \"Processing trade with id: \" + id + \" and symbol: \" + symbol ); \u5982\u679c\u65e5\u5fd7\u7ea7\u522b\u662f warn \uff0c \u4e0a\u8ff0\u65e5\u5fd7\u4e0d\u4f1a\u6253\u5370 \uff0c \u4f46\u662f\u4f1a\u6267\u884c\u5b57\u7b26\u4e32\u62fc\u63a5\u64cd\u4f5c \uff0c \u5982\u679c symbol \u662f\u5bf9\u8c61 \uff0c \u4f1a\u6267\u884c toString () \u65b9\u6cd5 \uff0c \u6d6a\u8d39\u4e86\u7cfb\u7edf\u8d44\u6e90 \uff0c \u6267\u884c\u4e86\u4e0a\u8ff0\u64cd\u4f5c \uff0c \u6700\u7ec8\u65e5\u5fd7\u5374\u6ca1\u6709\u6253\u5370 \u3002 \u6b63\u4f8b\uff08\u6761\u4ef6\uff09\u5efa\u8bbe\u91c7\u7528\u5982\u4e0b\u65b9\u5f0f if ( logger . isDebugEnabled ()) { logger . debug ( \"Processing trade with id: \" + id + \" and symbol: \" + symbol ); } \u6b63\u4f8b\uff08\u5360\u4f4d\u7b26\uff09 logger . debug ( \"Processing trade with id: {} and symbol : {} \" , id , symbol ); \u3010\u5f3a\u5236\u3011 \u907f\u514d\u91cd\u590d\u6253\u5370\u65e5\u5fd7\uff0c\u6d6a\u8d39\u78c1\u76d8\u7a7a\u95f4\uff0c\u52a1\u5fc5\u5728 log4j.xml \u4e2d\u8bbe\u7f6e additivity=false\u3002 \u6b63\u4f8b <logger name= \"com.taobao.dubbo.config\" additivity= \"false\" > \u3010\u5f3a\u5236\u3011 \u5f02\u5e38\u4fe1\u606f\u5e94\u8be5\u5305\u62ec\u4e24\u7c7b\u4fe1\u606f\uff1a\u6848\u53d1\u73b0\u573a\u4fe1\u606f\u548c\u5f02\u5e38\u5806\u6808\u4fe1\u606f\u3002\u5982\u679c\u4e0d\u5904\u7406\uff0c\u90a3\u4e48\u901a\u8fc7\u5173\u952e\u5b57 throws \u5f80\u4e0a\u629b\u51fa\u3002 \u6b63\u4f8b logger . error ( \u5404\u7c7b\u53c2\u6570\u6216\u8005\u5bf9\u8c61 toString () + \"_\" + e . getMessage (), e ); \u3010\u63a8\u8350\u3011 \u8c28\u614e\u5730\u8bb0\u5f55\u65e5\u5fd7\u3002\u751f\u4ea7\u73af\u5883\u7981\u6b62\u8f93\u51fa debug \u65e5\u5fd7\uff1b\u6709\u9009\u62e9\u5730\u8f93\u51fa info \u65e5\u5fd7\uff1b\u5982\u679c\u4f7f\u7528 warn \u6765\u8bb0\u5f55\u521a\u4e0a\u7ebf\u65f6\u7684\u4e1a\u52a1\u884c\u4e3a\u4fe1\u606f\uff0c\u4e00\u5b9a\u8981\u6ce8\u610f\u65e5\u5fd7\u8f93\u51fa\u91cf\u7684\u95ee\u9898\uff0c\u907f\u514d\u628a\u670d\u52a1\u5668\u78c1\u76d8\u6491\u7206\uff0c\u5e76\u8bb0\u5f97\u53ca\u65f6\u5220\u9664\u8fd9\u4e9b\u89c2\u5bdf\u65e5\u5fd7\u3002 \u8bf4\u660e \u5927\u91cf\u5730\u8f93\u51fa\u65e0\u6548\u65e5\u5fd7\uff0c\u4e0d\u5229\u4e8e\u7cfb\u7edf\u6027\u80fd\u63d0\u5347\uff0c\u4e5f\u4e0d\u5229\u4e8e\u5feb\u901f\u5b9a\u4f4d\u9519\u8bef\u70b9\u3002\u8bb0\u5f55\u65e5\u5fd7\u65f6\u8bf7\u601d\u8003\uff1a\u8fd9\u4e9b\u65e5\u5fd7\u771f\u7684\u6709\u4eba\u770b\u5417\uff1f\u770b\u5230\u8fd9\u6761\u65e5\u5fd7\u4f60\u80fd\u505a\u4ec0\u4e48\uff1f\u80fd\u4e0d\u80fd\u7ed9\u95ee\u9898\u6392\u67e5\u5e26\u6765\u597d\u5904\uff1f \u3010\u63a8\u8350\u3011 \u53ef\u4ee5\u4f7f\u7528 warn \u65e5\u5fd7\u7ea7\u522b\u6765\u8bb0\u5f55\u7528\u6237\u8f93\u5165\u53c2\u6570\u9519\u8bef\u7684\u60c5\u51b5\uff0c\u907f\u514d\u7528\u6237\u6295\u8bc9\u65f6\uff0c\u65e0\u6240\u9002\u4ece\u3002\u5982\u975e\u5fc5\u8981\uff0c\u8bf7\u4e0d\u8981\u5728\u6b64\u573a\u666f\u6253\u51fa error \u7ea7\u522b\uff0c\u907f\u514d\u9891\u7e41\u62a5\u8b66\u3002 \u8bf4\u660e \u6ce8\u610f\u65e5\u5fd7\u8f93\u51fa\u7684\u7ea7\u522b\uff0cerror \u7ea7\u522b\u53ea\u8bb0\u5f55\u7cfb\u7edf\u903b\u8f91\u51fa\u9519\u3001\u5f02\u5e38\u6216\u8005\u91cd\u8981\u7684\u9519\u8bef\u4fe1\u606f\u3002 \u3010\u63a8\u8350\u3011 \u5c3d\u91cf\u7528\u82f1\u6587\u6765\u63cf\u8ff0\u65e5\u5fd7\u9519\u8bef\u4fe1\u606f\uff0c\u5982\u679c\u65e5\u5fd7\u4e2d\u7684\u9519\u8bef\u4fe1\u606f\u7528\u82f1\u6587\u63cf\u8ff0\u4e0d\u6e05\u695a\u7684\u8bdd\u4f7f\u7528\u4e2d\u6587\u63cf\u8ff0\u5373\u53ef\uff0c\u5426\u5219\u5bb9\u6613\u4ea7\u751f\u6b67\u4e49\u3002 \u56fd\u9645\u5316\u56e2\u961f\u6216\u6d77\u5916\u90e8\u7f72\u7684\u670d\u52a1\u5668\u7531\u4e8e\u5b57\u7b26\u96c6\u95ee\u9898\uff0c \u3010\u5f3a\u5236\u3011 \u4f7f\u7528\u5168\u82f1\u6587\u6765\u6ce8\u91ca\u548c\u63cf\u8ff0\u65e5\u5fd7\u9519\u8bef\u4fe1\u606f.","title":"2 2 exception log"},{"location":"standard/includes/3_1_unit_test/","text":"","title":"3 1 unit test"},{"location":"standard/includes/4_1_security/","text":"","title":"4 1 security"},{"location":"standard/includes/5_1_table/","text":"","title":"5 1 table"},{"location":"standard/includes/5_2_index/","text":"","title":"5 2 index"},{"location":"standard/includes/5_3_sql/","text":"","title":"5 3 sql"},{"location":"standard/includes/5_4_orm/","text":"","title":"5 4 orm"}]}